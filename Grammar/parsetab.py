
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftMASMENOSleftMULTIPLICACIONDIVISIONrightUMENOSAD ARROW BOOL CADENA CHAR COMA DECIMAL DIVISION DPUNTOS ENTERO F64 FN I64 ID IGUAL LCOR LET LLLAV LPAR MAS MENOS MOD MULTIPLICACION MUT PCOMA PRINT PUB RCOR RLLAV RPAR STRING USIZE VEC aMUT aSTRinit : instrucciones_ginstrucciones_g : instrucciones_g instruccion_g\n    | instruccion_ginstruccion_g : funcioninstrucciones_l : instrucciones_l instruccion_l\n    | instruccion_linstruccion_l : print PCOMA\n    | declaracion PCOMA\n    | asignacion PCOMA\n    | llamada PCOMA\n    \n    funcion : FN ID LPAR lista_parametros RPAR ARROW tipo_var statement\n    | FN ID LPAR lista_parametros RPAR statement\n    | FN ID LPAR RPAR ARROW tipo_var statement\n    | FN ID LPAR RPAR statement\n    statement : LLLAV instrucciones_l RLLAV\n    | LLLAV RLLAVlista_parametros : lista_parametros COMA asignacion_simple\n    | asignacion_simpledeclaracion : LET asignacion_simple IGUAL exp\n    | LET MUT asignacion\n    | LET asignacionasignacion : ID IGUAL exp\n    | ID lista_arr IGUAL exp lista_arr : lista_arr LCOR exp RCOR\n    | LCOR exp RCORlista_exp : lista_exp COMA exp\n    | expasignacion_simple : ID DPUNTOS tipo_var\n    | ID DPUNTOS lista_arr2\n    | MUT ID DPUNTOS tipo_var\n    | MUT ID DPUNTOS lista_arr2lista_arr2 : LCOR lista_arr2 PCOMA exp RCOR\n    | LCOR tipo_var PCOMA exp RCORexp : valores\n    | LPAR valores LPAR\n    | expmath\n    | exparr\n    | IDexpmath : exp MAS exp\n    | exp MENOS exp\n    | exp MULTIPLICACION exp\n    | exp DIVISION exp\n    | MENOS exp %prec UMENOSexparr : ID lista_arr\n    | LCOR lista_exp RCOR\n    | LCOR exp PCOMA exp RCOR\n    valores : ENTERO\n    | DECIMAL\n    | CADENAprint : PRINT AD LPAR exp RPARllamada : ID LPAR RPAR\n    | ID LPAR lista_exp RPAR\n    tipo_var : I64\n    | F64\n    | BOOL\n    | CHAR\n    | aSTR\n    | STRING\n    | USIZE\n    | ID\n    '
    
_lr_action_items = {'FN':([0,2,3,4,6,18,33,37,50,51,70,],[5,5,-3,-4,-2,-14,-12,-16,-13,-15,-11,]),'$end':([1,2,3,4,6,18,33,37,50,51,70,],[0,-1,-3,-4,-2,-14,-12,-16,-13,-15,-11,]),'ID':([5,8,13,14,16,17,19,31,32,36,38,44,46,52,53,54,55,56,59,62,64,65,68,69,71,72,84,85,86,87,97,98,99,100,108,119,],[7,9,20,21,9,21,45,21,21,45,-6,61,21,-5,-7,-8,-9,-10,74,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,]),'LPAR':([7,45,57,62,64,65,68,69,71,72,81,82,83,84,85,86,87,97,98,99,100,101,108,119,],[8,64,71,78,78,78,78,78,78,78,-47,-48,-49,78,78,78,78,78,78,78,78,117,78,78,]),'RPAR':([8,10,12,21,22,23,24,25,26,27,28,29,30,34,64,66,67,75,77,79,80,81,82,83,89,90,94,96,102,109,110,111,113,114,115,116,117,118,120,121,123,],[11,15,-18,-60,-28,-29,-53,-54,-55,-56,-57,-58,-59,-17,88,-30,-31,-38,-34,-36,-37,-47,-48,-49,107,-27,112,-44,-43,-25,-32,-33,-39,-40,-41,-42,-35,-45,-24,-26,-46,]),'MUT':([8,16,44,],[13,13,59,]),'DPUNTOS':([9,20,61,74,],[14,46,14,46,]),'COMA':([10,12,21,22,23,24,25,26,27,28,29,30,34,66,67,75,77,79,80,81,82,83,89,90,96,102,103,104,109,110,111,113,114,115,116,117,118,120,121,123,],[16,-18,-60,-28,-29,-53,-54,-55,-56,-57,-58,-59,-17,-30,-31,-38,-34,-36,-37,-47,-48,-49,108,-27,-44,-43,108,-27,-25,-32,-33,-39,-40,-41,-42,-35,-45,-24,-26,-46,]),'ARROW':([11,15,],[17,32,]),'LLLAV':([11,15,21,24,25,26,27,28,29,30,35,49,],[19,19,-60,-53,-54,-55,-56,-57,-58,-59,19,19,]),'I64':([14,17,31,32,46,],[24,24,24,24,24,]),'F64':([14,17,31,32,46,],[25,25,25,25,25,]),'BOOL':([14,17,31,32,46,],[26,26,26,26,26,]),'CHAR':([14,17,31,32,46,],[27,27,27,27,27,]),'aSTR':([14,17,31,32,46,],[28,28,28,28,28,]),'STRING':([14,17,31,32,46,],[29,29,29,29,29,]),'USIZE':([14,17,31,32,46,],[30,30,30,30,30,]),'LCOR':([14,31,45,46,61,62,63,64,65,68,69,71,72,74,75,84,85,86,87,96,97,98,99,100,108,109,119,120,],[31,31,65,31,65,85,87,85,85,85,85,85,85,65,65,85,85,85,85,87,85,85,85,85,85,-25,85,-24,]),'RLLAV':([19,36,38,52,53,54,55,56,],[37,51,-6,-5,-7,-8,-9,-10,]),'PRINT':([19,36,38,52,53,54,55,56,],[43,43,-6,-5,-7,-8,-9,-10,]),'LET':([19,36,38,52,53,54,55,56,],[44,44,-6,-5,-7,-8,-9,-10,]),'IGUAL':([21,22,23,24,25,26,27,28,29,30,45,58,61,63,66,67,74,109,110,111,120,],[-60,-28,-29,-53,-54,-55,-56,-57,-58,-59,62,72,62,86,-30,-31,62,-25,-32,-33,-24,]),'PCOMA':([21,24,25,26,27,28,29,30,39,40,41,42,47,48,60,73,75,76,77,79,80,81,82,83,88,95,96,102,104,105,107,109,110,111,112,113,114,115,116,117,118,120,123,],[-60,-53,-54,-55,-56,-57,-58,-59,53,54,55,56,68,69,-21,-20,-38,-22,-34,-36,-37,-47,-48,-49,-51,-19,-44,-43,119,-23,-52,-25,-32,-33,-50,-39,-40,-41,-42,-35,-45,-24,-46,]),'AD':([43,],[57,]),'ENTERO':([62,64,65,68,69,71,72,78,84,85,86,87,97,98,99,100,108,119,],[81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'DECIMAL':([62,64,65,68,69,71,72,78,84,85,86,87,97,98,99,100,108,119,],[82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,]),'CADENA':([62,64,65,68,69,71,72,78,84,85,86,87,97,98,99,100,108,119,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'MENOS':([62,64,65,68,69,71,72,75,76,77,79,80,81,82,83,84,85,86,87,90,91,92,93,94,95,96,97,98,99,100,102,104,105,106,108,109,113,114,115,116,117,118,119,120,121,122,123,],[84,84,84,84,84,84,84,-38,98,-34,-36,-37,-47,-48,-49,84,84,84,84,98,98,98,98,98,98,-44,84,84,84,84,-43,98,98,98,84,-25,-39,-40,-41,-42,-35,-45,84,-24,98,98,-46,]),'MAS':([75,76,77,79,80,81,82,83,90,91,92,93,94,95,96,102,104,105,106,109,113,114,115,116,117,118,120,121,122,123,],[-38,97,-34,-36,-37,-47,-48,-49,97,97,97,97,97,97,-44,-43,97,97,97,-25,-39,-40,-41,-42,-35,-45,-24,97,97,-46,]),'MULTIPLICACION':([75,76,77,79,80,81,82,83,90,91,92,93,94,95,96,102,104,105,106,109,113,114,115,116,117,118,120,121,122,123,],[-38,99,-34,-36,-37,-47,-48,-49,99,99,99,99,99,99,-44,-43,99,99,99,-25,99,99,-41,-42,-35,-45,-24,99,99,-46,]),'DIVISION':([75,76,77,79,80,81,82,83,90,91,92,93,94,95,96,102,104,105,106,109,113,114,115,116,117,118,120,121,122,123,],[-38,100,-34,-36,-37,-47,-48,-49,100,100,100,100,100,100,-44,-43,100,100,100,-25,100,100,-41,-42,-35,-45,-24,100,100,-46,]),'RCOR':([75,77,79,80,81,82,83,91,92,93,96,102,103,104,106,109,113,114,115,116,117,118,120,121,122,123,],[-38,-34,-36,-37,-47,-48,-49,109,110,111,-44,-43,118,-27,120,-25,-39,-40,-41,-42,-35,-45,-24,-26,123,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones_g':([0,],[2,]),'instruccion_g':([0,2,],[3,6,]),'funcion':([0,2,],[4,4,]),'lista_parametros':([8,],[10,]),'asignacion_simple':([8,16,44,],[12,34,58,]),'statement':([11,15,35,49,],[18,33,50,70,]),'tipo_var':([14,17,31,32,46,],[22,35,48,49,66,]),'lista_arr2':([14,31,46,],[23,47,67,]),'instrucciones_l':([19,],[36,]),'instruccion_l':([19,36,],[38,52,]),'print':([19,36,],[39,39,]),'declaracion':([19,36,],[40,40,]),'asignacion':([19,36,44,59,],[41,41,60,73,]),'llamada':([19,36,],[42,42,]),'lista_arr':([45,61,74,75,],[63,63,63,96,]),'exp':([62,64,65,68,69,71,72,84,85,86,87,97,98,99,100,108,119,],[76,90,91,92,93,94,95,102,104,105,106,113,114,115,116,121,122,]),'valores':([62,64,65,68,69,71,72,78,84,85,86,87,97,98,99,100,108,119,],[77,77,77,77,77,77,77,101,77,77,77,77,77,77,77,77,77,77,]),'expmath':([62,64,65,68,69,71,72,84,85,86,87,97,98,99,100,108,119,],[79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,]),'exparr':([62,64,65,68,69,71,72,84,85,86,87,97,98,99,100,108,119,],[80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,80,]),'lista_exp':([64,85,],[89,103,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones_g','init',1,'p_init','parser.py',31),
  ('instrucciones_g -> instrucciones_g instruccion_g','instrucciones_g',2,'p_instrucciones_g','parser.py',35),
  ('instrucciones_g -> instruccion_g','instrucciones_g',1,'p_instrucciones_g','parser.py',36),
  ('instruccion_g -> funcion','instruccion_g',1,'p_instruccion','parser.py',43),
  ('instrucciones_l -> instrucciones_l instruccion_l','instrucciones_l',2,'p_instrucciones_l','parser.py',47),
  ('instrucciones_l -> instruccion_l','instrucciones_l',1,'p_instrucciones_l','parser.py',48),
  ('instruccion_l -> print PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',55),
  ('instruccion_l -> declaracion PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',56),
  ('instruccion_l -> asignacion PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',57),
  ('instruccion_l -> llamada PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',58),
  ('funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement','funcion',8,'p_funcion','parser.py',64),
  ('funcion -> FN ID LPAR lista_parametros RPAR statement','funcion',6,'p_funcion','parser.py',65),
  ('funcion -> FN ID LPAR RPAR ARROW tipo_var statement','funcion',7,'p_funcion','parser.py',66),
  ('funcion -> FN ID LPAR RPAR statement','funcion',5,'p_funcion','parser.py',67),
  ('statement -> LLLAV instrucciones_l RLLAV','statement',3,'p_statement','parser.py',77),
  ('statement -> LLLAV RLLAV','statement',2,'p_statement','parser.py',78),
  ('lista_parametros -> lista_parametros COMA asignacion_simple','lista_parametros',3,'p_lista_parametros','parser.py',83),
  ('lista_parametros -> asignacion_simple','lista_parametros',1,'p_lista_parametros','parser.py',84),
  ('declaracion -> LET asignacion_simple IGUAL exp','declaracion',4,'p_declaracion','parser.py',91),
  ('declaracion -> LET MUT asignacion','declaracion',3,'p_declaracion','parser.py',92),
  ('declaracion -> LET asignacion','declaracion',2,'p_declaracion','parser.py',93),
  ('asignacion -> ID IGUAL exp','asignacion',3,'p_asignacion','parser.py',99),
  ('asignacion -> ID lista_arr IGUAL exp','asignacion',4,'p_asignacion','parser.py',100),
  ('lista_arr -> lista_arr LCOR exp RCOR','lista_arr',4,'p_lista_arr','parser.py',106),
  ('lista_arr -> LCOR exp RCOR','lista_arr',3,'p_lista_arr','parser.py',107),
  ('lista_exp -> lista_exp COMA exp','lista_exp',3,'p_lista_exp','parser.py',114),
  ('lista_exp -> exp','lista_exp',1,'p_lista_exp','parser.py',115),
  ('asignacion_simple -> ID DPUNTOS tipo_var','asignacion_simple',3,'p_asignacion_simple','parser.py',122),
  ('asignacion_simple -> ID DPUNTOS lista_arr2','asignacion_simple',3,'p_asignacion_simple','parser.py',123),
  ('asignacion_simple -> MUT ID DPUNTOS tipo_var','asignacion_simple',4,'p_asignacion_simple','parser.py',124),
  ('asignacion_simple -> MUT ID DPUNTOS lista_arr2','asignacion_simple',4,'p_asignacion_simple','parser.py',125),
  ('lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR','lista_arr2',5,'p_lista_arr2','parser.py',135),
  ('lista_arr2 -> LCOR tipo_var PCOMA exp RCOR','lista_arr2',5,'p_lista_arr2','parser.py',136),
  ('exp -> valores','exp',1,'p_exp','parser.py',141),
  ('exp -> LPAR valores LPAR','exp',3,'p_exp','parser.py',142),
  ('exp -> expmath','exp',1,'p_exp','parser.py',143),
  ('exp -> exparr','exp',1,'p_exp','parser.py',144),
  ('exp -> ID','exp',1,'p_exp','parser.py',145),
  ('expmath -> exp MAS exp','expmath',3,'p_expmath','parser.py',153),
  ('expmath -> exp MENOS exp','expmath',3,'p_expmath','parser.py',154),
  ('expmath -> exp MULTIPLICACION exp','expmath',3,'p_expmath','parser.py',155),
  ('expmath -> exp DIVISION exp','expmath',3,'p_expmath','parser.py',156),
  ('expmath -> MENOS exp','expmath',2,'p_expmath','parser.py',157),
  ('exparr -> ID lista_arr','exparr',2,'p_exparr','parser.py',166),
  ('exparr -> LCOR lista_exp RCOR','exparr',3,'p_exparr','parser.py',167),
  ('exparr -> LCOR exp PCOMA exp RCOR','exparr',5,'p_exparr','parser.py',168),
  ('valores -> ENTERO','valores',1,'p_valores','parser.py',176),
  ('valores -> DECIMAL','valores',1,'p_valores','parser.py',177),
  ('valores -> CADENA','valores',1,'p_valores','parser.py',178),
  ('print -> PRINT AD LPAR exp RPAR','print',5,'p_print','parser.py',184),
  ('llamada -> ID LPAR RPAR','llamada',3,'p_llamada','parser.py',188),
  ('llamada -> ID LPAR lista_exp RPAR','llamada',4,'p_llamada','parser.py',189),
  ('tipo_var -> I64','tipo_var',1,'p_tipo_var','parser.py',195),
  ('tipo_var -> F64','tipo_var',1,'p_tipo_var','parser.py',196),
  ('tipo_var -> BOOL','tipo_var',1,'p_tipo_var','parser.py',197),
  ('tipo_var -> CHAR','tipo_var',1,'p_tipo_var','parser.py',198),
  ('tipo_var -> aSTR','tipo_var',1,'p_tipo_var','parser.py',199),
  ('tipo_var -> STRING','tipo_var',1,'p_tipo_var','parser.py',200),
  ('tipo_var -> USIZE','tipo_var',1,'p_tipo_var','parser.py',201),
  ('tipo_var -> ID','tipo_var',1,'p_tipo_var','parser.py',202),
]
