
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORleftANDrightADleftDIFIGUALIMENORIMAYORIMENORMAYORleftMASMENOSleftMULTIPLICACIONDIVISIONnonassocRPARLPARrightUMENOSAD AND ARROW ARROW2 BOOL BOOLEANO BREAK CADENA CHAR COMA CONTINUE DECIMAL DIF DIVISION DPUNTOS ELSE ENTERO F64 FN I64 ID IF IGUAL IGUALI LCOR LET LLLAV LOOP LPAR MAS MATCH MAYOR MAYORI MENOR MENORI MENOS MOD MULTIPLICACION MUT OR ORSINGLE PCOMA PRINT PUB RCOR RETURN RLLAV RPAR STRING USIZE VEC WHILE aMUT aSTRinit : instrucciones_ginstrucciones_g : instrucciones_g instruccion_g\n    | instruccion_ginstruccion_g : funcioninstrucciones_l : instrucciones_l instruccion_l\n    | instruccion_linstruccion_l : print PCOMA\n    | declaracion PCOMA\n    | asignacion PCOMA\n    | llamada PCOMA\n    | sentencia\n    | transferencia PCOMA\n    \n    funcion : FN ID LPAR lista_parametros RPAR ARROW tipo_var statement\n    | FN ID LPAR lista_parametros RPAR statement\n    | FN ID LPAR RPAR ARROW tipo_var statement\n    | FN ID LPAR RPAR statement\n    sentencia : if\n    | match\n    | loop\n    | whileif : IF exp statement elseelse : ELSE statement\n    | ELSE ifmatch : MATCH exp match_statementmatch_statement : LLLAV lista_brazos RLLAV\n    | LLLAV RLLAVlista_brazos : lista_brazos brazo\n    | brazobrazo : lista_exp_brazos ARROW2 instruccion_match COMA\n    | lista_exp_brazos ARROW2 statement COMA\n    | lista_exp_brazos ARROW2 statementlista_exp_brazos : lista_exp_brazos ORSINGLE exp\n    | expinstruccion_match : print\n    | llamada\n    | sentencia\n    | transferencialoop : LOOP statementwhile : WHILE exp statementtransferencia : BREAK\n    | RETURN\n    | RETURN exp\n    | CONTINUEstatement : LLLAV instrucciones_l RLLAV\n    | LLLAV RLLAVlista_parametros : lista_parametros COMA asignacion_simple\n    | asignacion_simpledeclaracion : LET asignacion_simple IGUAL exp\n    | LET MUT asignacion\n    | LET asignacionasignacion : ID IGUAL exp\n    | ID lista_arr IGUAL exp lista_arr : lista_arr LCOR exp RCOR\n    | LCOR exp RCORlista_exp : lista_exp COMA exp\n    | expasignacion_simple : ID DPUNTOS tipo_var\n    | ID DPUNTOS lista_arr2\n    | MUT ID DPUNTOS tipo_var\n    | MUT ID DPUNTOS lista_arr2lista_arr2 : LCOR lista_arr2 PCOMA exp RCOR\n    | LCOR tipo_var PCOMA exp RCORexp : valores\n    | LPAR valores LPAR\n    | expmath\n    | explog\n    | exprel\n    | exparr\n    | IDexpmath : exp MAS exp\n    | exp MENOS exp\n    | exp MULTIPLICACION exp\n    | exp DIVISION exp\n    | MENOS exp %prec UMENOSexplog : exp AND exp\n    | exp OR exp\n    | AD expexprel : exp IGUALI exp\n    | exp DIF exp\n    | exp MAYOR exp\n    | exp MENOR exp\n    | exp MAYORI exp\n    | exp MENORI expexparr : ID lista_arr\n    | LCOR lista_exp RCOR\n    | LCOR exp PCOMA exp RCOR\n    valores : ENTERO\n    | DECIMAL\n    | CADENA\n    | BOOLEANO\n    tipo_var : I64\n    | F64\n    | BOOL\n    | CHAR\n    | aSTR\n    | STRING\n    | USIZE\n    | ID\n    llamada : ID LPAR RPAR\n    | ID LPAR lista_exp RPARprint : PRINT AD LPAR exp RPAR'
    
_lr_action_items = {'FN':([0,2,3,4,6,18,33,37,63,64,103,],[5,5,-3,-4,-2,-16,-14,-45,-15,-44,-13,]),'$end':([1,2,3,4,6,18,33,37,63,64,103,],[0,-1,-3,-4,-2,-16,-14,-45,-15,-44,-13,]),'ID':([5,8,13,14,16,17,19,31,32,36,37,38,43,46,48,49,50,51,53,55,56,58,59,64,65,66,67,68,69,70,73,76,78,79,92,93,94,97,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,134,135,136,144,160,161,163,164,165,174,175,176,177,178,179,182,189,190,],[7,9,20,21,9,21,47,21,21,47,-45,-6,-11,75,-17,-18,-19,-20,87,87,87,87,21,-44,-5,-7,-8,-9,-10,-12,107,87,87,87,87,87,87,-38,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,-24,87,-39,87,87,-21,87,-26,-28,-22,-23,-25,-27,187,87,-31,-29,-30,]),'LPAR':([7,37,47,53,55,56,58,64,71,76,78,79,88,89,90,91,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,127,135,144,160,163,165,177,179,182,187,189,190,],[8,-45,78,82,82,82,82,-44,104,82,82,82,-87,-88,-89,-90,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,82,158,82,82,82,82,-28,-27,82,-31,78,-29,-30,]),'RPAR':([8,10,12,21,22,23,24,25,26,27,28,29,30,34,78,81,83,84,85,86,87,88,89,90,91,99,100,112,113,128,129,130,139,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,169,171,172,180,],[11,15,-47,-98,-57,-58,-91,-92,-93,-94,-95,-96,-97,-46,111,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,-59,-60,143,-56,-84,-74,-77,170,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,-61,-62,-53,-55,-86,]),'MUT':([8,16,46,],[13,13,73,]),'DPUNTOS':([9,20,75,107,],[14,59,14,59,]),'COMA':([10,12,21,22,23,24,25,26,27,28,29,30,34,37,48,49,50,51,52,53,54,64,80,81,83,84,85,86,87,88,89,90,91,97,99,100,111,112,113,128,129,130,131,132,134,136,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,164,168,169,170,171,172,174,175,176,180,181,182,183,184,185,186,],[16,-47,-98,-57,-58,-91,-92,-93,-94,-95,-96,-97,-46,-45,-17,-18,-19,-20,-40,-41,-43,-44,-42,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,-38,-59,-60,-99,144,-56,-84,-74,-77,144,-56,-24,-39,-100,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,-21,-26,-61,-62,-101,-53,-55,-22,-23,-25,-86,189,190,-34,-35,-36,-37,]),'ARROW':([11,15,],[17,32,]),'LLLAV':([11,15,21,24,25,26,27,28,29,30,35,57,62,81,83,84,85,86,87,88,89,90,91,95,96,98,128,129,130,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,162,171,178,180,],[19,19,-98,-91,-92,-93,-94,-95,-96,-97,19,19,19,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,19,135,19,-84,-74,-77,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,19,-53,19,-86,]),'I64':([14,17,31,32,59,],[24,24,24,24,24,]),'F64':([14,17,31,32,59,],[25,25,25,25,25,]),'BOOL':([14,17,31,32,59,],[26,26,26,26,26,]),'CHAR':([14,17,31,32,59,],[27,27,27,27,27,]),'aSTR':([14,17,31,32,59,],[28,28,28,28,28,]),'STRING':([14,17,31,32,59,],[29,29,29,29,29,]),'USIZE':([14,17,31,32,59,],[30,30,30,30,30,]),'LCOR':([14,31,37,47,53,55,56,58,59,64,75,76,77,78,79,87,92,93,94,101,102,104,105,107,109,110,115,116,117,118,119,120,121,122,123,124,125,126,128,135,144,145,160,163,165,171,177,179,182,189,190,],[31,31,-45,79,94,94,94,94,31,-44,79,94,110,94,94,79,94,94,94,94,94,94,94,79,94,94,94,94,94,94,94,94,94,94,94,94,94,94,110,94,94,-54,94,94,-28,-53,-27,94,-31,-29,-30,]),'RLLAV':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,135,136,161,163,164,165,174,175,176,177,182,189,190,],[37,64,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,164,-39,-21,176,-26,-28,-22,-23,-25,-27,-31,-29,-30,]),'PRINT':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[45,45,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,45,]),'LET':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,],[46,46,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,]),'BREAK':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[52,52,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,52,]),'RETURN':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[53,53,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,53,]),'CONTINUE':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[54,54,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,54,]),'IF':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,162,164,174,175,176,178,],[55,55,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,55,-26,-22,-23,-25,55,]),'MATCH':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[56,56,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,56,]),'LOOP':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[57,57,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,57,]),'WHILE':([19,36,37,38,43,48,49,50,51,64,65,66,67,68,69,70,97,134,136,161,164,174,175,176,178,],[58,58,-45,-6,-11,-17,-18,-19,-20,-44,-5,-7,-8,-9,-10,-12,-38,-24,-39,-21,-26,-22,-23,-25,58,]),'IGUAL':([21,22,23,24,25,26,27,28,29,30,47,72,75,77,99,100,107,145,168,169,171,],[-98,-57,-58,-91,-92,-93,-94,-95,-96,-97,76,105,76,109,-59,-60,76,-54,-61,-62,-53,]),'PCOMA':([21,24,25,26,27,28,29,30,39,40,41,42,44,52,53,54,60,61,74,80,81,83,84,85,86,87,88,89,90,91,106,108,111,128,129,130,132,140,141,143,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,168,169,170,171,180,],[-98,-91,-92,-93,-94,-95,-96,-97,66,67,68,69,70,-40,-41,-43,101,102,-50,-42,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,-49,-51,-99,-84,-74,-77,160,-48,-52,-100,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,-61,-62,-101,-53,-86,]),'ELSE':([37,64,133,],[-45,-44,162,]),'ENTERO':([37,53,55,56,58,64,76,78,79,82,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,165,177,179,182,189,190,],[-45,88,88,88,88,-44,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,88,-28,-27,88,-31,-29,-30,]),'DECIMAL':([37,53,55,56,58,64,76,78,79,82,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,165,177,179,182,189,190,],[-45,89,89,89,89,-44,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,89,-28,-27,89,-31,-29,-30,]),'CADENA':([37,53,55,56,58,64,76,78,79,82,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,165,177,179,182,189,190,],[-45,90,90,90,90,-44,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,-28,-27,90,-31,-29,-30,]),'BOOLEANO':([37,53,55,56,58,64,76,78,79,82,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,165,177,179,182,189,190,],[-45,91,91,91,91,-44,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,91,-28,-27,91,-31,-29,-30,]),'MENOS':([37,53,55,56,58,64,76,78,79,80,81,83,84,85,86,87,88,89,90,91,92,93,94,95,96,98,101,102,104,105,108,109,110,113,114,115,116,117,118,119,120,121,122,123,124,125,126,128,129,130,132,135,137,138,139,140,141,142,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,163,165,167,171,172,173,177,179,180,182,188,189,190,],[-45,92,92,92,92,-44,92,92,92,116,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,92,92,92,116,116,116,92,92,92,92,116,92,92,116,116,92,92,92,92,92,92,92,92,92,92,92,92,-84,-74,116,116,92,116,116,116,116,116,116,92,-54,-70,-71,-72,-73,116,116,116,116,116,116,116,116,-64,-85,92,92,-28,116,-53,116,116,-27,92,-86,-31,116,-29,-30,]),'AD':([37,45,53,55,56,58,64,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,165,177,179,182,189,190,],[-45,71,93,93,93,93,-44,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,-28,-27,93,-31,-29,-30,]),'MAS':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[115,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,115,115,115,115,115,115,-84,-74,115,115,115,115,115,115,115,115,-54,-70,-71,-72,-73,115,115,115,115,115,115,115,115,-64,-85,115,-53,115,115,-86,115,]),'MULTIPLICACION':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[117,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,117,117,117,117,117,117,-84,-74,117,117,117,117,117,117,117,117,-54,117,117,-72,-73,117,117,117,117,117,117,117,117,-64,-85,117,-53,117,117,-86,117,]),'DIVISION':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[118,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,118,118,118,118,118,118,-84,-74,118,118,118,118,118,118,118,118,-54,118,118,-72,-73,118,118,118,118,118,118,118,118,-64,-85,118,-53,118,118,-86,118,]),'AND':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[119,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,119,119,119,119,119,119,-84,-74,-77,119,119,119,119,119,119,119,-54,-70,-71,-72,-73,-75,119,-78,-79,-80,-81,-82,-83,-64,-85,119,-53,119,119,-86,119,]),'OR':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[120,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,120,120,120,120,120,120,-84,-74,-77,120,120,120,120,120,120,120,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,120,-53,120,120,-86,120,]),'IGUALI':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[121,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,121,121,121,121,121,121,-84,-74,121,121,121,121,121,121,121,121,-54,-70,-71,-72,-73,121,121,-78,-79,-80,-81,-82,-83,-64,-85,121,-53,121,121,-86,121,]),'DIF':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[122,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,122,122,122,122,122,122,-84,-74,122,122,122,122,122,122,122,122,-54,-70,-71,-72,-73,122,122,-78,-79,-80,-81,-82,-83,-64,-85,122,-53,122,122,-86,122,]),'MAYOR':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[123,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,123,123,123,123,123,123,-84,-74,123,123,123,123,123,123,123,123,-54,-70,-71,-72,-73,123,123,-78,-79,-80,-81,-82,-83,-64,-85,123,-53,123,123,-86,123,]),'MENOR':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[124,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,124,124,124,124,124,124,-84,-74,124,124,124,124,124,124,124,124,-54,-70,-71,-72,-73,124,124,-78,-79,-80,-81,-82,-83,-64,-85,124,-53,124,124,-86,124,]),'MAYORI':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[125,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,125,125,125,125,125,125,-84,-74,125,125,125,125,125,125,125,125,-54,-70,-71,-72,-73,125,125,-78,-79,-80,-81,-82,-83,-64,-85,125,-53,125,125,-86,125,]),'MENORI':([80,81,83,84,85,86,87,88,89,90,91,95,96,98,108,113,114,128,129,130,132,137,138,139,140,141,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,167,171,172,173,180,188,],[126,-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,126,126,126,126,126,126,-84,-74,126,126,126,126,126,126,126,126,-54,-70,-71,-72,-73,126,126,-78,-79,-80,-81,-82,-83,-64,-85,126,-53,126,126,-86,126,]),'RCOR':([81,83,84,85,86,87,88,89,90,91,114,128,129,130,131,132,137,138,142,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,171,172,173,180,],[-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,145,-84,-74,-77,159,-56,168,169,171,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,-53,-55,180,-86,]),'ARROW2':([81,83,84,85,86,87,88,89,90,91,128,129,130,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,166,167,171,180,188,],[-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,-84,-74,-77,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,178,-33,-53,-86,-32,]),'ORSINGLE':([81,83,84,85,86,87,88,89,90,91,128,129,130,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,166,167,171,180,188,],[-63,-65,-66,-67,-68,-69,-87,-88,-89,-90,-84,-74,-77,-54,-70,-71,-72,-73,-75,-76,-78,-79,-80,-81,-82,-83,-64,-85,179,-33,-53,-86,-32,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'init':([0,],[1,]),'instrucciones_g':([0,],[2,]),'instruccion_g':([0,2,],[3,6,]),'funcion':([0,2,],[4,4,]),'lista_parametros':([8,],[10,]),'asignacion_simple':([8,16,46,],[12,34,72,]),'statement':([11,15,35,57,62,95,98,162,178,],[18,33,63,97,103,133,136,174,182,]),'tipo_var':([14,17,31,32,59,],[22,35,61,62,99,]),'lista_arr2':([14,31,59,],[23,60,100,]),'instrucciones_l':([19,],[36,]),'instruccion_l':([19,36,],[38,65,]),'print':([19,36,178,],[39,39,183,]),'declaracion':([19,36,],[40,40,]),'asignacion':([19,36,46,73,],[41,41,74,106,]),'llamada':([19,36,178,],[42,42,184,]),'sentencia':([19,36,178,],[43,43,185,]),'transferencia':([19,36,178,],[44,44,186,]),'if':([19,36,162,178,],[48,48,175,48,]),'match':([19,36,178,],[49,49,49,]),'loop':([19,36,178,],[50,50,50,]),'while':([19,36,178,],[51,51,51,]),'lista_arr':([47,75,87,107,],[77,77,128,77,]),'exp':([53,55,56,58,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[80,95,96,98,108,113,114,129,130,132,137,138,139,140,141,142,146,147,148,149,150,151,152,153,154,155,156,157,167,172,173,167,188,]),'valores':([53,55,56,58,76,78,79,82,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[81,81,81,81,81,81,81,127,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,]),'expmath':([53,55,56,58,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,83,]),'explog':([53,55,56,58,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,]),'exprel':([53,55,56,58,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,85,]),'exparr':([53,55,56,58,76,78,79,92,93,94,101,102,104,105,109,110,115,116,117,118,119,120,121,122,123,124,125,126,135,144,160,163,179,],[86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,86,]),'lista_exp':([78,94,],[112,131,]),'match_statement':([96,],[134,]),'else':([133,],[161,]),'lista_brazos':([135,],[163,]),'brazo':([135,163,],[165,177,]),'lista_exp_brazos':([135,163,],[166,166,]),'instruccion_match':([178,],[181,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> init","S'",1,None,None,None),
  ('init -> instrucciones_g','init',1,'p_init','parser.py',47),
  ('instrucciones_g -> instrucciones_g instruccion_g','instrucciones_g',2,'p_instrucciones_g','parser.py',51),
  ('instrucciones_g -> instruccion_g','instrucciones_g',1,'p_instrucciones_g','parser.py',52),
  ('instruccion_g -> funcion','instruccion_g',1,'p_instruccion','parser.py',59),
  ('instrucciones_l -> instrucciones_l instruccion_l','instrucciones_l',2,'p_instrucciones_l','parser.py',63),
  ('instrucciones_l -> instruccion_l','instrucciones_l',1,'p_instrucciones_l','parser.py',64),
  ('instruccion_l -> print PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',71),
  ('instruccion_l -> declaracion PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',72),
  ('instruccion_l -> asignacion PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',73),
  ('instruccion_l -> llamada PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',74),
  ('instruccion_l -> sentencia','instruccion_l',1,'p_instruccion_l','parser.py',75),
  ('instruccion_l -> transferencia PCOMA','instruccion_l',2,'p_instruccion_l','parser.py',76),
  ('funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement','funcion',8,'p_funcion','parser.py',82),
  ('funcion -> FN ID LPAR lista_parametros RPAR statement','funcion',6,'p_funcion','parser.py',83),
  ('funcion -> FN ID LPAR RPAR ARROW tipo_var statement','funcion',7,'p_funcion','parser.py',84),
  ('funcion -> FN ID LPAR RPAR statement','funcion',5,'p_funcion','parser.py',85),
  ('sentencia -> if','sentencia',1,'p_sentencia','parser.py',95),
  ('sentencia -> match','sentencia',1,'p_sentencia','parser.py',96),
  ('sentencia -> loop','sentencia',1,'p_sentencia','parser.py',97),
  ('sentencia -> while','sentencia',1,'p_sentencia','parser.py',98),
  ('if -> IF exp statement else','if',4,'p_if','parser.py',102),
  ('else -> ELSE statement','else',2,'p_else','parser.py',106),
  ('else -> ELSE if','else',2,'p_else','parser.py',107),
  ('match -> MATCH exp match_statement','match',3,'p_match','parser.py',112),
  ('match_statement -> LLLAV lista_brazos RLLAV','match_statement',3,'p_match_statement','parser.py',116),
  ('match_statement -> LLLAV RLLAV','match_statement',2,'p_match_statement','parser.py',117),
  ('lista_brazos -> lista_brazos brazo','lista_brazos',2,'p_lista_brazos','parser.py',122),
  ('lista_brazos -> brazo','lista_brazos',1,'p_lista_brazos','parser.py',123),
  ('brazo -> lista_exp_brazos ARROW2 instruccion_match COMA','brazo',4,'p_brazo','parser.py',130),
  ('brazo -> lista_exp_brazos ARROW2 statement COMA','brazo',4,'p_brazo','parser.py',131),
  ('brazo -> lista_exp_brazos ARROW2 statement','brazo',3,'p_brazo','parser.py',132),
  ('lista_exp_brazos -> lista_exp_brazos ORSINGLE exp','lista_exp_brazos',3,'p_lista_exp_brazos','parser.py',136),
  ('lista_exp_brazos -> exp','lista_exp_brazos',1,'p_lista_exp_brazos','parser.py',137),
  ('instruccion_match -> print','instruccion_match',1,'p_instruction_match','parser.py',144),
  ('instruccion_match -> llamada','instruccion_match',1,'p_instruction_match','parser.py',145),
  ('instruccion_match -> sentencia','instruccion_match',1,'p_instruction_match','parser.py',146),
  ('instruccion_match -> transferencia','instruccion_match',1,'p_instruction_match','parser.py',147),
  ('loop -> LOOP statement','loop',2,'p_loop','parser.py',151),
  ('while -> WHILE exp statement','while',3,'p_while','parser.py',155),
  ('transferencia -> BREAK','transferencia',1,'p_transferencia','parser.py',159),
  ('transferencia -> RETURN','transferencia',1,'p_transferencia','parser.py',160),
  ('transferencia -> RETURN exp','transferencia',2,'p_transferencia','parser.py',161),
  ('transferencia -> CONTINUE','transferencia',1,'p_transferencia','parser.py',162),
  ('statement -> LLLAV instrucciones_l RLLAV','statement',3,'p_statement','parser.py',172),
  ('statement -> LLLAV RLLAV','statement',2,'p_statement','parser.py',173),
  ('lista_parametros -> lista_parametros COMA asignacion_simple','lista_parametros',3,'p_lista_parametros','parser.py',178),
  ('lista_parametros -> asignacion_simple','lista_parametros',1,'p_lista_parametros','parser.py',179),
  ('declaracion -> LET asignacion_simple IGUAL exp','declaracion',4,'p_declaracion','parser.py',186),
  ('declaracion -> LET MUT asignacion','declaracion',3,'p_declaracion','parser.py',187),
  ('declaracion -> LET asignacion','declaracion',2,'p_declaracion','parser.py',188),
  ('asignacion -> ID IGUAL exp','asignacion',3,'p_asignacion','parser.py',194),
  ('asignacion -> ID lista_arr IGUAL exp','asignacion',4,'p_asignacion','parser.py',195),
  ('lista_arr -> lista_arr LCOR exp RCOR','lista_arr',4,'p_lista_arr','parser.py',201),
  ('lista_arr -> LCOR exp RCOR','lista_arr',3,'p_lista_arr','parser.py',202),
  ('lista_exp -> lista_exp COMA exp','lista_exp',3,'p_lista_exp','parser.py',209),
  ('lista_exp -> exp','lista_exp',1,'p_lista_exp','parser.py',210),
  ('asignacion_simple -> ID DPUNTOS tipo_var','asignacion_simple',3,'p_asignacion_simple','parser.py',217),
  ('asignacion_simple -> ID DPUNTOS lista_arr2','asignacion_simple',3,'p_asignacion_simple','parser.py',218),
  ('asignacion_simple -> MUT ID DPUNTOS tipo_var','asignacion_simple',4,'p_asignacion_simple','parser.py',219),
  ('asignacion_simple -> MUT ID DPUNTOS lista_arr2','asignacion_simple',4,'p_asignacion_simple','parser.py',220),
  ('lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR','lista_arr2',5,'p_lista_arr2','parser.py',230),
  ('lista_arr2 -> LCOR tipo_var PCOMA exp RCOR','lista_arr2',5,'p_lista_arr2','parser.py',231),
  ('exp -> valores','exp',1,'p_exp','parser.py',236),
  ('exp -> LPAR valores LPAR','exp',3,'p_exp','parser.py',237),
  ('exp -> expmath','exp',1,'p_exp','parser.py',238),
  ('exp -> explog','exp',1,'p_exp','parser.py',239),
  ('exp -> exprel','exp',1,'p_exp','parser.py',240),
  ('exp -> exparr','exp',1,'p_exp','parser.py',241),
  ('exp -> ID','exp',1,'p_exp','parser.py',242),
  ('expmath -> exp MAS exp','expmath',3,'p_expmath','parser.py',252),
  ('expmath -> exp MENOS exp','expmath',3,'p_expmath','parser.py',253),
  ('expmath -> exp MULTIPLICACION exp','expmath',3,'p_expmath','parser.py',254),
  ('expmath -> exp DIVISION exp','expmath',3,'p_expmath','parser.py',255),
  ('expmath -> MENOS exp','expmath',2,'p_expmath','parser.py',256),
  ('explog -> exp AND exp','explog',3,'p_explog','parser.py',265),
  ('explog -> exp OR exp','explog',3,'p_explog','parser.py',266),
  ('explog -> AD exp','explog',2,'p_explog','parser.py',267),
  ('exprel -> exp IGUALI exp','exprel',3,'p_exprel','parser.py',274),
  ('exprel -> exp DIF exp','exprel',3,'p_exprel','parser.py',275),
  ('exprel -> exp MAYOR exp','exprel',3,'p_exprel','parser.py',276),
  ('exprel -> exp MENOR exp','exprel',3,'p_exprel','parser.py',277),
  ('exprel -> exp MAYORI exp','exprel',3,'p_exprel','parser.py',278),
  ('exprel -> exp MENORI exp','exprel',3,'p_exprel','parser.py',279),
  ('exparr -> ID lista_arr','exparr',2,'p_exparr','parser.py',288),
  ('exparr -> LCOR lista_exp RCOR','exparr',3,'p_exparr','parser.py',289),
  ('exparr -> LCOR exp PCOMA exp RCOR','exparr',5,'p_exparr','parser.py',290),
  ('valores -> ENTERO','valores',1,'p_valores','parser.py',298),
  ('valores -> DECIMAL','valores',1,'p_valores','parser.py',299),
  ('valores -> CADENA','valores',1,'p_valores','parser.py',300),
  ('valores -> BOOLEANO','valores',1,'p_valores','parser.py',301),
  ('tipo_var -> I64','tipo_var',1,'p_tipo_var','parser.py',309),
  ('tipo_var -> F64','tipo_var',1,'p_tipo_var','parser.py',310),
  ('tipo_var -> BOOL','tipo_var',1,'p_tipo_var','parser.py',311),
  ('tipo_var -> CHAR','tipo_var',1,'p_tipo_var','parser.py',312),
  ('tipo_var -> aSTR','tipo_var',1,'p_tipo_var','parser.py',313),
  ('tipo_var -> STRING','tipo_var',1,'p_tipo_var','parser.py',314),
  ('tipo_var -> USIZE','tipo_var',1,'p_tipo_var','parser.py',315),
  ('tipo_var -> ID','tipo_var',1,'p_tipo_var','parser.py',316),
  ('llamada -> ID LPAR RPAR','llamada',3,'p_llamada','parser.py',329),
  ('llamada -> ID LPAR lista_exp RPAR','llamada',4,'p_llamada','parser.py',330),
  ('print -> PRINT AD LPAR exp RPAR','print',5,'p_print','parser.py',335),
]
