Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    MOD
    PUB
    VEC
    aMUT

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones_g
Rule 2     instrucciones_g -> instrucciones_g instruccion_g
Rule 3     instrucciones_g -> instruccion_g
Rule 4     instruccion_g -> funcion
Rule 5     instrucciones_l -> instrucciones_l instruccion_l
Rule 6     instrucciones_l -> instruccion_l
Rule 7     instruccion_l -> print PCOMA
Rule 8     instruccion_l -> declaracion PCOMA
Rule 9     instruccion_l -> asignacion PCOMA
Rule 10    instruccion_l -> llamada PCOMA
Rule 11    instruccion_l -> sentencia
Rule 12    instruccion_l -> transferencia PCOMA
Rule 13    funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
Rule 14    funcion -> FN ID LPAR lista_parametros RPAR statement
Rule 15    funcion -> FN ID LPAR RPAR ARROW tipo_var statement
Rule 16    funcion -> FN ID LPAR RPAR statement
Rule 17    sentencia -> if
Rule 18    sentencia -> match
Rule 19    sentencia -> loop
Rule 20    sentencia -> while
Rule 21    if -> IF exp statement else
Rule 22    else -> ELSE statement
Rule 23    else -> ELSE if
Rule 24    match -> MATCH exp match_statement
Rule 25    match_statement -> LLLAV lista_brazos RLLAV
Rule 26    match_statement -> LLLAV RLLAV
Rule 27    lista_brazos -> lista_brazos brazo
Rule 28    lista_brazos -> brazo
Rule 29    brazo -> lista_exp_brazos ARROW2 instruccion_match COMA
Rule 30    brazo -> lista_exp_brazos ARROW2 statement COMA
Rule 31    brazo -> lista_exp_brazos ARROW2 statement
Rule 32    lista_exp_brazos -> lista_exp_brazos ORSINGLE exp
Rule 33    lista_exp_brazos -> exp
Rule 34    instruccion_match -> print
Rule 35    instruccion_match -> llamada
Rule 36    instruccion_match -> sentencia
Rule 37    instruccion_match -> transferencia
Rule 38    loop -> LOOP statement
Rule 39    while -> WHILE exp statement
Rule 40    transferencia -> BREAK
Rule 41    transferencia -> RETURN
Rule 42    transferencia -> RETURN exp
Rule 43    transferencia -> CONTINUE
Rule 44    statement -> LLLAV instrucciones_l RLLAV
Rule 45    statement -> LLLAV RLLAV
Rule 46    lista_parametros -> lista_parametros COMA asignacion_simple
Rule 47    lista_parametros -> asignacion_simple
Rule 48    declaracion -> LET asignacion_simple IGUAL exp
Rule 49    declaracion -> LET MUT asignacion
Rule 50    declaracion -> LET asignacion
Rule 51    asignacion -> ID IGUAL exp
Rule 52    asignacion -> ID lista_arr IGUAL exp
Rule 53    lista_arr -> lista_arr LCOR exp RCOR
Rule 54    lista_arr -> LCOR exp RCOR
Rule 55    lista_exp -> lista_exp COMA exp
Rule 56    lista_exp -> exp
Rule 57    asignacion_simple -> ID DPUNTOS tipo_var
Rule 58    asignacion_simple -> ID DPUNTOS lista_arr2
Rule 59    asignacion_simple -> MUT ID DPUNTOS tipo_var
Rule 60    asignacion_simple -> MUT ID DPUNTOS lista_arr2
Rule 61    lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR
Rule 62    lista_arr2 -> LCOR tipo_var PCOMA exp RCOR
Rule 63    exp -> valores
Rule 64    exp -> LPAR valores LPAR
Rule 65    exp -> expmath
Rule 66    exp -> explog
Rule 67    exp -> exprel
Rule 68    exp -> exparr
Rule 69    exp -> ID
Rule 70    expmath -> exp MAS exp
Rule 71    expmath -> exp MENOS exp
Rule 72    expmath -> exp MULTIPLICACION exp
Rule 73    expmath -> exp DIVISION exp
Rule 74    expmath -> MENOS exp
Rule 75    explog -> exp AND exp
Rule 76    explog -> exp OR exp
Rule 77    explog -> AD exp
Rule 78    exprel -> exp IGUALI exp
Rule 79    exprel -> exp DIF exp
Rule 80    exprel -> exp MAYOR exp
Rule 81    exprel -> exp MENOR exp
Rule 82    exprel -> exp MAYORI exp
Rule 83    exprel -> exp MENORI exp
Rule 84    exparr -> ID lista_arr
Rule 85    exparr -> LCOR lista_exp RCOR
Rule 86    exparr -> LCOR exp PCOMA exp RCOR
Rule 87    valores -> ENTERO
Rule 88    valores -> DECIMAL
Rule 89    valores -> CADENA
Rule 90    valores -> BOOLEANO
Rule 91    tipo_var -> I64
Rule 92    tipo_var -> F64
Rule 93    tipo_var -> BOOL
Rule 94    tipo_var -> CHAR
Rule 95    tipo_var -> aSTR
Rule 96    tipo_var -> STRING
Rule 97    tipo_var -> USIZE
Rule 98    tipo_var -> ID
Rule 99    llamada -> ID LPAR RPAR
Rule 100   llamada -> ID LPAR lista_exp RPAR
Rule 101   print -> PRINT AD LPAR exp RPAR

Terminals, with rules where they appear

AD                   : 77 101
AND                  : 75
ARROW                : 13 15
ARROW2               : 29 30 31
BOOL                 : 93
BOOLEANO             : 90
BREAK                : 40
CADENA               : 89
CHAR                 : 94
COMA                 : 29 30 46 55
CONTINUE             : 43
DECIMAL              : 88
DIF                  : 79
DIVISION             : 73
DPUNTOS              : 57 58 59 60
ELSE                 : 22 23
ENTERO               : 87
F64                  : 92
FN                   : 13 14 15 16
I64                  : 91
ID                   : 13 14 15 16 51 52 57 58 59 60 69 84 98 99 100
IF                   : 21
IGUAL                : 48 51 52
IGUALI               : 78
LCOR                 : 53 54 61 62 85 86
LET                  : 48 49 50
LLLAV                : 25 26 44 45
LOOP                 : 38
LPAR                 : 13 14 15 16 64 64 99 100 101
MAS                  : 70
MATCH                : 24
MAYOR                : 80
MAYORI               : 82
MENOR                : 81
MENORI               : 83
MENOS                : 71 74
MOD                  : 
MULTIPLICACION       : 72
MUT                  : 49 59 60
OR                   : 76
ORSINGLE             : 32
PCOMA                : 7 8 9 10 12 61 62 86
PRINT                : 101
PUB                  : 
RCOR                 : 53 54 61 62 85 86
RETURN               : 41 42
RLLAV                : 25 26 44 45
RPAR                 : 13 14 15 16 99 100 101
STRING               : 96
USIZE                : 97
VEC                  : 
WHILE                : 39
aMUT                 : 
aSTR                 : 95
error                : 

Nonterminals, with rules where they appear

asignacion           : 9 49 50
asignacion_simple    : 46 47 48
brazo                : 27 28
declaracion          : 8
else                 : 21
exp                  : 21 24 32 33 39 42 48 51 52 53 54 55 56 61 62 70 70 71 71 72 72 73 73 74 75 75 76 76 77 78 78 79 79 80 80 81 81 82 82 83 83 86 86 101
exparr               : 68
explog               : 66
expmath              : 65
exprel               : 67
funcion              : 4
if                   : 17 23
init                 : 0
instruccion_g        : 2 3
instruccion_l        : 5 6
instruccion_match    : 29
instrucciones_g      : 1 2
instrucciones_l      : 5 44
lista_arr            : 52 53 84
lista_arr2           : 58 60 61
lista_brazos         : 25 27
lista_exp            : 55 85 100
lista_exp_brazos     : 29 30 31 32
lista_parametros     : 13 14 46
llamada              : 10 35
loop                 : 19
match                : 18
match_statement      : 24
print                : 7 34
sentencia            : 11 36
statement            : 13 14 15 16 21 22 30 31 38 39
tipo_var             : 13 15 57 59 62
transferencia        : 12 37
valores              : 63 64
while                : 20

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones_g
    (2) instrucciones_g -> . instrucciones_g instruccion_g
    (3) instrucciones_g -> . instruccion_g
    (4) instruccion_g -> . funcion
    (13) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (14) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (15) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (16) funcion -> . FN ID LPAR RPAR statement

    FN              shift and go to state 5

    init                           shift and go to state 1
    instrucciones_g                shift and go to state 2
    instruccion_g                  shift and go to state 3
    funcion                        shift and go to state 4

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones_g .
    (2) instrucciones_g -> instrucciones_g . instruccion_g
    (4) instruccion_g -> . funcion
    (13) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (14) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (15) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (16) funcion -> . FN ID LPAR RPAR statement

    $end            reduce using rule 1 (init -> instrucciones_g .)
    FN              shift and go to state 5

    instruccion_g                  shift and go to state 6
    funcion                        shift and go to state 4

state 3

    (3) instrucciones_g -> instruccion_g .

    FN              reduce using rule 3 (instrucciones_g -> instruccion_g .)
    $end            reduce using rule 3 (instrucciones_g -> instruccion_g .)


state 4

    (4) instruccion_g -> funcion .

    FN              reduce using rule 4 (instruccion_g -> funcion .)
    $end            reduce using rule 4 (instruccion_g -> funcion .)


state 5

    (13) funcion -> FN . ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (14) funcion -> FN . ID LPAR lista_parametros RPAR statement
    (15) funcion -> FN . ID LPAR RPAR ARROW tipo_var statement
    (16) funcion -> FN . ID LPAR RPAR statement

    ID              shift and go to state 7


state 6

    (2) instrucciones_g -> instrucciones_g instruccion_g .

    FN              reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    $end            reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)


state 7

    (13) funcion -> FN ID . LPAR lista_parametros RPAR ARROW tipo_var statement
    (14) funcion -> FN ID . LPAR lista_parametros RPAR statement
    (15) funcion -> FN ID . LPAR RPAR ARROW tipo_var statement
    (16) funcion -> FN ID . LPAR RPAR statement

    LPAR            shift and go to state 8


state 8

    (13) funcion -> FN ID LPAR . lista_parametros RPAR ARROW tipo_var statement
    (14) funcion -> FN ID LPAR . lista_parametros RPAR statement
    (15) funcion -> FN ID LPAR . RPAR ARROW tipo_var statement
    (16) funcion -> FN ID LPAR . RPAR statement
    (46) lista_parametros -> . lista_parametros COMA asignacion_simple
    (47) lista_parametros -> . asignacion_simple
    (57) asignacion_simple -> . ID DPUNTOS tipo_var
    (58) asignacion_simple -> . ID DPUNTOS lista_arr2
    (59) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (60) asignacion_simple -> . MUT ID DPUNTOS lista_arr2

    RPAR            shift and go to state 11
    ID              shift and go to state 9
    MUT             shift and go to state 13

    lista_parametros               shift and go to state 10
    asignacion_simple              shift and go to state 12

state 9

    (57) asignacion_simple -> ID . DPUNTOS tipo_var
    (58) asignacion_simple -> ID . DPUNTOS lista_arr2

    DPUNTOS         shift and go to state 14


state 10

    (13) funcion -> FN ID LPAR lista_parametros . RPAR ARROW tipo_var statement
    (14) funcion -> FN ID LPAR lista_parametros . RPAR statement
    (46) lista_parametros -> lista_parametros . COMA asignacion_simple

    RPAR            shift and go to state 15
    COMA            shift and go to state 16


state 11

    (15) funcion -> FN ID LPAR RPAR . ARROW tipo_var statement
    (16) funcion -> FN ID LPAR RPAR . statement
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    ARROW           shift and go to state 17
    LLLAV           shift and go to state 19

    statement                      shift and go to state 18

state 12

    (47) lista_parametros -> asignacion_simple .

    RPAR            reduce using rule 47 (lista_parametros -> asignacion_simple .)
    COMA            reduce using rule 47 (lista_parametros -> asignacion_simple .)


state 13

    (59) asignacion_simple -> MUT . ID DPUNTOS tipo_var
    (60) asignacion_simple -> MUT . ID DPUNTOS lista_arr2

    ID              shift and go to state 20


state 14

    (57) asignacion_simple -> ID DPUNTOS . tipo_var
    (58) asignacion_simple -> ID DPUNTOS . lista_arr2
    (91) tipo_var -> . I64
    (92) tipo_var -> . F64
    (93) tipo_var -> . BOOL
    (94) tipo_var -> . CHAR
    (95) tipo_var -> . aSTR
    (96) tipo_var -> . STRING
    (97) tipo_var -> . USIZE
    (98) tipo_var -> . ID
    (61) lista_arr2 -> . LCOR lista_arr2 PCOMA exp RCOR
    (62) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR

    I64             shift and go to state 24
    F64             shift and go to state 25
    BOOL            shift and go to state 26
    CHAR            shift and go to state 27
    aSTR            shift and go to state 28
    STRING          shift and go to state 29
    USIZE           shift and go to state 30
    ID              shift and go to state 21
    LCOR            shift and go to state 31

    tipo_var                       shift and go to state 22
    lista_arr2                     shift and go to state 23

state 15

    (13) funcion -> FN ID LPAR lista_parametros RPAR . ARROW tipo_var statement
    (14) funcion -> FN ID LPAR lista_parametros RPAR . statement
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    ARROW           shift and go to state 32
    LLLAV           shift and go to state 19

    statement                      shift and go to state 33

state 16

    (46) lista_parametros -> lista_parametros COMA . asignacion_simple
    (57) asignacion_simple -> . ID DPUNTOS tipo_var
    (58) asignacion_simple -> . ID DPUNTOS lista_arr2
    (59) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (60) asignacion_simple -> . MUT ID DPUNTOS lista_arr2

    ID              shift and go to state 9
    MUT             shift and go to state 13

    asignacion_simple              shift and go to state 34

state 17

    (15) funcion -> FN ID LPAR RPAR ARROW . tipo_var statement
    (91) tipo_var -> . I64
    (92) tipo_var -> . F64
    (93) tipo_var -> . BOOL
    (94) tipo_var -> . CHAR
    (95) tipo_var -> . aSTR
    (96) tipo_var -> . STRING
    (97) tipo_var -> . USIZE
    (98) tipo_var -> . ID

    I64             shift and go to state 24
    F64             shift and go to state 25
    BOOL            shift and go to state 26
    CHAR            shift and go to state 27
    aSTR            shift and go to state 28
    STRING          shift and go to state 29
    USIZE           shift and go to state 30
    ID              shift and go to state 21

    tipo_var                       shift and go to state 35

state 18

    (16) funcion -> FN ID LPAR RPAR statement .

    FN              reduce using rule 16 (funcion -> FN ID LPAR RPAR statement .)
    $end            reduce using rule 16 (funcion -> FN ID LPAR RPAR statement .)


state 19

    (44) statement -> LLLAV . instrucciones_l RLLAV
    (45) statement -> LLLAV . RLLAV
    (5) instrucciones_l -> . instrucciones_l instruccion_l
    (6) instrucciones_l -> . instruccion_l
    (7) instruccion_l -> . print PCOMA
    (8) instruccion_l -> . declaracion PCOMA
    (9) instruccion_l -> . asignacion PCOMA
    (10) instruccion_l -> . llamada PCOMA
    (11) instruccion_l -> . sentencia
    (12) instruccion_l -> . transferencia PCOMA
    (101) print -> . PRINT AD LPAR exp RPAR
    (48) declaracion -> . LET asignacion_simple IGUAL exp
    (49) declaracion -> . LET MUT asignacion
    (50) declaracion -> . LET asignacion
    (51) asignacion -> . ID IGUAL exp
    (52) asignacion -> . ID lista_arr IGUAL exp
    (99) llamada -> . ID LPAR RPAR
    (100) llamada -> . ID LPAR lista_exp RPAR
    (17) sentencia -> . if
    (18) sentencia -> . match
    (19) sentencia -> . loop
    (20) sentencia -> . while
    (40) transferencia -> . BREAK
    (41) transferencia -> . RETURN
    (42) transferencia -> . RETURN exp
    (43) transferencia -> . CONTINUE
    (21) if -> . IF exp statement else
    (24) match -> . MATCH exp match_statement
    (38) loop -> . LOOP statement
    (39) while -> . WHILE exp statement

    RLLAV           shift and go to state 37
    PRINT           shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    BREAK           shift and go to state 52
    RETURN          shift and go to state 53
    CONTINUE        shift and go to state 54
    IF              shift and go to state 55
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57
    WHILE           shift and go to state 58

    instrucciones_l                shift and go to state 36
    instruccion_l                  shift and go to state 38
    print                          shift and go to state 39
    declaracion                    shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    sentencia                      shift and go to state 43
    transferencia                  shift and go to state 44
    if                             shift and go to state 48
    match                          shift and go to state 49
    loop                           shift and go to state 50
    while                          shift and go to state 51

state 20

    (59) asignacion_simple -> MUT ID . DPUNTOS tipo_var
    (60) asignacion_simple -> MUT ID . DPUNTOS lista_arr2

    DPUNTOS         shift and go to state 59


state 21

    (98) tipo_var -> ID .

    RPAR            reduce using rule 98 (tipo_var -> ID .)
    COMA            reduce using rule 98 (tipo_var -> ID .)
    IGUAL           reduce using rule 98 (tipo_var -> ID .)
    LLLAV           reduce using rule 98 (tipo_var -> ID .)
    PCOMA           reduce using rule 98 (tipo_var -> ID .)


state 22

    (57) asignacion_simple -> ID DPUNTOS tipo_var .

    RPAR            reduce using rule 57 (asignacion_simple -> ID DPUNTOS tipo_var .)
    COMA            reduce using rule 57 (asignacion_simple -> ID DPUNTOS tipo_var .)
    IGUAL           reduce using rule 57 (asignacion_simple -> ID DPUNTOS tipo_var .)


state 23

    (58) asignacion_simple -> ID DPUNTOS lista_arr2 .

    RPAR            reduce using rule 58 (asignacion_simple -> ID DPUNTOS lista_arr2 .)
    COMA            reduce using rule 58 (asignacion_simple -> ID DPUNTOS lista_arr2 .)
    IGUAL           reduce using rule 58 (asignacion_simple -> ID DPUNTOS lista_arr2 .)


state 24

    (91) tipo_var -> I64 .

    RPAR            reduce using rule 91 (tipo_var -> I64 .)
    COMA            reduce using rule 91 (tipo_var -> I64 .)
    IGUAL           reduce using rule 91 (tipo_var -> I64 .)
    LLLAV           reduce using rule 91 (tipo_var -> I64 .)
    PCOMA           reduce using rule 91 (tipo_var -> I64 .)


state 25

    (92) tipo_var -> F64 .

    RPAR            reduce using rule 92 (tipo_var -> F64 .)
    COMA            reduce using rule 92 (tipo_var -> F64 .)
    IGUAL           reduce using rule 92 (tipo_var -> F64 .)
    LLLAV           reduce using rule 92 (tipo_var -> F64 .)
    PCOMA           reduce using rule 92 (tipo_var -> F64 .)


state 26

    (93) tipo_var -> BOOL .

    RPAR            reduce using rule 93 (tipo_var -> BOOL .)
    COMA            reduce using rule 93 (tipo_var -> BOOL .)
    IGUAL           reduce using rule 93 (tipo_var -> BOOL .)
    LLLAV           reduce using rule 93 (tipo_var -> BOOL .)
    PCOMA           reduce using rule 93 (tipo_var -> BOOL .)


state 27

    (94) tipo_var -> CHAR .

    RPAR            reduce using rule 94 (tipo_var -> CHAR .)
    COMA            reduce using rule 94 (tipo_var -> CHAR .)
    IGUAL           reduce using rule 94 (tipo_var -> CHAR .)
    LLLAV           reduce using rule 94 (tipo_var -> CHAR .)
    PCOMA           reduce using rule 94 (tipo_var -> CHAR .)


state 28

    (95) tipo_var -> aSTR .

    RPAR            reduce using rule 95 (tipo_var -> aSTR .)
    COMA            reduce using rule 95 (tipo_var -> aSTR .)
    IGUAL           reduce using rule 95 (tipo_var -> aSTR .)
    LLLAV           reduce using rule 95 (tipo_var -> aSTR .)
    PCOMA           reduce using rule 95 (tipo_var -> aSTR .)


state 29

    (96) tipo_var -> STRING .

    RPAR            reduce using rule 96 (tipo_var -> STRING .)
    COMA            reduce using rule 96 (tipo_var -> STRING .)
    IGUAL           reduce using rule 96 (tipo_var -> STRING .)
    LLLAV           reduce using rule 96 (tipo_var -> STRING .)
    PCOMA           reduce using rule 96 (tipo_var -> STRING .)


state 30

    (97) tipo_var -> USIZE .

    RPAR            reduce using rule 97 (tipo_var -> USIZE .)
    COMA            reduce using rule 97 (tipo_var -> USIZE .)
    IGUAL           reduce using rule 97 (tipo_var -> USIZE .)
    LLLAV           reduce using rule 97 (tipo_var -> USIZE .)
    PCOMA           reduce using rule 97 (tipo_var -> USIZE .)


state 31

    (61) lista_arr2 -> LCOR . lista_arr2 PCOMA exp RCOR
    (62) lista_arr2 -> LCOR . tipo_var PCOMA exp RCOR
    (61) lista_arr2 -> . LCOR lista_arr2 PCOMA exp RCOR
    (62) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (91) tipo_var -> . I64
    (92) tipo_var -> . F64
    (93) tipo_var -> . BOOL
    (94) tipo_var -> . CHAR
    (95) tipo_var -> . aSTR
    (96) tipo_var -> . STRING
    (97) tipo_var -> . USIZE
    (98) tipo_var -> . ID

    LCOR            shift and go to state 31
    I64             shift and go to state 24
    F64             shift and go to state 25
    BOOL            shift and go to state 26
    CHAR            shift and go to state 27
    aSTR            shift and go to state 28
    STRING          shift and go to state 29
    USIZE           shift and go to state 30
    ID              shift and go to state 21

    lista_arr2                     shift and go to state 60
    tipo_var                       shift and go to state 61

state 32

    (13) funcion -> FN ID LPAR lista_parametros RPAR ARROW . tipo_var statement
    (91) tipo_var -> . I64
    (92) tipo_var -> . F64
    (93) tipo_var -> . BOOL
    (94) tipo_var -> . CHAR
    (95) tipo_var -> . aSTR
    (96) tipo_var -> . STRING
    (97) tipo_var -> . USIZE
    (98) tipo_var -> . ID

    I64             shift and go to state 24
    F64             shift and go to state 25
    BOOL            shift and go to state 26
    CHAR            shift and go to state 27
    aSTR            shift and go to state 28
    STRING          shift and go to state 29
    USIZE           shift and go to state 30
    ID              shift and go to state 21

    tipo_var                       shift and go to state 62

state 33

    (14) funcion -> FN ID LPAR lista_parametros RPAR statement .

    FN              reduce using rule 14 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    $end            reduce using rule 14 (funcion -> FN ID LPAR lista_parametros RPAR statement .)


state 34

    (46) lista_parametros -> lista_parametros COMA asignacion_simple .

    RPAR            reduce using rule 46 (lista_parametros -> lista_parametros COMA asignacion_simple .)
    COMA            reduce using rule 46 (lista_parametros -> lista_parametros COMA asignacion_simple .)


state 35

    (15) funcion -> FN ID LPAR RPAR ARROW tipo_var . statement
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 19

    statement                      shift and go to state 63

state 36

    (44) statement -> LLLAV instrucciones_l . RLLAV
    (5) instrucciones_l -> instrucciones_l . instruccion_l
    (7) instruccion_l -> . print PCOMA
    (8) instruccion_l -> . declaracion PCOMA
    (9) instruccion_l -> . asignacion PCOMA
    (10) instruccion_l -> . llamada PCOMA
    (11) instruccion_l -> . sentencia
    (12) instruccion_l -> . transferencia PCOMA
    (101) print -> . PRINT AD LPAR exp RPAR
    (48) declaracion -> . LET asignacion_simple IGUAL exp
    (49) declaracion -> . LET MUT asignacion
    (50) declaracion -> . LET asignacion
    (51) asignacion -> . ID IGUAL exp
    (52) asignacion -> . ID lista_arr IGUAL exp
    (99) llamada -> . ID LPAR RPAR
    (100) llamada -> . ID LPAR lista_exp RPAR
    (17) sentencia -> . if
    (18) sentencia -> . match
    (19) sentencia -> . loop
    (20) sentencia -> . while
    (40) transferencia -> . BREAK
    (41) transferencia -> . RETURN
    (42) transferencia -> . RETURN exp
    (43) transferencia -> . CONTINUE
    (21) if -> . IF exp statement else
    (24) match -> . MATCH exp match_statement
    (38) loop -> . LOOP statement
    (39) while -> . WHILE exp statement

    RLLAV           shift and go to state 64
    PRINT           shift and go to state 45
    LET             shift and go to state 46
    ID              shift and go to state 47
    BREAK           shift and go to state 52
    RETURN          shift and go to state 53
    CONTINUE        shift and go to state 54
    IF              shift and go to state 55
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57
    WHILE           shift and go to state 58

    instruccion_l                  shift and go to state 65
    print                          shift and go to state 39
    declaracion                    shift and go to state 40
    asignacion                     shift and go to state 41
    llamada                        shift and go to state 42
    sentencia                      shift and go to state 43
    transferencia                  shift and go to state 44
    if                             shift and go to state 48
    match                          shift and go to state 49
    loop                           shift and go to state 50
    while                          shift and go to state 51

state 37

    (45) statement -> LLLAV RLLAV .

    FN              reduce using rule 45 (statement -> LLLAV RLLAV .)
    $end            reduce using rule 45 (statement -> LLLAV RLLAV .)
    RLLAV           reduce using rule 45 (statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 45 (statement -> LLLAV RLLAV .)
    LET             reduce using rule 45 (statement -> LLLAV RLLAV .)
    ID              reduce using rule 45 (statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 45 (statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 45 (statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 45 (statement -> LLLAV RLLAV .)
    IF              reduce using rule 45 (statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 45 (statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 45 (statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 45 (statement -> LLLAV RLLAV .)
    COMA            reduce using rule 45 (statement -> LLLAV RLLAV .)
    ELSE            reduce using rule 45 (statement -> LLLAV RLLAV .)
    LPAR            reduce using rule 45 (statement -> LLLAV RLLAV .)
    ENTERO          reduce using rule 45 (statement -> LLLAV RLLAV .)
    DECIMAL         reduce using rule 45 (statement -> LLLAV RLLAV .)
    CADENA          reduce using rule 45 (statement -> LLLAV RLLAV .)
    BOOLEANO        reduce using rule 45 (statement -> LLLAV RLLAV .)
    MENOS           reduce using rule 45 (statement -> LLLAV RLLAV .)
    AD              reduce using rule 45 (statement -> LLLAV RLLAV .)
    LCOR            reduce using rule 45 (statement -> LLLAV RLLAV .)


state 38

    (6) instrucciones_l -> instruccion_l .

    RLLAV           reduce using rule 6 (instrucciones_l -> instruccion_l .)
    PRINT           reduce using rule 6 (instrucciones_l -> instruccion_l .)
    LET             reduce using rule 6 (instrucciones_l -> instruccion_l .)
    ID              reduce using rule 6 (instrucciones_l -> instruccion_l .)
    BREAK           reduce using rule 6 (instrucciones_l -> instruccion_l .)
    RETURN          reduce using rule 6 (instrucciones_l -> instruccion_l .)
    CONTINUE        reduce using rule 6 (instrucciones_l -> instruccion_l .)
    IF              reduce using rule 6 (instrucciones_l -> instruccion_l .)
    MATCH           reduce using rule 6 (instrucciones_l -> instruccion_l .)
    LOOP            reduce using rule 6 (instrucciones_l -> instruccion_l .)
    WHILE           reduce using rule 6 (instrucciones_l -> instruccion_l .)


state 39

    (7) instruccion_l -> print . PCOMA

    PCOMA           shift and go to state 66


state 40

    (8) instruccion_l -> declaracion . PCOMA

    PCOMA           shift and go to state 67


state 41

    (9) instruccion_l -> asignacion . PCOMA

    PCOMA           shift and go to state 68


state 42

    (10) instruccion_l -> llamada . PCOMA

    PCOMA           shift and go to state 69


state 43

    (11) instruccion_l -> sentencia .

    RLLAV           reduce using rule 11 (instruccion_l -> sentencia .)
    PRINT           reduce using rule 11 (instruccion_l -> sentencia .)
    LET             reduce using rule 11 (instruccion_l -> sentencia .)
    ID              reduce using rule 11 (instruccion_l -> sentencia .)
    BREAK           reduce using rule 11 (instruccion_l -> sentencia .)
    RETURN          reduce using rule 11 (instruccion_l -> sentencia .)
    CONTINUE        reduce using rule 11 (instruccion_l -> sentencia .)
    IF              reduce using rule 11 (instruccion_l -> sentencia .)
    MATCH           reduce using rule 11 (instruccion_l -> sentencia .)
    LOOP            reduce using rule 11 (instruccion_l -> sentencia .)
    WHILE           reduce using rule 11 (instruccion_l -> sentencia .)


state 44

    (12) instruccion_l -> transferencia . PCOMA

    PCOMA           shift and go to state 70


state 45

    (101) print -> PRINT . AD LPAR exp RPAR

    AD              shift and go to state 71


state 46

    (48) declaracion -> LET . asignacion_simple IGUAL exp
    (49) declaracion -> LET . MUT asignacion
    (50) declaracion -> LET . asignacion
    (57) asignacion_simple -> . ID DPUNTOS tipo_var
    (58) asignacion_simple -> . ID DPUNTOS lista_arr2
    (59) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (60) asignacion_simple -> . MUT ID DPUNTOS lista_arr2
    (51) asignacion -> . ID IGUAL exp
    (52) asignacion -> . ID lista_arr IGUAL exp

    MUT             shift and go to state 73
    ID              shift and go to state 75

    asignacion_simple              shift and go to state 72
    asignacion                     shift and go to state 74

state 47

    (51) asignacion -> ID . IGUAL exp
    (52) asignacion -> ID . lista_arr IGUAL exp
    (99) llamada -> ID . LPAR RPAR
    (100) llamada -> ID . LPAR lista_exp RPAR
    (53) lista_arr -> . lista_arr LCOR exp RCOR
    (54) lista_arr -> . LCOR exp RCOR

    IGUAL           shift and go to state 76
    LPAR            shift and go to state 78
    LCOR            shift and go to state 79

    lista_arr                      shift and go to state 77

state 48

    (17) sentencia -> if .

    RLLAV           reduce using rule 17 (sentencia -> if .)
    PRINT           reduce using rule 17 (sentencia -> if .)
    LET             reduce using rule 17 (sentencia -> if .)
    ID              reduce using rule 17 (sentencia -> if .)
    BREAK           reduce using rule 17 (sentencia -> if .)
    RETURN          reduce using rule 17 (sentencia -> if .)
    CONTINUE        reduce using rule 17 (sentencia -> if .)
    IF              reduce using rule 17 (sentencia -> if .)
    MATCH           reduce using rule 17 (sentencia -> if .)
    LOOP            reduce using rule 17 (sentencia -> if .)
    WHILE           reduce using rule 17 (sentencia -> if .)
    COMA            reduce using rule 17 (sentencia -> if .)


state 49

    (18) sentencia -> match .

    RLLAV           reduce using rule 18 (sentencia -> match .)
    PRINT           reduce using rule 18 (sentencia -> match .)
    LET             reduce using rule 18 (sentencia -> match .)
    ID              reduce using rule 18 (sentencia -> match .)
    BREAK           reduce using rule 18 (sentencia -> match .)
    RETURN          reduce using rule 18 (sentencia -> match .)
    CONTINUE        reduce using rule 18 (sentencia -> match .)
    IF              reduce using rule 18 (sentencia -> match .)
    MATCH           reduce using rule 18 (sentencia -> match .)
    LOOP            reduce using rule 18 (sentencia -> match .)
    WHILE           reduce using rule 18 (sentencia -> match .)
    COMA            reduce using rule 18 (sentencia -> match .)


state 50

    (19) sentencia -> loop .

    RLLAV           reduce using rule 19 (sentencia -> loop .)
    PRINT           reduce using rule 19 (sentencia -> loop .)
    LET             reduce using rule 19 (sentencia -> loop .)
    ID              reduce using rule 19 (sentencia -> loop .)
    BREAK           reduce using rule 19 (sentencia -> loop .)
    RETURN          reduce using rule 19 (sentencia -> loop .)
    CONTINUE        reduce using rule 19 (sentencia -> loop .)
    IF              reduce using rule 19 (sentencia -> loop .)
    MATCH           reduce using rule 19 (sentencia -> loop .)
    LOOP            reduce using rule 19 (sentencia -> loop .)
    WHILE           reduce using rule 19 (sentencia -> loop .)
    COMA            reduce using rule 19 (sentencia -> loop .)


state 51

    (20) sentencia -> while .

    RLLAV           reduce using rule 20 (sentencia -> while .)
    PRINT           reduce using rule 20 (sentencia -> while .)
    LET             reduce using rule 20 (sentencia -> while .)
    ID              reduce using rule 20 (sentencia -> while .)
    BREAK           reduce using rule 20 (sentencia -> while .)
    RETURN          reduce using rule 20 (sentencia -> while .)
    CONTINUE        reduce using rule 20 (sentencia -> while .)
    IF              reduce using rule 20 (sentencia -> while .)
    MATCH           reduce using rule 20 (sentencia -> while .)
    LOOP            reduce using rule 20 (sentencia -> while .)
    WHILE           reduce using rule 20 (sentencia -> while .)
    COMA            reduce using rule 20 (sentencia -> while .)


state 52

    (40) transferencia -> BREAK .

    PCOMA           reduce using rule 40 (transferencia -> BREAK .)
    COMA            reduce using rule 40 (transferencia -> BREAK .)


state 53

    (41) transferencia -> RETURN .
    (42) transferencia -> RETURN . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    PCOMA           reduce using rule 41 (transferencia -> RETURN .)
    COMA            reduce using rule 41 (transferencia -> RETURN .)
    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 80
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 54

    (43) transferencia -> CONTINUE .

    PCOMA           reduce using rule 43 (transferencia -> CONTINUE .)
    COMA            reduce using rule 43 (transferencia -> CONTINUE .)


state 55

    (21) if -> IF . exp statement else
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 95
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 56

    (24) match -> MATCH . exp match_statement
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 96
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 57

    (38) loop -> LOOP . statement
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 19

    statement                      shift and go to state 97

state 58

    (39) while -> WHILE . exp statement
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 98
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 59

    (59) asignacion_simple -> MUT ID DPUNTOS . tipo_var
    (60) asignacion_simple -> MUT ID DPUNTOS . lista_arr2
    (91) tipo_var -> . I64
    (92) tipo_var -> . F64
    (93) tipo_var -> . BOOL
    (94) tipo_var -> . CHAR
    (95) tipo_var -> . aSTR
    (96) tipo_var -> . STRING
    (97) tipo_var -> . USIZE
    (98) tipo_var -> . ID
    (61) lista_arr2 -> . LCOR lista_arr2 PCOMA exp RCOR
    (62) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR

    I64             shift and go to state 24
    F64             shift and go to state 25
    BOOL            shift and go to state 26
    CHAR            shift and go to state 27
    aSTR            shift and go to state 28
    STRING          shift and go to state 29
    USIZE           shift and go to state 30
    ID              shift and go to state 21
    LCOR            shift and go to state 31

    tipo_var                       shift and go to state 99
    lista_arr2                     shift and go to state 100

state 60

    (61) lista_arr2 -> LCOR lista_arr2 . PCOMA exp RCOR

    PCOMA           shift and go to state 101


state 61

    (62) lista_arr2 -> LCOR tipo_var . PCOMA exp RCOR

    PCOMA           shift and go to state 102


state 62

    (13) funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var . statement
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 19

    statement                      shift and go to state 103

state 63

    (15) funcion -> FN ID LPAR RPAR ARROW tipo_var statement .

    FN              reduce using rule 15 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    $end            reduce using rule 15 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)


state 64

    (44) statement -> LLLAV instrucciones_l RLLAV .

    FN              reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    $end            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    RLLAV           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    PRINT           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    LET             reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    ID              reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    BREAK           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    RETURN          reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    CONTINUE        reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    IF              reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    MATCH           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    LOOP            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    WHILE           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    COMA            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    ELSE            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    LPAR            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    ENTERO          reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    DECIMAL         reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    CADENA          reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    BOOLEANO        reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    MENOS           reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    AD              reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)
    LCOR            reduce using rule 44 (statement -> LLLAV instrucciones_l RLLAV .)


state 65

    (5) instrucciones_l -> instrucciones_l instruccion_l .

    RLLAV           reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    PRINT           reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    LET             reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    ID              reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    BREAK           reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    RETURN          reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    CONTINUE        reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    IF              reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    MATCH           reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    LOOP            reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)
    WHILE           reduce using rule 5 (instrucciones_l -> instrucciones_l instruccion_l .)


state 66

    (7) instruccion_l -> print PCOMA .

    RLLAV           reduce using rule 7 (instruccion_l -> print PCOMA .)
    PRINT           reduce using rule 7 (instruccion_l -> print PCOMA .)
    LET             reduce using rule 7 (instruccion_l -> print PCOMA .)
    ID              reduce using rule 7 (instruccion_l -> print PCOMA .)
    BREAK           reduce using rule 7 (instruccion_l -> print PCOMA .)
    RETURN          reduce using rule 7 (instruccion_l -> print PCOMA .)
    CONTINUE        reduce using rule 7 (instruccion_l -> print PCOMA .)
    IF              reduce using rule 7 (instruccion_l -> print PCOMA .)
    MATCH           reduce using rule 7 (instruccion_l -> print PCOMA .)
    LOOP            reduce using rule 7 (instruccion_l -> print PCOMA .)
    WHILE           reduce using rule 7 (instruccion_l -> print PCOMA .)


state 67

    (8) instruccion_l -> declaracion PCOMA .

    RLLAV           reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    PRINT           reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    LET             reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    ID              reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    BREAK           reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    RETURN          reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    CONTINUE        reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    IF              reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    MATCH           reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    LOOP            reduce using rule 8 (instruccion_l -> declaracion PCOMA .)
    WHILE           reduce using rule 8 (instruccion_l -> declaracion PCOMA .)


state 68

    (9) instruccion_l -> asignacion PCOMA .

    RLLAV           reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    PRINT           reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    LET             reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    ID              reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    BREAK           reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    RETURN          reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    CONTINUE        reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    IF              reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    MATCH           reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    LOOP            reduce using rule 9 (instruccion_l -> asignacion PCOMA .)
    WHILE           reduce using rule 9 (instruccion_l -> asignacion PCOMA .)


state 69

    (10) instruccion_l -> llamada PCOMA .

    RLLAV           reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    PRINT           reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    LET             reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    ID              reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    BREAK           reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    RETURN          reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    CONTINUE        reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    IF              reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    MATCH           reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    LOOP            reduce using rule 10 (instruccion_l -> llamada PCOMA .)
    WHILE           reduce using rule 10 (instruccion_l -> llamada PCOMA .)


state 70

    (12) instruccion_l -> transferencia PCOMA .

    RLLAV           reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    PRINT           reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    LET             reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    ID              reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    BREAK           reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    RETURN          reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    CONTINUE        reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    IF              reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    MATCH           reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    LOOP            reduce using rule 12 (instruccion_l -> transferencia PCOMA .)
    WHILE           reduce using rule 12 (instruccion_l -> transferencia PCOMA .)


state 71

    (101) print -> PRINT AD . LPAR exp RPAR

    LPAR            shift and go to state 104


state 72

    (48) declaracion -> LET asignacion_simple . IGUAL exp

    IGUAL           shift and go to state 105


state 73

    (49) declaracion -> LET MUT . asignacion
    (59) asignacion_simple -> MUT . ID DPUNTOS tipo_var
    (60) asignacion_simple -> MUT . ID DPUNTOS lista_arr2
    (51) asignacion -> . ID IGUAL exp
    (52) asignacion -> . ID lista_arr IGUAL exp

    ID              shift and go to state 107

    asignacion                     shift and go to state 106

state 74

    (50) declaracion -> LET asignacion .

    PCOMA           reduce using rule 50 (declaracion -> LET asignacion .)


state 75

    (57) asignacion_simple -> ID . DPUNTOS tipo_var
    (58) asignacion_simple -> ID . DPUNTOS lista_arr2
    (51) asignacion -> ID . IGUAL exp
    (52) asignacion -> ID . lista_arr IGUAL exp
    (53) lista_arr -> . lista_arr LCOR exp RCOR
    (54) lista_arr -> . LCOR exp RCOR

    DPUNTOS         shift and go to state 14
    IGUAL           shift and go to state 76
    LCOR            shift and go to state 79

    lista_arr                      shift and go to state 77

state 76

    (51) asignacion -> ID IGUAL . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 108
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 77

    (52) asignacion -> ID lista_arr . IGUAL exp
    (53) lista_arr -> lista_arr . LCOR exp RCOR

    IGUAL           shift and go to state 109
    LCOR            shift and go to state 110


state 78

    (99) llamada -> ID LPAR . RPAR
    (100) llamada -> ID LPAR . lista_exp RPAR
    (55) lista_exp -> . lista_exp COMA exp
    (56) lista_exp -> . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    RPAR            shift and go to state 111
    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    lista_exp                      shift and go to state 112
    exp                            shift and go to state 113
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 79

    (54) lista_arr -> LCOR . exp RCOR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 114
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 80

    (42) transferencia -> RETURN exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    PCOMA           reduce using rule 42 (transferencia -> RETURN exp .)
    COMA            reduce using rule 42 (transferencia -> RETURN exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 81

    (63) exp -> valores .

    MAS             reduce using rule 63 (exp -> valores .)
    MENOS           reduce using rule 63 (exp -> valores .)
    MULTIPLICACION  reduce using rule 63 (exp -> valores .)
    DIVISION        reduce using rule 63 (exp -> valores .)
    AND             reduce using rule 63 (exp -> valores .)
    OR              reduce using rule 63 (exp -> valores .)
    IGUALI          reduce using rule 63 (exp -> valores .)
    DIF             reduce using rule 63 (exp -> valores .)
    MAYOR           reduce using rule 63 (exp -> valores .)
    MENOR           reduce using rule 63 (exp -> valores .)
    MAYORI          reduce using rule 63 (exp -> valores .)
    MENORI          reduce using rule 63 (exp -> valores .)
    PCOMA           reduce using rule 63 (exp -> valores .)
    COMA            reduce using rule 63 (exp -> valores .)
    LLLAV           reduce using rule 63 (exp -> valores .)
    RPAR            reduce using rule 63 (exp -> valores .)
    RCOR            reduce using rule 63 (exp -> valores .)
    ARROW2          reduce using rule 63 (exp -> valores .)
    ORSINGLE        reduce using rule 63 (exp -> valores .)


state 82

    (64) exp -> LPAR . valores LPAR
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO

    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91

    valores                        shift and go to state 127

state 83

    (65) exp -> expmath .

    MAS             reduce using rule 65 (exp -> expmath .)
    MENOS           reduce using rule 65 (exp -> expmath .)
    MULTIPLICACION  reduce using rule 65 (exp -> expmath .)
    DIVISION        reduce using rule 65 (exp -> expmath .)
    AND             reduce using rule 65 (exp -> expmath .)
    OR              reduce using rule 65 (exp -> expmath .)
    IGUALI          reduce using rule 65 (exp -> expmath .)
    DIF             reduce using rule 65 (exp -> expmath .)
    MAYOR           reduce using rule 65 (exp -> expmath .)
    MENOR           reduce using rule 65 (exp -> expmath .)
    MAYORI          reduce using rule 65 (exp -> expmath .)
    MENORI          reduce using rule 65 (exp -> expmath .)
    PCOMA           reduce using rule 65 (exp -> expmath .)
    COMA            reduce using rule 65 (exp -> expmath .)
    LLLAV           reduce using rule 65 (exp -> expmath .)
    RPAR            reduce using rule 65 (exp -> expmath .)
    RCOR            reduce using rule 65 (exp -> expmath .)
    ARROW2          reduce using rule 65 (exp -> expmath .)
    ORSINGLE        reduce using rule 65 (exp -> expmath .)


state 84

    (66) exp -> explog .

    MAS             reduce using rule 66 (exp -> explog .)
    MENOS           reduce using rule 66 (exp -> explog .)
    MULTIPLICACION  reduce using rule 66 (exp -> explog .)
    DIVISION        reduce using rule 66 (exp -> explog .)
    AND             reduce using rule 66 (exp -> explog .)
    OR              reduce using rule 66 (exp -> explog .)
    IGUALI          reduce using rule 66 (exp -> explog .)
    DIF             reduce using rule 66 (exp -> explog .)
    MAYOR           reduce using rule 66 (exp -> explog .)
    MENOR           reduce using rule 66 (exp -> explog .)
    MAYORI          reduce using rule 66 (exp -> explog .)
    MENORI          reduce using rule 66 (exp -> explog .)
    PCOMA           reduce using rule 66 (exp -> explog .)
    COMA            reduce using rule 66 (exp -> explog .)
    LLLAV           reduce using rule 66 (exp -> explog .)
    RPAR            reduce using rule 66 (exp -> explog .)
    RCOR            reduce using rule 66 (exp -> explog .)
    ARROW2          reduce using rule 66 (exp -> explog .)
    ORSINGLE        reduce using rule 66 (exp -> explog .)


state 85

    (67) exp -> exprel .

    MAS             reduce using rule 67 (exp -> exprel .)
    MENOS           reduce using rule 67 (exp -> exprel .)
    MULTIPLICACION  reduce using rule 67 (exp -> exprel .)
    DIVISION        reduce using rule 67 (exp -> exprel .)
    AND             reduce using rule 67 (exp -> exprel .)
    OR              reduce using rule 67 (exp -> exprel .)
    IGUALI          reduce using rule 67 (exp -> exprel .)
    DIF             reduce using rule 67 (exp -> exprel .)
    MAYOR           reduce using rule 67 (exp -> exprel .)
    MENOR           reduce using rule 67 (exp -> exprel .)
    MAYORI          reduce using rule 67 (exp -> exprel .)
    MENORI          reduce using rule 67 (exp -> exprel .)
    PCOMA           reduce using rule 67 (exp -> exprel .)
    COMA            reduce using rule 67 (exp -> exprel .)
    LLLAV           reduce using rule 67 (exp -> exprel .)
    RPAR            reduce using rule 67 (exp -> exprel .)
    RCOR            reduce using rule 67 (exp -> exprel .)
    ARROW2          reduce using rule 67 (exp -> exprel .)
    ORSINGLE        reduce using rule 67 (exp -> exprel .)


state 86

    (68) exp -> exparr .

    MAS             reduce using rule 68 (exp -> exparr .)
    MENOS           reduce using rule 68 (exp -> exparr .)
    MULTIPLICACION  reduce using rule 68 (exp -> exparr .)
    DIVISION        reduce using rule 68 (exp -> exparr .)
    AND             reduce using rule 68 (exp -> exparr .)
    OR              reduce using rule 68 (exp -> exparr .)
    IGUALI          reduce using rule 68 (exp -> exparr .)
    DIF             reduce using rule 68 (exp -> exparr .)
    MAYOR           reduce using rule 68 (exp -> exparr .)
    MENOR           reduce using rule 68 (exp -> exparr .)
    MAYORI          reduce using rule 68 (exp -> exparr .)
    MENORI          reduce using rule 68 (exp -> exparr .)
    PCOMA           reduce using rule 68 (exp -> exparr .)
    COMA            reduce using rule 68 (exp -> exparr .)
    LLLAV           reduce using rule 68 (exp -> exparr .)
    RPAR            reduce using rule 68 (exp -> exparr .)
    RCOR            reduce using rule 68 (exp -> exparr .)
    ARROW2          reduce using rule 68 (exp -> exparr .)
    ORSINGLE        reduce using rule 68 (exp -> exparr .)


state 87

    (69) exp -> ID .
    (84) exparr -> ID . lista_arr
    (53) lista_arr -> . lista_arr LCOR exp RCOR
    (54) lista_arr -> . LCOR exp RCOR

    MAS             reduce using rule 69 (exp -> ID .)
    MENOS           reduce using rule 69 (exp -> ID .)
    MULTIPLICACION  reduce using rule 69 (exp -> ID .)
    DIVISION        reduce using rule 69 (exp -> ID .)
    AND             reduce using rule 69 (exp -> ID .)
    OR              reduce using rule 69 (exp -> ID .)
    IGUALI          reduce using rule 69 (exp -> ID .)
    DIF             reduce using rule 69 (exp -> ID .)
    MAYOR           reduce using rule 69 (exp -> ID .)
    MENOR           reduce using rule 69 (exp -> ID .)
    MAYORI          reduce using rule 69 (exp -> ID .)
    MENORI          reduce using rule 69 (exp -> ID .)
    PCOMA           reduce using rule 69 (exp -> ID .)
    COMA            reduce using rule 69 (exp -> ID .)
    LLLAV           reduce using rule 69 (exp -> ID .)
    RPAR            reduce using rule 69 (exp -> ID .)
    RCOR            reduce using rule 69 (exp -> ID .)
    ARROW2          reduce using rule 69 (exp -> ID .)
    ORSINGLE        reduce using rule 69 (exp -> ID .)
    LCOR            shift and go to state 79

    lista_arr                      shift and go to state 128

state 88

    (87) valores -> ENTERO .

    MAS             reduce using rule 87 (valores -> ENTERO .)
    MENOS           reduce using rule 87 (valores -> ENTERO .)
    MULTIPLICACION  reduce using rule 87 (valores -> ENTERO .)
    DIVISION        reduce using rule 87 (valores -> ENTERO .)
    AND             reduce using rule 87 (valores -> ENTERO .)
    OR              reduce using rule 87 (valores -> ENTERO .)
    IGUALI          reduce using rule 87 (valores -> ENTERO .)
    DIF             reduce using rule 87 (valores -> ENTERO .)
    MAYOR           reduce using rule 87 (valores -> ENTERO .)
    MENOR           reduce using rule 87 (valores -> ENTERO .)
    MAYORI          reduce using rule 87 (valores -> ENTERO .)
    MENORI          reduce using rule 87 (valores -> ENTERO .)
    PCOMA           reduce using rule 87 (valores -> ENTERO .)
    COMA            reduce using rule 87 (valores -> ENTERO .)
    LLLAV           reduce using rule 87 (valores -> ENTERO .)
    RPAR            reduce using rule 87 (valores -> ENTERO .)
    RCOR            reduce using rule 87 (valores -> ENTERO .)
    LPAR            reduce using rule 87 (valores -> ENTERO .)
    ARROW2          reduce using rule 87 (valores -> ENTERO .)
    ORSINGLE        reduce using rule 87 (valores -> ENTERO .)


state 89

    (88) valores -> DECIMAL .

    MAS             reduce using rule 88 (valores -> DECIMAL .)
    MENOS           reduce using rule 88 (valores -> DECIMAL .)
    MULTIPLICACION  reduce using rule 88 (valores -> DECIMAL .)
    DIVISION        reduce using rule 88 (valores -> DECIMAL .)
    AND             reduce using rule 88 (valores -> DECIMAL .)
    OR              reduce using rule 88 (valores -> DECIMAL .)
    IGUALI          reduce using rule 88 (valores -> DECIMAL .)
    DIF             reduce using rule 88 (valores -> DECIMAL .)
    MAYOR           reduce using rule 88 (valores -> DECIMAL .)
    MENOR           reduce using rule 88 (valores -> DECIMAL .)
    MAYORI          reduce using rule 88 (valores -> DECIMAL .)
    MENORI          reduce using rule 88 (valores -> DECIMAL .)
    PCOMA           reduce using rule 88 (valores -> DECIMAL .)
    COMA            reduce using rule 88 (valores -> DECIMAL .)
    LLLAV           reduce using rule 88 (valores -> DECIMAL .)
    RPAR            reduce using rule 88 (valores -> DECIMAL .)
    RCOR            reduce using rule 88 (valores -> DECIMAL .)
    LPAR            reduce using rule 88 (valores -> DECIMAL .)
    ARROW2          reduce using rule 88 (valores -> DECIMAL .)
    ORSINGLE        reduce using rule 88 (valores -> DECIMAL .)


state 90

    (89) valores -> CADENA .

    MAS             reduce using rule 89 (valores -> CADENA .)
    MENOS           reduce using rule 89 (valores -> CADENA .)
    MULTIPLICACION  reduce using rule 89 (valores -> CADENA .)
    DIVISION        reduce using rule 89 (valores -> CADENA .)
    AND             reduce using rule 89 (valores -> CADENA .)
    OR              reduce using rule 89 (valores -> CADENA .)
    IGUALI          reduce using rule 89 (valores -> CADENA .)
    DIF             reduce using rule 89 (valores -> CADENA .)
    MAYOR           reduce using rule 89 (valores -> CADENA .)
    MENOR           reduce using rule 89 (valores -> CADENA .)
    MAYORI          reduce using rule 89 (valores -> CADENA .)
    MENORI          reduce using rule 89 (valores -> CADENA .)
    PCOMA           reduce using rule 89 (valores -> CADENA .)
    COMA            reduce using rule 89 (valores -> CADENA .)
    LLLAV           reduce using rule 89 (valores -> CADENA .)
    RPAR            reduce using rule 89 (valores -> CADENA .)
    RCOR            reduce using rule 89 (valores -> CADENA .)
    LPAR            reduce using rule 89 (valores -> CADENA .)
    ARROW2          reduce using rule 89 (valores -> CADENA .)
    ORSINGLE        reduce using rule 89 (valores -> CADENA .)


state 91

    (90) valores -> BOOLEANO .

    MAS             reduce using rule 90 (valores -> BOOLEANO .)
    MENOS           reduce using rule 90 (valores -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 90 (valores -> BOOLEANO .)
    DIVISION        reduce using rule 90 (valores -> BOOLEANO .)
    AND             reduce using rule 90 (valores -> BOOLEANO .)
    OR              reduce using rule 90 (valores -> BOOLEANO .)
    IGUALI          reduce using rule 90 (valores -> BOOLEANO .)
    DIF             reduce using rule 90 (valores -> BOOLEANO .)
    MAYOR           reduce using rule 90 (valores -> BOOLEANO .)
    MENOR           reduce using rule 90 (valores -> BOOLEANO .)
    MAYORI          reduce using rule 90 (valores -> BOOLEANO .)
    MENORI          reduce using rule 90 (valores -> BOOLEANO .)
    PCOMA           reduce using rule 90 (valores -> BOOLEANO .)
    COMA            reduce using rule 90 (valores -> BOOLEANO .)
    LLLAV           reduce using rule 90 (valores -> BOOLEANO .)
    RPAR            reduce using rule 90 (valores -> BOOLEANO .)
    RCOR            reduce using rule 90 (valores -> BOOLEANO .)
    LPAR            reduce using rule 90 (valores -> BOOLEANO .)
    ARROW2          reduce using rule 90 (valores -> BOOLEANO .)
    ORSINGLE        reduce using rule 90 (valores -> BOOLEANO .)


state 92

    (74) expmath -> MENOS . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 129
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 93

    (77) explog -> AD . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 130
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 94

    (85) exparr -> LCOR . lista_exp RCOR
    (86) exparr -> LCOR . exp PCOMA exp RCOR
    (55) lista_exp -> . lista_exp COMA exp
    (56) lista_exp -> . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    lista_exp                      shift and go to state 131
    exp                            shift and go to state 132
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 95

    (21) if -> IF exp . statement else
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126
    LLLAV           shift and go to state 19

    statement                      shift and go to state 133

state 96

    (24) match -> MATCH exp . match_statement
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp
    (25) match_statement -> . LLLAV lista_brazos RLLAV
    (26) match_statement -> . LLLAV RLLAV

    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126
    LLLAV           shift and go to state 135

    match_statement                shift and go to state 134

state 97

    (38) loop -> LOOP statement .

    RLLAV           reduce using rule 38 (loop -> LOOP statement .)
    PRINT           reduce using rule 38 (loop -> LOOP statement .)
    LET             reduce using rule 38 (loop -> LOOP statement .)
    ID              reduce using rule 38 (loop -> LOOP statement .)
    BREAK           reduce using rule 38 (loop -> LOOP statement .)
    RETURN          reduce using rule 38 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 38 (loop -> LOOP statement .)
    IF              reduce using rule 38 (loop -> LOOP statement .)
    MATCH           reduce using rule 38 (loop -> LOOP statement .)
    LOOP            reduce using rule 38 (loop -> LOOP statement .)
    WHILE           reduce using rule 38 (loop -> LOOP statement .)
    COMA            reduce using rule 38 (loop -> LOOP statement .)


state 98

    (39) while -> WHILE exp . statement
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV

    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126
    LLLAV           shift and go to state 19

    statement                      shift and go to state 136

state 99

    (59) asignacion_simple -> MUT ID DPUNTOS tipo_var .

    RPAR            reduce using rule 59 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)
    COMA            reduce using rule 59 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)
    IGUAL           reduce using rule 59 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)


state 100

    (60) asignacion_simple -> MUT ID DPUNTOS lista_arr2 .

    RPAR            reduce using rule 60 (asignacion_simple -> MUT ID DPUNTOS lista_arr2 .)
    COMA            reduce using rule 60 (asignacion_simple -> MUT ID DPUNTOS lista_arr2 .)
    IGUAL           reduce using rule 60 (asignacion_simple -> MUT ID DPUNTOS lista_arr2 .)


state 101

    (61) lista_arr2 -> LCOR lista_arr2 PCOMA . exp RCOR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 137
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 102

    (62) lista_arr2 -> LCOR tipo_var PCOMA . exp RCOR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 138
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 103

    (13) funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .

    FN              reduce using rule 13 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    $end            reduce using rule 13 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)


state 104

    (101) print -> PRINT AD LPAR . exp RPAR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 139
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 105

    (48) declaracion -> LET asignacion_simple IGUAL . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 140
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 106

    (49) declaracion -> LET MUT asignacion .

    PCOMA           reduce using rule 49 (declaracion -> LET MUT asignacion .)


state 107

    (59) asignacion_simple -> MUT ID . DPUNTOS tipo_var
    (60) asignacion_simple -> MUT ID . DPUNTOS lista_arr2
    (51) asignacion -> ID . IGUAL exp
    (52) asignacion -> ID . lista_arr IGUAL exp
    (53) lista_arr -> . lista_arr LCOR exp RCOR
    (54) lista_arr -> . LCOR exp RCOR

    DPUNTOS         shift and go to state 59
    IGUAL           shift and go to state 76
    LCOR            shift and go to state 79

    lista_arr                      shift and go to state 77

state 108

    (51) asignacion -> ID IGUAL exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    PCOMA           reduce using rule 51 (asignacion -> ID IGUAL exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 109

    (52) asignacion -> ID lista_arr IGUAL . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 141
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 110

    (53) lista_arr -> lista_arr LCOR . exp RCOR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 142
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 111

    (99) llamada -> ID LPAR RPAR .

    PCOMA           reduce using rule 99 (llamada -> ID LPAR RPAR .)
    COMA            reduce using rule 99 (llamada -> ID LPAR RPAR .)


state 112

    (100) llamada -> ID LPAR lista_exp . RPAR
    (55) lista_exp -> lista_exp . COMA exp

    RPAR            shift and go to state 143
    COMA            shift and go to state 144


state 113

    (56) lista_exp -> exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RPAR            reduce using rule 56 (lista_exp -> exp .)
    COMA            reduce using rule 56 (lista_exp -> exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 114

    (54) lista_arr -> LCOR exp . RCOR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RCOR            shift and go to state 145
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 115

    (70) expmath -> exp MAS . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 146
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 116

    (71) expmath -> exp MENOS . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 147
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 117

    (72) expmath -> exp MULTIPLICACION . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 148
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 118

    (73) expmath -> exp DIVISION . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 149
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 119

    (75) explog -> exp AND . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 150
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 120

    (76) explog -> exp OR . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 151
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 121

    (78) exprel -> exp IGUALI . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 152
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 122

    (79) exprel -> exp DIF . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 153
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 123

    (80) exprel -> exp MAYOR . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 154
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 124

    (81) exprel -> exp MENOR . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 155
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 125

    (82) exprel -> exp MAYORI . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 156
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 126

    (83) exprel -> exp MENORI . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 157
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 127

    (64) exp -> LPAR valores . LPAR

    LPAR            shift and go to state 158


state 128

    (84) exparr -> ID lista_arr .
    (53) lista_arr -> lista_arr . LCOR exp RCOR

    MAS             reduce using rule 84 (exparr -> ID lista_arr .)
    MENOS           reduce using rule 84 (exparr -> ID lista_arr .)
    MULTIPLICACION  reduce using rule 84 (exparr -> ID lista_arr .)
    DIVISION        reduce using rule 84 (exparr -> ID lista_arr .)
    AND             reduce using rule 84 (exparr -> ID lista_arr .)
    OR              reduce using rule 84 (exparr -> ID lista_arr .)
    IGUALI          reduce using rule 84 (exparr -> ID lista_arr .)
    DIF             reduce using rule 84 (exparr -> ID lista_arr .)
    MAYOR           reduce using rule 84 (exparr -> ID lista_arr .)
    MENOR           reduce using rule 84 (exparr -> ID lista_arr .)
    MAYORI          reduce using rule 84 (exparr -> ID lista_arr .)
    MENORI          reduce using rule 84 (exparr -> ID lista_arr .)
    PCOMA           reduce using rule 84 (exparr -> ID lista_arr .)
    COMA            reduce using rule 84 (exparr -> ID lista_arr .)
    LLLAV           reduce using rule 84 (exparr -> ID lista_arr .)
    RPAR            reduce using rule 84 (exparr -> ID lista_arr .)
    RCOR            reduce using rule 84 (exparr -> ID lista_arr .)
    ARROW2          reduce using rule 84 (exparr -> ID lista_arr .)
    ORSINGLE        reduce using rule 84 (exparr -> ID lista_arr .)
    LCOR            shift and go to state 110


state 129

    (74) expmath -> MENOS exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    MAS             reduce using rule 74 (expmath -> MENOS exp .)
    MENOS           reduce using rule 74 (expmath -> MENOS exp .)
    MULTIPLICACION  reduce using rule 74 (expmath -> MENOS exp .)
    DIVISION        reduce using rule 74 (expmath -> MENOS exp .)
    AND             reduce using rule 74 (expmath -> MENOS exp .)
    OR              reduce using rule 74 (expmath -> MENOS exp .)
    IGUALI          reduce using rule 74 (expmath -> MENOS exp .)
    DIF             reduce using rule 74 (expmath -> MENOS exp .)
    MAYOR           reduce using rule 74 (expmath -> MENOS exp .)
    MENOR           reduce using rule 74 (expmath -> MENOS exp .)
    MAYORI          reduce using rule 74 (expmath -> MENOS exp .)
    MENORI          reduce using rule 74 (expmath -> MENOS exp .)
    PCOMA           reduce using rule 74 (expmath -> MENOS exp .)
    COMA            reduce using rule 74 (expmath -> MENOS exp .)
    LLLAV           reduce using rule 74 (expmath -> MENOS exp .)
    RPAR            reduce using rule 74 (expmath -> MENOS exp .)
    RCOR            reduce using rule 74 (expmath -> MENOS exp .)
    ARROW2          reduce using rule 74 (expmath -> MENOS exp .)
    ORSINGLE        reduce using rule 74 (expmath -> MENOS exp .)

  ! MAS             [ shift and go to state 115 ]
  ! MENOS           [ shift and go to state 116 ]
  ! MULTIPLICACION  [ shift and go to state 117 ]
  ! DIVISION        [ shift and go to state 118 ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 130

    (77) explog -> AD exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 77 (explog -> AD exp .)
    OR              reduce using rule 77 (explog -> AD exp .)
    PCOMA           reduce using rule 77 (explog -> AD exp .)
    COMA            reduce using rule 77 (explog -> AD exp .)
    LLLAV           reduce using rule 77 (explog -> AD exp .)
    RPAR            reduce using rule 77 (explog -> AD exp .)
    RCOR            reduce using rule 77 (explog -> AD exp .)
    ARROW2          reduce using rule 77 (explog -> AD exp .)
    ORSINGLE        reduce using rule 77 (explog -> AD exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126

  ! MAS             [ reduce using rule 77 (explog -> AD exp .) ]
  ! MENOS           [ reduce using rule 77 (explog -> AD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 77 (explog -> AD exp .) ]
  ! DIVISION        [ reduce using rule 77 (explog -> AD exp .) ]
  ! IGUALI          [ reduce using rule 77 (explog -> AD exp .) ]
  ! DIF             [ reduce using rule 77 (explog -> AD exp .) ]
  ! MAYOR           [ reduce using rule 77 (explog -> AD exp .) ]
  ! MENOR           [ reduce using rule 77 (explog -> AD exp .) ]
  ! MAYORI          [ reduce using rule 77 (explog -> AD exp .) ]
  ! MENORI          [ reduce using rule 77 (explog -> AD exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]


state 131

    (85) exparr -> LCOR lista_exp . RCOR
    (55) lista_exp -> lista_exp . COMA exp

    RCOR            shift and go to state 159
    COMA            shift and go to state 144


state 132

    (86) exparr -> LCOR exp . PCOMA exp RCOR
    (56) lista_exp -> exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    PCOMA           shift and go to state 160
    RCOR            reduce using rule 56 (lista_exp -> exp .)
    COMA            reduce using rule 56 (lista_exp -> exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 133

    (21) if -> IF exp statement . else
    (22) else -> . ELSE statement
    (23) else -> . ELSE if

    ELSE            shift and go to state 162

    else                           shift and go to state 161

state 134

    (24) match -> MATCH exp match_statement .

    RLLAV           reduce using rule 24 (match -> MATCH exp match_statement .)
    PRINT           reduce using rule 24 (match -> MATCH exp match_statement .)
    LET             reduce using rule 24 (match -> MATCH exp match_statement .)
    ID              reduce using rule 24 (match -> MATCH exp match_statement .)
    BREAK           reduce using rule 24 (match -> MATCH exp match_statement .)
    RETURN          reduce using rule 24 (match -> MATCH exp match_statement .)
    CONTINUE        reduce using rule 24 (match -> MATCH exp match_statement .)
    IF              reduce using rule 24 (match -> MATCH exp match_statement .)
    MATCH           reduce using rule 24 (match -> MATCH exp match_statement .)
    LOOP            reduce using rule 24 (match -> MATCH exp match_statement .)
    WHILE           reduce using rule 24 (match -> MATCH exp match_statement .)
    COMA            reduce using rule 24 (match -> MATCH exp match_statement .)


state 135

    (25) match_statement -> LLLAV . lista_brazos RLLAV
    (26) match_statement -> LLLAV . RLLAV
    (27) lista_brazos -> . lista_brazos brazo
    (28) lista_brazos -> . brazo
    (29) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (30) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (31) brazo -> . lista_exp_brazos ARROW2 statement
    (32) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (33) lista_exp_brazos -> . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    RLLAV           shift and go to state 164
    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    lista_brazos                   shift and go to state 163
    brazo                          shift and go to state 165
    lista_exp_brazos               shift and go to state 166
    exp                            shift and go to state 167
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 136

    (39) while -> WHILE exp statement .

    RLLAV           reduce using rule 39 (while -> WHILE exp statement .)
    PRINT           reduce using rule 39 (while -> WHILE exp statement .)
    LET             reduce using rule 39 (while -> WHILE exp statement .)
    ID              reduce using rule 39 (while -> WHILE exp statement .)
    BREAK           reduce using rule 39 (while -> WHILE exp statement .)
    RETURN          reduce using rule 39 (while -> WHILE exp statement .)
    CONTINUE        reduce using rule 39 (while -> WHILE exp statement .)
    IF              reduce using rule 39 (while -> WHILE exp statement .)
    MATCH           reduce using rule 39 (while -> WHILE exp statement .)
    LOOP            reduce using rule 39 (while -> WHILE exp statement .)
    WHILE           reduce using rule 39 (while -> WHILE exp statement .)
    COMA            reduce using rule 39 (while -> WHILE exp statement .)


state 137

    (61) lista_arr2 -> LCOR lista_arr2 PCOMA exp . RCOR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RCOR            shift and go to state 168
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 138

    (62) lista_arr2 -> LCOR tipo_var PCOMA exp . RCOR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RCOR            shift and go to state 169
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 139

    (101) print -> PRINT AD LPAR exp . RPAR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RPAR            shift and go to state 170
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 140

    (48) declaracion -> LET asignacion_simple IGUAL exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    PCOMA           reduce using rule 48 (declaracion -> LET asignacion_simple IGUAL exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 141

    (52) asignacion -> ID lista_arr IGUAL exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    PCOMA           reduce using rule 52 (asignacion -> ID lista_arr IGUAL exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 142

    (53) lista_arr -> lista_arr LCOR exp . RCOR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RCOR            shift and go to state 171
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 143

    (100) llamada -> ID LPAR lista_exp RPAR .

    PCOMA           reduce using rule 100 (llamada -> ID LPAR lista_exp RPAR .)
    COMA            reduce using rule 100 (llamada -> ID LPAR lista_exp RPAR .)


state 144

    (55) lista_exp -> lista_exp COMA . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 172
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 145

    (54) lista_arr -> LCOR exp RCOR .

    IGUAL           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    LCOR            reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MAS             reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MENOS           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MULTIPLICACION  reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    DIVISION        reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    AND             reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    OR              reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    IGUALI          reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    DIF             reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MAYOR           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MENOR           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MAYORI          reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    MENORI          reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    PCOMA           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    COMA            reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    LLLAV           reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    RPAR            reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    RCOR            reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    ARROW2          reduce using rule 54 (lista_arr -> LCOR exp RCOR .)
    ORSINGLE        reduce using rule 54 (lista_arr -> LCOR exp RCOR .)


state 146

    (70) expmath -> exp MAS exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    MAS             reduce using rule 70 (expmath -> exp MAS exp .)
    MENOS           reduce using rule 70 (expmath -> exp MAS exp .)
    AND             reduce using rule 70 (expmath -> exp MAS exp .)
    OR              reduce using rule 70 (expmath -> exp MAS exp .)
    IGUALI          reduce using rule 70 (expmath -> exp MAS exp .)
    DIF             reduce using rule 70 (expmath -> exp MAS exp .)
    MAYOR           reduce using rule 70 (expmath -> exp MAS exp .)
    MENOR           reduce using rule 70 (expmath -> exp MAS exp .)
    MAYORI          reduce using rule 70 (expmath -> exp MAS exp .)
    MENORI          reduce using rule 70 (expmath -> exp MAS exp .)
    PCOMA           reduce using rule 70 (expmath -> exp MAS exp .)
    COMA            reduce using rule 70 (expmath -> exp MAS exp .)
    LLLAV           reduce using rule 70 (expmath -> exp MAS exp .)
    RPAR            reduce using rule 70 (expmath -> exp MAS exp .)
    RCOR            reduce using rule 70 (expmath -> exp MAS exp .)
    ARROW2          reduce using rule 70 (expmath -> exp MAS exp .)
    ORSINGLE        reduce using rule 70 (expmath -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MULTIPLICACION  [ reduce using rule 70 (expmath -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 70 (expmath -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 115 ]
  ! MENOS           [ shift and go to state 116 ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 147

    (71) expmath -> exp MENOS exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    MAS             reduce using rule 71 (expmath -> exp MENOS exp .)
    MENOS           reduce using rule 71 (expmath -> exp MENOS exp .)
    AND             reduce using rule 71 (expmath -> exp MENOS exp .)
    OR              reduce using rule 71 (expmath -> exp MENOS exp .)
    IGUALI          reduce using rule 71 (expmath -> exp MENOS exp .)
    DIF             reduce using rule 71 (expmath -> exp MENOS exp .)
    MAYOR           reduce using rule 71 (expmath -> exp MENOS exp .)
    MENOR           reduce using rule 71 (expmath -> exp MENOS exp .)
    MAYORI          reduce using rule 71 (expmath -> exp MENOS exp .)
    MENORI          reduce using rule 71 (expmath -> exp MENOS exp .)
    PCOMA           reduce using rule 71 (expmath -> exp MENOS exp .)
    COMA            reduce using rule 71 (expmath -> exp MENOS exp .)
    LLLAV           reduce using rule 71 (expmath -> exp MENOS exp .)
    RPAR            reduce using rule 71 (expmath -> exp MENOS exp .)
    RCOR            reduce using rule 71 (expmath -> exp MENOS exp .)
    ARROW2          reduce using rule 71 (expmath -> exp MENOS exp .)
    ORSINGLE        reduce using rule 71 (expmath -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MULTIPLICACION  [ reduce using rule 71 (expmath -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 71 (expmath -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 115 ]
  ! MENOS           [ shift and go to state 116 ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 148

    (72) expmath -> exp MULTIPLICACION exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    MAS             reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    AND             reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    OR              reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    IGUALI          reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    DIF             reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MAYORI          reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    MENORI          reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    PCOMA           reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    LLLAV           reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    RPAR            reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    RCOR            reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    ARROW2          reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)
    ORSINGLE        reduce using rule 72 (expmath -> exp MULTIPLICACION exp .)

  ! MAS             [ shift and go to state 115 ]
  ! MENOS           [ shift and go to state 116 ]
  ! MULTIPLICACION  [ shift and go to state 117 ]
  ! DIVISION        [ shift and go to state 118 ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 149

    (73) expmath -> exp DIVISION exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    MAS             reduce using rule 73 (expmath -> exp DIVISION exp .)
    MENOS           reduce using rule 73 (expmath -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 73 (expmath -> exp DIVISION exp .)
    DIVISION        reduce using rule 73 (expmath -> exp DIVISION exp .)
    AND             reduce using rule 73 (expmath -> exp DIVISION exp .)
    OR              reduce using rule 73 (expmath -> exp DIVISION exp .)
    IGUALI          reduce using rule 73 (expmath -> exp DIVISION exp .)
    DIF             reduce using rule 73 (expmath -> exp DIVISION exp .)
    MAYOR           reduce using rule 73 (expmath -> exp DIVISION exp .)
    MENOR           reduce using rule 73 (expmath -> exp DIVISION exp .)
    MAYORI          reduce using rule 73 (expmath -> exp DIVISION exp .)
    MENORI          reduce using rule 73 (expmath -> exp DIVISION exp .)
    PCOMA           reduce using rule 73 (expmath -> exp DIVISION exp .)
    COMA            reduce using rule 73 (expmath -> exp DIVISION exp .)
    LLLAV           reduce using rule 73 (expmath -> exp DIVISION exp .)
    RPAR            reduce using rule 73 (expmath -> exp DIVISION exp .)
    RCOR            reduce using rule 73 (expmath -> exp DIVISION exp .)
    ARROW2          reduce using rule 73 (expmath -> exp DIVISION exp .)
    ORSINGLE        reduce using rule 73 (expmath -> exp DIVISION exp .)

  ! MAS             [ shift and go to state 115 ]
  ! MENOS           [ shift and go to state 116 ]
  ! MULTIPLICACION  [ shift and go to state 117 ]
  ! DIVISION        [ shift and go to state 118 ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 150

    (75) explog -> exp AND exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 75 (explog -> exp AND exp .)
    OR              reduce using rule 75 (explog -> exp AND exp .)
    PCOMA           reduce using rule 75 (explog -> exp AND exp .)
    COMA            reduce using rule 75 (explog -> exp AND exp .)
    LLLAV           reduce using rule 75 (explog -> exp AND exp .)
    RPAR            reduce using rule 75 (explog -> exp AND exp .)
    RCOR            reduce using rule 75 (explog -> exp AND exp .)
    ARROW2          reduce using rule 75 (explog -> exp AND exp .)
    ORSINGLE        reduce using rule 75 (explog -> exp AND exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126

  ! MAS             [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MULTIPLICACION  [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! DIVISION        [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! IGUALI          [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! DIF             [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MAYORI          [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! MENORI          [ reduce using rule 75 (explog -> exp AND exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]


state 151

    (76) explog -> exp OR exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    OR              reduce using rule 76 (explog -> exp OR exp .)
    PCOMA           reduce using rule 76 (explog -> exp OR exp .)
    COMA            reduce using rule 76 (explog -> exp OR exp .)
    LLLAV           reduce using rule 76 (explog -> exp OR exp .)
    RPAR            reduce using rule 76 (explog -> exp OR exp .)
    RCOR            reduce using rule 76 (explog -> exp OR exp .)
    ARROW2          reduce using rule 76 (explog -> exp OR exp .)
    ORSINGLE        reduce using rule 76 (explog -> exp OR exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126

  ! MAS             [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! DIVISION        [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! AND             [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! IGUALI          [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! DIF             [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MAYORI          [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! MENORI          [ reduce using rule 76 (explog -> exp OR exp .) ]
  ! OR              [ shift and go to state 120 ]


state 152

    (78) exprel -> exp IGUALI exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 78 (exprel -> exp IGUALI exp .)
    OR              reduce using rule 78 (exprel -> exp IGUALI exp .)
    IGUALI          reduce using rule 78 (exprel -> exp IGUALI exp .)
    DIF             reduce using rule 78 (exprel -> exp IGUALI exp .)
    MAYOR           reduce using rule 78 (exprel -> exp IGUALI exp .)
    MENOR           reduce using rule 78 (exprel -> exp IGUALI exp .)
    MAYORI          reduce using rule 78 (exprel -> exp IGUALI exp .)
    MENORI          reduce using rule 78 (exprel -> exp IGUALI exp .)
    PCOMA           reduce using rule 78 (exprel -> exp IGUALI exp .)
    COMA            reduce using rule 78 (exprel -> exp IGUALI exp .)
    LLLAV           reduce using rule 78 (exprel -> exp IGUALI exp .)
    RPAR            reduce using rule 78 (exprel -> exp IGUALI exp .)
    RCOR            reduce using rule 78 (exprel -> exp IGUALI exp .)
    ARROW2          reduce using rule 78 (exprel -> exp IGUALI exp .)
    ORSINGLE        reduce using rule 78 (exprel -> exp IGUALI exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 78 (exprel -> exp IGUALI exp .) ]
  ! MENOS           [ reduce using rule 78 (exprel -> exp IGUALI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 78 (exprel -> exp IGUALI exp .) ]
  ! DIVISION        [ reduce using rule 78 (exprel -> exp IGUALI exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 153

    (79) exprel -> exp DIF exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 79 (exprel -> exp DIF exp .)
    OR              reduce using rule 79 (exprel -> exp DIF exp .)
    IGUALI          reduce using rule 79 (exprel -> exp DIF exp .)
    DIF             reduce using rule 79 (exprel -> exp DIF exp .)
    MAYOR           reduce using rule 79 (exprel -> exp DIF exp .)
    MENOR           reduce using rule 79 (exprel -> exp DIF exp .)
    MAYORI          reduce using rule 79 (exprel -> exp DIF exp .)
    MENORI          reduce using rule 79 (exprel -> exp DIF exp .)
    PCOMA           reduce using rule 79 (exprel -> exp DIF exp .)
    COMA            reduce using rule 79 (exprel -> exp DIF exp .)
    LLLAV           reduce using rule 79 (exprel -> exp DIF exp .)
    RPAR            reduce using rule 79 (exprel -> exp DIF exp .)
    RCOR            reduce using rule 79 (exprel -> exp DIF exp .)
    ARROW2          reduce using rule 79 (exprel -> exp DIF exp .)
    ORSINGLE        reduce using rule 79 (exprel -> exp DIF exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 79 (exprel -> exp DIF exp .) ]
  ! MENOS           [ reduce using rule 79 (exprel -> exp DIF exp .) ]
  ! MULTIPLICACION  [ reduce using rule 79 (exprel -> exp DIF exp .) ]
  ! DIVISION        [ reduce using rule 79 (exprel -> exp DIF exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 154

    (80) exprel -> exp MAYOR exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 80 (exprel -> exp MAYOR exp .)
    OR              reduce using rule 80 (exprel -> exp MAYOR exp .)
    IGUALI          reduce using rule 80 (exprel -> exp MAYOR exp .)
    DIF             reduce using rule 80 (exprel -> exp MAYOR exp .)
    MAYOR           reduce using rule 80 (exprel -> exp MAYOR exp .)
    MENOR           reduce using rule 80 (exprel -> exp MAYOR exp .)
    MAYORI          reduce using rule 80 (exprel -> exp MAYOR exp .)
    MENORI          reduce using rule 80 (exprel -> exp MAYOR exp .)
    PCOMA           reduce using rule 80 (exprel -> exp MAYOR exp .)
    COMA            reduce using rule 80 (exprel -> exp MAYOR exp .)
    LLLAV           reduce using rule 80 (exprel -> exp MAYOR exp .)
    RPAR            reduce using rule 80 (exprel -> exp MAYOR exp .)
    RCOR            reduce using rule 80 (exprel -> exp MAYOR exp .)
    ARROW2          reduce using rule 80 (exprel -> exp MAYOR exp .)
    ORSINGLE        reduce using rule 80 (exprel -> exp MAYOR exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 80 (exprel -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 80 (exprel -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 80 (exprel -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 80 (exprel -> exp MAYOR exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 155

    (81) exprel -> exp MENOR exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 81 (exprel -> exp MENOR exp .)
    OR              reduce using rule 81 (exprel -> exp MENOR exp .)
    IGUALI          reduce using rule 81 (exprel -> exp MENOR exp .)
    DIF             reduce using rule 81 (exprel -> exp MENOR exp .)
    MAYOR           reduce using rule 81 (exprel -> exp MENOR exp .)
    MENOR           reduce using rule 81 (exprel -> exp MENOR exp .)
    MAYORI          reduce using rule 81 (exprel -> exp MENOR exp .)
    MENORI          reduce using rule 81 (exprel -> exp MENOR exp .)
    PCOMA           reduce using rule 81 (exprel -> exp MENOR exp .)
    COMA            reduce using rule 81 (exprel -> exp MENOR exp .)
    LLLAV           reduce using rule 81 (exprel -> exp MENOR exp .)
    RPAR            reduce using rule 81 (exprel -> exp MENOR exp .)
    RCOR            reduce using rule 81 (exprel -> exp MENOR exp .)
    ARROW2          reduce using rule 81 (exprel -> exp MENOR exp .)
    ORSINGLE        reduce using rule 81 (exprel -> exp MENOR exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 81 (exprel -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 81 (exprel -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 81 (exprel -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 81 (exprel -> exp MENOR exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 156

    (82) exprel -> exp MAYORI exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 82 (exprel -> exp MAYORI exp .)
    OR              reduce using rule 82 (exprel -> exp MAYORI exp .)
    IGUALI          reduce using rule 82 (exprel -> exp MAYORI exp .)
    DIF             reduce using rule 82 (exprel -> exp MAYORI exp .)
    MAYOR           reduce using rule 82 (exprel -> exp MAYORI exp .)
    MENOR           reduce using rule 82 (exprel -> exp MAYORI exp .)
    MAYORI          reduce using rule 82 (exprel -> exp MAYORI exp .)
    MENORI          reduce using rule 82 (exprel -> exp MAYORI exp .)
    PCOMA           reduce using rule 82 (exprel -> exp MAYORI exp .)
    COMA            reduce using rule 82 (exprel -> exp MAYORI exp .)
    LLLAV           reduce using rule 82 (exprel -> exp MAYORI exp .)
    RPAR            reduce using rule 82 (exprel -> exp MAYORI exp .)
    RCOR            reduce using rule 82 (exprel -> exp MAYORI exp .)
    ARROW2          reduce using rule 82 (exprel -> exp MAYORI exp .)
    ORSINGLE        reduce using rule 82 (exprel -> exp MAYORI exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 82 (exprel -> exp MAYORI exp .) ]
  ! MENOS           [ reduce using rule 82 (exprel -> exp MAYORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 82 (exprel -> exp MAYORI exp .) ]
  ! DIVISION        [ reduce using rule 82 (exprel -> exp MAYORI exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 157

    (83) exprel -> exp MENORI exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    AND             reduce using rule 83 (exprel -> exp MENORI exp .)
    OR              reduce using rule 83 (exprel -> exp MENORI exp .)
    IGUALI          reduce using rule 83 (exprel -> exp MENORI exp .)
    DIF             reduce using rule 83 (exprel -> exp MENORI exp .)
    MAYOR           reduce using rule 83 (exprel -> exp MENORI exp .)
    MENOR           reduce using rule 83 (exprel -> exp MENORI exp .)
    MAYORI          reduce using rule 83 (exprel -> exp MENORI exp .)
    MENORI          reduce using rule 83 (exprel -> exp MENORI exp .)
    PCOMA           reduce using rule 83 (exprel -> exp MENORI exp .)
    COMA            reduce using rule 83 (exprel -> exp MENORI exp .)
    LLLAV           reduce using rule 83 (exprel -> exp MENORI exp .)
    RPAR            reduce using rule 83 (exprel -> exp MENORI exp .)
    RCOR            reduce using rule 83 (exprel -> exp MENORI exp .)
    ARROW2          reduce using rule 83 (exprel -> exp MENORI exp .)
    ORSINGLE        reduce using rule 83 (exprel -> exp MENORI exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118

  ! MAS             [ reduce using rule 83 (exprel -> exp MENORI exp .) ]
  ! MENOS           [ reduce using rule 83 (exprel -> exp MENORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 83 (exprel -> exp MENORI exp .) ]
  ! DIVISION        [ reduce using rule 83 (exprel -> exp MENORI exp .) ]
  ! AND             [ shift and go to state 119 ]
  ! OR              [ shift and go to state 120 ]
  ! IGUALI          [ shift and go to state 121 ]
  ! DIF             [ shift and go to state 122 ]
  ! MAYOR           [ shift and go to state 123 ]
  ! MENOR           [ shift and go to state 124 ]
  ! MAYORI          [ shift and go to state 125 ]
  ! MENORI          [ shift and go to state 126 ]


state 158

    (64) exp -> LPAR valores LPAR .

    MAS             reduce using rule 64 (exp -> LPAR valores LPAR .)
    MENOS           reduce using rule 64 (exp -> LPAR valores LPAR .)
    MULTIPLICACION  reduce using rule 64 (exp -> LPAR valores LPAR .)
    DIVISION        reduce using rule 64 (exp -> LPAR valores LPAR .)
    AND             reduce using rule 64 (exp -> LPAR valores LPAR .)
    OR              reduce using rule 64 (exp -> LPAR valores LPAR .)
    IGUALI          reduce using rule 64 (exp -> LPAR valores LPAR .)
    DIF             reduce using rule 64 (exp -> LPAR valores LPAR .)
    MAYOR           reduce using rule 64 (exp -> LPAR valores LPAR .)
    MENOR           reduce using rule 64 (exp -> LPAR valores LPAR .)
    MAYORI          reduce using rule 64 (exp -> LPAR valores LPAR .)
    MENORI          reduce using rule 64 (exp -> LPAR valores LPAR .)
    PCOMA           reduce using rule 64 (exp -> LPAR valores LPAR .)
    COMA            reduce using rule 64 (exp -> LPAR valores LPAR .)
    LLLAV           reduce using rule 64 (exp -> LPAR valores LPAR .)
    RPAR            reduce using rule 64 (exp -> LPAR valores LPAR .)
    RCOR            reduce using rule 64 (exp -> LPAR valores LPAR .)
    ARROW2          reduce using rule 64 (exp -> LPAR valores LPAR .)
    ORSINGLE        reduce using rule 64 (exp -> LPAR valores LPAR .)


state 159

    (85) exparr -> LCOR lista_exp RCOR .

    MAS             reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MENOS           reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MULTIPLICACION  reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    DIVISION        reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    AND             reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    OR              reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    IGUALI          reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    DIF             reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MAYOR           reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MENOR           reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MAYORI          reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    MENORI          reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    PCOMA           reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    COMA            reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    LLLAV           reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    RPAR            reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    RCOR            reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    ARROW2          reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)
    ORSINGLE        reduce using rule 85 (exparr -> LCOR lista_exp RCOR .)


state 160

    (86) exparr -> LCOR exp PCOMA . exp RCOR
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 173
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 161

    (21) if -> IF exp statement else .

    RLLAV           reduce using rule 21 (if -> IF exp statement else .)
    PRINT           reduce using rule 21 (if -> IF exp statement else .)
    LET             reduce using rule 21 (if -> IF exp statement else .)
    ID              reduce using rule 21 (if -> IF exp statement else .)
    BREAK           reduce using rule 21 (if -> IF exp statement else .)
    RETURN          reduce using rule 21 (if -> IF exp statement else .)
    CONTINUE        reduce using rule 21 (if -> IF exp statement else .)
    IF              reduce using rule 21 (if -> IF exp statement else .)
    MATCH           reduce using rule 21 (if -> IF exp statement else .)
    LOOP            reduce using rule 21 (if -> IF exp statement else .)
    WHILE           reduce using rule 21 (if -> IF exp statement else .)
    COMA            reduce using rule 21 (if -> IF exp statement else .)


state 162

    (22) else -> ELSE . statement
    (23) else -> ELSE . if
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV
    (21) if -> . IF exp statement else

    LLLAV           shift and go to state 19
    IF              shift and go to state 55

    statement                      shift and go to state 174
    if                             shift and go to state 175

state 163

    (25) match_statement -> LLLAV lista_brazos . RLLAV
    (27) lista_brazos -> lista_brazos . brazo
    (29) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (30) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (31) brazo -> . lista_exp_brazos ARROW2 statement
    (32) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (33) lista_exp_brazos -> . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    RLLAV           shift and go to state 176
    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    brazo                          shift and go to state 177
    lista_exp_brazos               shift and go to state 166
    exp                            shift and go to state 167
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 164

    (26) match_statement -> LLLAV RLLAV .

    RLLAV           reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    LET             reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    ID              reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    IF              reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 26 (match_statement -> LLLAV RLLAV .)
    COMA            reduce using rule 26 (match_statement -> LLLAV RLLAV .)


state 165

    (28) lista_brazos -> brazo .

    RLLAV           reduce using rule 28 (lista_brazos -> brazo .)
    LPAR            reduce using rule 28 (lista_brazos -> brazo .)
    ID              reduce using rule 28 (lista_brazos -> brazo .)
    ENTERO          reduce using rule 28 (lista_brazos -> brazo .)
    DECIMAL         reduce using rule 28 (lista_brazos -> brazo .)
    CADENA          reduce using rule 28 (lista_brazos -> brazo .)
    BOOLEANO        reduce using rule 28 (lista_brazos -> brazo .)
    MENOS           reduce using rule 28 (lista_brazos -> brazo .)
    AD              reduce using rule 28 (lista_brazos -> brazo .)
    LCOR            reduce using rule 28 (lista_brazos -> brazo .)


state 166

    (29) brazo -> lista_exp_brazos . ARROW2 instruccion_match COMA
    (30) brazo -> lista_exp_brazos . ARROW2 statement COMA
    (31) brazo -> lista_exp_brazos . ARROW2 statement
    (32) lista_exp_brazos -> lista_exp_brazos . ORSINGLE exp

    ARROW2          shift and go to state 178
    ORSINGLE        shift and go to state 179


state 167

    (33) lista_exp_brazos -> exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    ARROW2          reduce using rule 33 (lista_exp_brazos -> exp .)
    ORSINGLE        reduce using rule 33 (lista_exp_brazos -> exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 168

    (61) lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR .

    RPAR            reduce using rule 61 (lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR .)
    COMA            reduce using rule 61 (lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR .)
    IGUAL           reduce using rule 61 (lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR .)
    PCOMA           reduce using rule 61 (lista_arr2 -> LCOR lista_arr2 PCOMA exp RCOR .)


state 169

    (62) lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .

    RPAR            reduce using rule 62 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    COMA            reduce using rule 62 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IGUAL           reduce using rule 62 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PCOMA           reduce using rule 62 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)


state 170

    (101) print -> PRINT AD LPAR exp RPAR .

    PCOMA           reduce using rule 101 (print -> PRINT AD LPAR exp RPAR .)
    COMA            reduce using rule 101 (print -> PRINT AD LPAR exp RPAR .)


state 171

    (53) lista_arr -> lista_arr LCOR exp RCOR .

    IGUAL           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    LCOR            reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MAS             reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MENOS           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MULTIPLICACION  reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    DIVISION        reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    AND             reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    OR              reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    IGUALI          reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    DIF             reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MAYOR           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MENOR           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MAYORI          reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    MENORI          reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    PCOMA           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    COMA            reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    LLLAV           reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    RPAR            reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    RCOR            reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    ARROW2          reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)
    ORSINGLE        reduce using rule 53 (lista_arr -> lista_arr LCOR exp RCOR .)


state 172

    (55) lista_exp -> lista_exp COMA exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RPAR            reduce using rule 55 (lista_exp -> lista_exp COMA exp .)
    COMA            reduce using rule 55 (lista_exp -> lista_exp COMA exp .)
    RCOR            reduce using rule 55 (lista_exp -> lista_exp COMA exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 173

    (86) exparr -> LCOR exp PCOMA exp . RCOR
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    RCOR            shift and go to state 180
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 174

    (22) else -> ELSE statement .

    RLLAV           reduce using rule 22 (else -> ELSE statement .)
    PRINT           reduce using rule 22 (else -> ELSE statement .)
    LET             reduce using rule 22 (else -> ELSE statement .)
    ID              reduce using rule 22 (else -> ELSE statement .)
    BREAK           reduce using rule 22 (else -> ELSE statement .)
    RETURN          reduce using rule 22 (else -> ELSE statement .)
    CONTINUE        reduce using rule 22 (else -> ELSE statement .)
    IF              reduce using rule 22 (else -> ELSE statement .)
    MATCH           reduce using rule 22 (else -> ELSE statement .)
    LOOP            reduce using rule 22 (else -> ELSE statement .)
    WHILE           reduce using rule 22 (else -> ELSE statement .)
    COMA            reduce using rule 22 (else -> ELSE statement .)


state 175

    (23) else -> ELSE if .

    RLLAV           reduce using rule 23 (else -> ELSE if .)
    PRINT           reduce using rule 23 (else -> ELSE if .)
    LET             reduce using rule 23 (else -> ELSE if .)
    ID              reduce using rule 23 (else -> ELSE if .)
    BREAK           reduce using rule 23 (else -> ELSE if .)
    RETURN          reduce using rule 23 (else -> ELSE if .)
    CONTINUE        reduce using rule 23 (else -> ELSE if .)
    IF              reduce using rule 23 (else -> ELSE if .)
    MATCH           reduce using rule 23 (else -> ELSE if .)
    LOOP            reduce using rule 23 (else -> ELSE if .)
    WHILE           reduce using rule 23 (else -> ELSE if .)
    COMA            reduce using rule 23 (else -> ELSE if .)


state 176

    (25) match_statement -> LLLAV lista_brazos RLLAV .

    RLLAV           reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    PRINT           reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    LET             reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    ID              reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    BREAK           reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    RETURN          reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    CONTINUE        reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    IF              reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    MATCH           reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    LOOP            reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    WHILE           reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)
    COMA            reduce using rule 25 (match_statement -> LLLAV lista_brazos RLLAV .)


state 177

    (27) lista_brazos -> lista_brazos brazo .

    RLLAV           reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    LPAR            reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    ID              reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    ENTERO          reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    DECIMAL         reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    CADENA          reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    BOOLEANO        reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    MENOS           reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    AD              reduce using rule 27 (lista_brazos -> lista_brazos brazo .)
    LCOR            reduce using rule 27 (lista_brazos -> lista_brazos brazo .)


state 178

    (29) brazo -> lista_exp_brazos ARROW2 . instruccion_match COMA
    (30) brazo -> lista_exp_brazos ARROW2 . statement COMA
    (31) brazo -> lista_exp_brazos ARROW2 . statement
    (34) instruccion_match -> . print
    (35) instruccion_match -> . llamada
    (36) instruccion_match -> . sentencia
    (37) instruccion_match -> . transferencia
    (44) statement -> . LLLAV instrucciones_l RLLAV
    (45) statement -> . LLLAV RLLAV
    (101) print -> . PRINT AD LPAR exp RPAR
    (99) llamada -> . ID LPAR RPAR
    (100) llamada -> . ID LPAR lista_exp RPAR
    (17) sentencia -> . if
    (18) sentencia -> . match
    (19) sentencia -> . loop
    (20) sentencia -> . while
    (40) transferencia -> . BREAK
    (41) transferencia -> . RETURN
    (42) transferencia -> . RETURN exp
    (43) transferencia -> . CONTINUE
    (21) if -> . IF exp statement else
    (24) match -> . MATCH exp match_statement
    (38) loop -> . LOOP statement
    (39) while -> . WHILE exp statement

    LLLAV           shift and go to state 19
    PRINT           shift and go to state 45
    ID              shift and go to state 187
    BREAK           shift and go to state 52
    RETURN          shift and go to state 53
    CONTINUE        shift and go to state 54
    IF              shift and go to state 55
    MATCH           shift and go to state 56
    LOOP            shift and go to state 57
    WHILE           shift and go to state 58

    instruccion_match              shift and go to state 181
    statement                      shift and go to state 182
    print                          shift and go to state 183
    llamada                        shift and go to state 184
    sentencia                      shift and go to state 185
    transferencia                  shift and go to state 186
    if                             shift and go to state 48
    match                          shift and go to state 49
    loop                           shift and go to state 50
    while                          shift and go to state 51

state 179

    (32) lista_exp_brazos -> lista_exp_brazos ORSINGLE . exp
    (63) exp -> . valores
    (64) exp -> . LPAR valores LPAR
    (65) exp -> . expmath
    (66) exp -> . explog
    (67) exp -> . exprel
    (68) exp -> . exparr
    (69) exp -> . ID
    (87) valores -> . ENTERO
    (88) valores -> . DECIMAL
    (89) valores -> . CADENA
    (90) valores -> . BOOLEANO
    (70) expmath -> . exp MAS exp
    (71) expmath -> . exp MENOS exp
    (72) expmath -> . exp MULTIPLICACION exp
    (73) expmath -> . exp DIVISION exp
    (74) expmath -> . MENOS exp
    (75) explog -> . exp AND exp
    (76) explog -> . exp OR exp
    (77) explog -> . AD exp
    (78) exprel -> . exp IGUALI exp
    (79) exprel -> . exp DIF exp
    (80) exprel -> . exp MAYOR exp
    (81) exprel -> . exp MENOR exp
    (82) exprel -> . exp MAYORI exp
    (83) exprel -> . exp MENORI exp
    (84) exparr -> . ID lista_arr
    (85) exparr -> . LCOR lista_exp RCOR
    (86) exparr -> . LCOR exp PCOMA exp RCOR

    LPAR            shift and go to state 82
    ID              shift and go to state 87
    ENTERO          shift and go to state 88
    DECIMAL         shift and go to state 89
    CADENA          shift and go to state 90
    BOOLEANO        shift and go to state 91
    MENOS           shift and go to state 92
    AD              shift and go to state 93
    LCOR            shift and go to state 94

    exp                            shift and go to state 188
    valores                        shift and go to state 81
    expmath                        shift and go to state 83
    explog                         shift and go to state 84
    exprel                         shift and go to state 85
    exparr                         shift and go to state 86

state 180

    (86) exparr -> LCOR exp PCOMA exp RCOR .

    MAS             reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MENOS           reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MULTIPLICACION  reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    DIVISION        reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    AND             reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    OR              reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    IGUALI          reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    DIF             reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MAYOR           reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MENOR           reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MAYORI          reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    MENORI          reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    PCOMA           reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    COMA            reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    LLLAV           reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    RPAR            reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    RCOR            reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    ARROW2          reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)
    ORSINGLE        reduce using rule 86 (exparr -> LCOR exp PCOMA exp RCOR .)


state 181

    (29) brazo -> lista_exp_brazos ARROW2 instruccion_match . COMA

    COMA            shift and go to state 189


state 182

    (30) brazo -> lista_exp_brazos ARROW2 statement . COMA
    (31) brazo -> lista_exp_brazos ARROW2 statement .

    COMA            shift and go to state 190
    RLLAV           reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    LPAR            reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    ID              reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    ENTERO          reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    DECIMAL         reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    CADENA          reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    BOOLEANO        reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    MENOS           reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    AD              reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)
    LCOR            reduce using rule 31 (brazo -> lista_exp_brazos ARROW2 statement .)


state 183

    (34) instruccion_match -> print .

    COMA            reduce using rule 34 (instruccion_match -> print .)


state 184

    (35) instruccion_match -> llamada .

    COMA            reduce using rule 35 (instruccion_match -> llamada .)


state 185

    (36) instruccion_match -> sentencia .

    COMA            reduce using rule 36 (instruccion_match -> sentencia .)


state 186

    (37) instruccion_match -> transferencia .

    COMA            reduce using rule 37 (instruccion_match -> transferencia .)


state 187

    (99) llamada -> ID . LPAR RPAR
    (100) llamada -> ID . LPAR lista_exp RPAR

    LPAR            shift and go to state 78


state 188

    (32) lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .
    (70) expmath -> exp . MAS exp
    (71) expmath -> exp . MENOS exp
    (72) expmath -> exp . MULTIPLICACION exp
    (73) expmath -> exp . DIVISION exp
    (75) explog -> exp . AND exp
    (76) explog -> exp . OR exp
    (78) exprel -> exp . IGUALI exp
    (79) exprel -> exp . DIF exp
    (80) exprel -> exp . MAYOR exp
    (81) exprel -> exp . MENOR exp
    (82) exprel -> exp . MAYORI exp
    (83) exprel -> exp . MENORI exp

    ARROW2          reduce using rule 32 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    ORSINGLE        reduce using rule 32 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    MAS             shift and go to state 115
    MENOS           shift and go to state 116
    MULTIPLICACION  shift and go to state 117
    DIVISION        shift and go to state 118
    AND             shift and go to state 119
    OR              shift and go to state 120
    IGUALI          shift and go to state 121
    DIF             shift and go to state 122
    MAYOR           shift and go to state 123
    MENOR           shift and go to state 124
    MAYORI          shift and go to state 125
    MENORI          shift and go to state 126


state 189

    (29) brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .

    RLLAV           reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LPAR            reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ID              reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ENTERO          reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    DECIMAL         reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    CADENA          reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    BOOLEANO        reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MENOS           reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    AD              reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LCOR            reduce using rule 29 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)


state 190

    (30) brazo -> lista_exp_brazos ARROW2 statement COMA .

    RLLAV           reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LPAR            reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ID              reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ENTERO          reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    DECIMAL         reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    CADENA          reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    BOOLEANO        reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MENOS           reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    AD              reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LCOR            reduce using rule 30 (brazo -> lista_exp_brazos ARROW2 statement COMA .)

