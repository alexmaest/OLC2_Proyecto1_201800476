Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> init
Rule 1     init -> instrucciones_g
Rule 2     instrucciones_g -> instrucciones_g instruccion_g
Rule 3     instrucciones_g -> instruccion_g
Rule 4     instruccion_g -> modulo
Rule 5     instruccion_g -> struct
Rule 6     instruccion_g -> funcion
Rule 7     instrucciones_l -> instrucciones_l instruccion_l
Rule 8     instrucciones_l -> instruccion_l
Rule 9     instruccion_l -> print PCOMA
Rule 10    instruccion_l -> declaracion PCOMA
Rule 11    instruccion_l -> asignacion PCOMA
Rule 12    instruccion_l -> llamada PCOMA
Rule 13    instruccion_l -> sentencia
Rule 14    instruccion_l -> transferencia
Rule 15    instruccion_l -> transferencia PCOMA
Rule 16    funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
Rule 17    funcion -> FN ID LPAR lista_parametros RPAR statement
Rule 18    funcion -> FN ID LPAR RPAR ARROW tipo_var statement
Rule 19    funcion -> FN ID LPAR RPAR statement
Rule 20    modulo -> MOD ID mod_statement
Rule 21    mod_statement -> LLLAV instrucciones_mod RLLAV
Rule 22    mod_statement -> LLLAV RLLAV
Rule 23    instrucciones_mod -> instrucciones_mod instruccion_mod
Rule 24    instrucciones_mod -> instruccion_mod
Rule 25    instruccion_mod -> PUB modulo
Rule 26    instruccion_mod -> PUB struct
Rule 27    instruccion_mod -> PUB funcion
Rule 28    instruccion_mod -> modulo
Rule 29    instruccion_mod -> struct
Rule 30    instruccion_mod -> funcion
Rule 31    struct -> STRUCT ID LLLAV lista_var RLLAV
Rule 32    struct -> STRUCT ID LLLAV RLLAV
Rule 33    sentencia -> if
Rule 34    sentencia -> match
Rule 35    sentencia -> loop
Rule 36    sentencia -> while
Rule 37    sentencia -> for
Rule 38    if -> IF exp statement else
Rule 39    else -> ELSE statement
Rule 40    else -> ELSE if
Rule 41    else -> epsilon
Rule 42    epsilon -> <empty>
Rule 43    match -> MATCH exp match_statement
Rule 44    match_statement -> LLLAV lista_brazos RLLAV
Rule 45    match_statement -> LLLAV RLLAV
Rule 46    lista_brazos -> lista_brazos brazo
Rule 47    lista_brazos -> brazo
Rule 48    brazo -> lista_exp_brazos ARROW2 instruccion_match COMA
Rule 49    brazo -> lista_exp_brazos ARROW2 statement COMA
Rule 50    brazo -> lista_exp_brazos ARROW2 statement
Rule 51    lista_exp_brazos -> lista_exp_brazos ORSINGLE exp
Rule 52    lista_exp_brazos -> exp
Rule 53    instruccion_match -> print
Rule 54    instruccion_match -> llamada
Rule 55    instruccion_match -> sentencia
Rule 56    instruccion_match -> transferencia
Rule 57    loop -> LOOP statement
Rule 58    while -> WHILE exp statement
Rule 59    for -> FOR ID IN foriterative statement
Rule 60    foriterative -> exp PUNTO PUNTO exp
Rule 61    foriterative -> exp
Rule 62    transferencia -> CONTINUE
Rule 63    transferencia -> BREAK
Rule 64    transferencia -> BREAK auxexp
Rule 65    transferencia -> RETURN
Rule 66    transferencia -> RETURN auxexp
Rule 67    transferencia -> auxexp
Rule 68    statement -> LLLAV instrucciones_l RLLAV
Rule 69    statement -> LLLAV RLLAV
Rule 70    lista_var -> lista_var COMA PUB ID DPUNTOS tipo_var
Rule 71    lista_var -> lista_var COMA ID DPUNTOS tipo_var
Rule 72    lista_var -> PUB ID DPUNTOS tipo_var
Rule 73    lista_var -> ID DPUNTOS tipo_var
Rule 74    lista_parametros -> lista_parametros COMA asignacion_simple
Rule 75    lista_parametros -> asignacion_simple
Rule 76    declaracion -> LET asignacion_simple IGUAL auxexp
Rule 77    declaracion -> LET MUT asignacion
Rule 78    declaracion -> LET asignacion
Rule 79    asignacion -> lista_assign IGUAL auxexp
Rule 80    asignacion -> ID lista_arr IGUAL auxexp
Rule 81    lista_assign -> lista_assign PUNTO ID
Rule 82    lista_assign -> ID
Rule 83    lista_acc -> lista_acc PUNTO ID
Rule 84    lista_acc -> lista_acc PUNTO exp_native
Rule 85    lista_acc -> ID
Rule 86    lista_arr -> lista_arr LCOR auxexp RCOR
Rule 87    lista_arr -> LCOR auxexp RCOR
Rule 88    lista_exp -> lista_exp COMA auxexp
Rule 89    lista_exp -> auxexp
Rule 90    asignacion_simple -> ID DPUNTOS tipo_var
Rule 91    asignacion_simple -> MUT ID DPUNTOS tipo_var
Rule 92    asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var
Rule 93    asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var
Rule 94    asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var
Rule 95    asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var
Rule 96    lista_arr2 -> LCOR tipo_var PCOMA exp RCOR
Rule 97    auxexp -> expstruct
Rule 98    auxexp -> exp
Rule 99    exp -> LPAR exp LPAR
Rule 100   exp -> expmath
Rule 101   exp -> expop
Rule 102   exp -> exprel
Rule 103   exp -> exparr
Rule 104   exp -> expvec
Rule 105   exp -> exparam
Rule 106   exp -> exppow
Rule 107   exp -> expcast
Rule 108   exp -> lista_acc
Rule 109   exp -> llamada
Rule 110   exp -> sentencia
Rule 111   exp -> valores
Rule 112   exp -> valores PUNTO exp_native
Rule 113   expmath -> exp MAS exp
Rule 114   expmath -> exp MENOS exp
Rule 115   expmath -> exp MULTIPLICACION exp
Rule 116   expmath -> exp DIVISION exp
Rule 117   expmath -> exp MODULO exp
Rule 118   expmath -> MENOS exp
Rule 119   exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
Rule 120   exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
Rule 121   expop -> exp AND exp
Rule 122   expop -> exp OR exp
Rule 123   expop -> AD exp
Rule 124   expcast -> exp AS tipo_var
Rule 125   exprel -> exp IGUALI exp
Rule 126   exprel -> exp DIF exp
Rule 127   exprel -> exp MAYOR exp
Rule 128   exprel -> exp MENOR exp
Rule 129   exprel -> exp MAYORI exp
Rule 130   exprel -> exp MENORI exp
Rule 131   expstruct -> lista_classtype LLLAV lista_att RLLAV
Rule 132   expstruct -> lista_classtype LLLAV RLLAV
Rule 133   expstruct -> lista_classtype DPUNTOS DPUNTOS llamada
Rule 134   lista_att -> lista_att COMA ID DPUNTOS auxexp
Rule 135   lista_att -> ID DPUNTOS auxexp
Rule 136   exparam -> MUT ID
Rule 137   exparam -> ANDSINGLE MUT ID
Rule 138   exparr -> ID lista_arr
Rule 139   exparr -> newarray
Rule 140   expvec -> VEC AD newarray
Rule 141   expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr
Rule 142   newarray -> LCOR lista_exp RCOR
Rule 143   newarray -> LCOR auxexp PCOMA exp RCOR
Rule 144   valores -> ENTERO
Rule 145   valores -> DECIMAL
Rule 146   valores -> CADENA
Rule 147   valores -> BOOLEANO
Rule 148   valores -> CARACTER
Rule 149   tipo_var -> I64
Rule 150   tipo_var -> F64
Rule 151   tipo_var -> STRING
Rule 152   tipo_var -> ANDSINGLE aSTR
Rule 153   tipo_var -> BOOL
Rule 154   tipo_var -> CHAR
Rule 155   tipo_var -> USIZE
Rule 156   tipo_var -> lista_arr2
Rule 157   tipo_var -> LCOR tipo_var RCOR
Rule 158   tipo_var -> lista_classtype
Rule 159   tipo_var -> VECTOR MENOR tipo_var MAYOR
Rule 160   tipo_var -> VECTOR MENOR lista_classtype MAYOR
Rule 161   lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID
Rule 162   lista_classtype -> ID
Rule 163   llamada -> ID LPAR RPAR
Rule 164   llamada -> ID LPAR lista_exp RPAR
Rule 165   exp_native -> TOSTRING LPAR RPAR
Rule 166   exp_native -> TOOWNED LPAR RPAR
Rule 167   exp_native -> CLONE LPAR RPAR
Rule 168   exp_native -> LEN LPAR RPAR
Rule 169   exp_native -> CAPACITY LPAR RPAR
Rule 170   exp_native -> REMOVE LPAR exp RPAR
Rule 171   exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR
Rule 172   exp_native -> PUSH LPAR exp RPAR
Rule 173   exp_native -> INSERT LPAR lista_exp RPAR
Rule 174   exp_native -> CHARS LPAR RPAR
Rule 175   exp_native -> SQRT LPAR RPAR
Rule 176   exp_native -> ABS LPAR RPAR
Rule 177   exp_natarr -> NEW LPAR RPAR
Rule 178   exp_natarr -> WITHCAPACITY LPAR exp RPAR
Rule 179   print -> PRINT AD LPAR lista_exp RPAR

Terminals, with rules where they appear

ABS                  : 176
AD                   : 123 140 179
AND                  : 121
ANDSINGLE            : 92 93 94 95 137 152 171
ARROW                : 16 18
ARROW2               : 48 49 50
AS                   : 124
BOOL                 : 153
BOOLEANO             : 147
BREAK                : 63 64
CADENA               : 146
CAPACITY             : 169
CARACTER             : 148
CHAR                 : 154
CHARS                : 174
CLONE                : 167
COMA                 : 48 49 70 71 74 88 119 120 134
CONTAINS             : 171
CONTINUE             : 62
DECIMAL              : 145
DIF                  : 126
DIVISION             : 116
DPUNTOS              : 70 71 72 73 90 91 92 93 94 95 119 119 120 120 133 133 134 135 141 141 161 161
ELSE                 : 39 40
ENTERO               : 144
F64                  : 120 150
FN                   : 16 17 18 19
FOR                  : 59
I64                  : 119 149
ID                   : 16 17 18 19 20 31 32 59 70 71 72 73 80 81 82 83 85 90 91 92 93 94 95 134 135 136 137 138 161 162 163 164
IF                   : 38
IGUAL                : 76 79 80
IGUALI               : 125
IN                   : 59
INSERT               : 173
LCOR                 : 86 87 96 142 143 157
LEN                  : 168
LET                  : 76 77 78
LLLAV                : 21 22 31 32 44 45 68 69 131 132
LOOP                 : 57
LPAR                 : 16 17 18 19 99 99 119 120 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
MAS                  : 113
MATCH                : 43
MAYOR                : 127 159 160
MAYORI               : 129
MENOR                : 128 159 160
MENORI               : 130
MENOS                : 114 118
MOD                  : 20
MODULO               : 117
MULTIPLICACION       : 115
MUT                  : 77 91 93 94 95 95 136 137
NEW                  : 177
OR                   : 122
ORSINGLE             : 51
PCOMA                : 9 10 11 12 15 96 143
POW                  : 119
POWF                 : 120
PRINT                : 179
PUB                  : 25 26 27 70 72
PUNTO                : 60 60 81 83 84 112
PUSH                 : 172
RCOR                 : 86 87 96 142 143 157
REMOVE               : 170
RETURN               : 65 66
RLLAV                : 21 22 31 32 44 45 68 69 131 132
RPAR                 : 16 17 18 19 119 120 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179
SQRT                 : 175
STRING               : 151
STRUCT               : 31 32
TOOWNED              : 166
TOSTRING             : 165
USIZE                : 155
VEC                  : 140
VECTOR               : 141 159 160
WHILE                : 58
WITHCAPACITY         : 178
aSTR                 : 152
error                : 

Nonterminals, with rules where they appear

asignacion           : 11 77 78
asignacion_simple    : 74 75 76
auxexp               : 64 66 67 76 79 80 86 87 88 89 134 135 143
brazo                : 46 47
declaracion          : 10
else                 : 38
epsilon              : 41
exp                  : 38 43 51 52 58 60 60 61 96 98 99 113 113 114 114 115 115 116 116 117 117 118 119 119 120 120 121 121 122 122 123 124 125 125 126 126 127 127 128 128 129 129 130 130 143 170 171 172 178
exp_natarr           : 141
exp_native           : 84 112
exparam              : 105
exparr               : 103
expcast              : 107
expmath              : 100
expop                : 101
exppow               : 106
exprel               : 102
expstruct            : 97
expvec               : 104
for                  : 37
foriterative         : 59
funcion              : 6 27 30
if                   : 33 40
init                 : 0
instruccion_g        : 2 3
instruccion_l        : 7 8
instruccion_match    : 48
instruccion_mod      : 23 24
instrucciones_g      : 1 2
instrucciones_l      : 7 68
instrucciones_mod    : 21 23
lista_acc            : 83 84 108
lista_arr            : 80 86 138
lista_arr2           : 156
lista_assign         : 79 81
lista_att            : 131 134
lista_brazos         : 44 46
lista_classtype      : 131 132 133 158 160 161
lista_exp            : 88 142 164 173 179
lista_exp_brazos     : 48 49 50 51
lista_parametros     : 16 17 74
lista_var            : 31 70 71
llamada              : 12 54 109 133
loop                 : 35
match                : 34
match_statement      : 43
mod_statement        : 20
modulo               : 4 25 28
newarray             : 139 140
print                : 9 53
sentencia            : 13 55 110
statement            : 16 17 18 19 38 39 49 50 57 58 59
struct               : 5 26 29
tipo_var             : 16 18 70 71 72 73 90 91 92 93 94 95 96 124 157 159
transferencia        : 14 15 56
valores              : 111 112
while                : 36

Parsing method: LALR

state 0

    (0) S' -> . init
    (1) init -> . instrucciones_g
    (2) instrucciones_g -> . instrucciones_g instruccion_g
    (3) instrucciones_g -> . instruccion_g
    (4) instruccion_g -> . modulo
    (5) instruccion_g -> . struct
    (6) instruccion_g -> . funcion
    (20) modulo -> . MOD ID mod_statement
    (31) struct -> . STRUCT ID LLLAV lista_var RLLAV
    (32) struct -> . STRUCT ID LLLAV RLLAV
    (16) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (18) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> . FN ID LPAR RPAR statement

    MOD             shift and go to state 7
    STRUCT          shift and go to state 8
    FN              shift and go to state 9

    init                           shift and go to state 1
    instrucciones_g                shift and go to state 2
    instruccion_g                  shift and go to state 3
    modulo                         shift and go to state 4
    struct                         shift and go to state 5
    funcion                        shift and go to state 6

state 1

    (0) S' -> init .



state 2

    (1) init -> instrucciones_g .
    (2) instrucciones_g -> instrucciones_g . instruccion_g
    (4) instruccion_g -> . modulo
    (5) instruccion_g -> . struct
    (6) instruccion_g -> . funcion
    (20) modulo -> . MOD ID mod_statement
    (31) struct -> . STRUCT ID LLLAV lista_var RLLAV
    (32) struct -> . STRUCT ID LLLAV RLLAV
    (16) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (18) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> . FN ID LPAR RPAR statement

    $end            reduce using rule 1 (init -> instrucciones_g .)
    MOD             shift and go to state 7
    STRUCT          shift and go to state 8
    FN              shift and go to state 9

    instruccion_g                  shift and go to state 10
    modulo                         shift and go to state 4
    struct                         shift and go to state 5
    funcion                        shift and go to state 6

state 3

    (3) instrucciones_g -> instruccion_g .

    MOD             reduce using rule 3 (instrucciones_g -> instruccion_g .)
    STRUCT          reduce using rule 3 (instrucciones_g -> instruccion_g .)
    FN              reduce using rule 3 (instrucciones_g -> instruccion_g .)
    $end            reduce using rule 3 (instrucciones_g -> instruccion_g .)


state 4

    (4) instruccion_g -> modulo .

    MOD             reduce using rule 4 (instruccion_g -> modulo .)
    STRUCT          reduce using rule 4 (instruccion_g -> modulo .)
    FN              reduce using rule 4 (instruccion_g -> modulo .)
    $end            reduce using rule 4 (instruccion_g -> modulo .)


state 5

    (5) instruccion_g -> struct .

    MOD             reduce using rule 5 (instruccion_g -> struct .)
    STRUCT          reduce using rule 5 (instruccion_g -> struct .)
    FN              reduce using rule 5 (instruccion_g -> struct .)
    $end            reduce using rule 5 (instruccion_g -> struct .)


state 6

    (6) instruccion_g -> funcion .

    MOD             reduce using rule 6 (instruccion_g -> funcion .)
    STRUCT          reduce using rule 6 (instruccion_g -> funcion .)
    FN              reduce using rule 6 (instruccion_g -> funcion .)
    $end            reduce using rule 6 (instruccion_g -> funcion .)


state 7

    (20) modulo -> MOD . ID mod_statement

    ID              shift and go to state 11


state 8

    (31) struct -> STRUCT . ID LLLAV lista_var RLLAV
    (32) struct -> STRUCT . ID LLLAV RLLAV

    ID              shift and go to state 12


state 9

    (16) funcion -> FN . ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> FN . ID LPAR lista_parametros RPAR statement
    (18) funcion -> FN . ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> FN . ID LPAR RPAR statement

    ID              shift and go to state 13


state 10

    (2) instrucciones_g -> instrucciones_g instruccion_g .

    MOD             reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    STRUCT          reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    FN              reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)
    $end            reduce using rule 2 (instrucciones_g -> instrucciones_g instruccion_g .)


state 11

    (20) modulo -> MOD ID . mod_statement
    (21) mod_statement -> . LLLAV instrucciones_mod RLLAV
    (22) mod_statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 15

    mod_statement                  shift and go to state 14

state 12

    (31) struct -> STRUCT ID . LLLAV lista_var RLLAV
    (32) struct -> STRUCT ID . LLLAV RLLAV

    LLLAV           shift and go to state 16


state 13

    (16) funcion -> FN ID . LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> FN ID . LPAR lista_parametros RPAR statement
    (18) funcion -> FN ID . LPAR RPAR ARROW tipo_var statement
    (19) funcion -> FN ID . LPAR RPAR statement

    LPAR            shift and go to state 17


state 14

    (20) modulo -> MOD ID mod_statement .

    MOD             reduce using rule 20 (modulo -> MOD ID mod_statement .)
    STRUCT          reduce using rule 20 (modulo -> MOD ID mod_statement .)
    FN              reduce using rule 20 (modulo -> MOD ID mod_statement .)
    $end            reduce using rule 20 (modulo -> MOD ID mod_statement .)
    RLLAV           reduce using rule 20 (modulo -> MOD ID mod_statement .)
    PUB             reduce using rule 20 (modulo -> MOD ID mod_statement .)


state 15

    (21) mod_statement -> LLLAV . instrucciones_mod RLLAV
    (22) mod_statement -> LLLAV . RLLAV
    (23) instrucciones_mod -> . instrucciones_mod instruccion_mod
    (24) instrucciones_mod -> . instruccion_mod
    (25) instruccion_mod -> . PUB modulo
    (26) instruccion_mod -> . PUB struct
    (27) instruccion_mod -> . PUB funcion
    (28) instruccion_mod -> . modulo
    (29) instruccion_mod -> . struct
    (30) instruccion_mod -> . funcion
    (20) modulo -> . MOD ID mod_statement
    (31) struct -> . STRUCT ID LLLAV lista_var RLLAV
    (32) struct -> . STRUCT ID LLLAV RLLAV
    (16) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (18) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> . FN ID LPAR RPAR statement

    RLLAV           shift and go to state 19
    PUB             shift and go to state 21
    MOD             shift and go to state 7
    STRUCT          shift and go to state 8
    FN              shift and go to state 9

    instrucciones_mod              shift and go to state 18
    instruccion_mod                shift and go to state 20
    modulo                         shift and go to state 22
    struct                         shift and go to state 23
    funcion                        shift and go to state 24

state 16

    (31) struct -> STRUCT ID LLLAV . lista_var RLLAV
    (32) struct -> STRUCT ID LLLAV . RLLAV
    (70) lista_var -> . lista_var COMA PUB ID DPUNTOS tipo_var
    (71) lista_var -> . lista_var COMA ID DPUNTOS tipo_var
    (72) lista_var -> . PUB ID DPUNTOS tipo_var
    (73) lista_var -> . ID DPUNTOS tipo_var

    RLLAV           shift and go to state 27
    PUB             shift and go to state 28
    ID              shift and go to state 25

    lista_var                      shift and go to state 26

state 17

    (16) funcion -> FN ID LPAR . lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> FN ID LPAR . lista_parametros RPAR statement
    (18) funcion -> FN ID LPAR . RPAR ARROW tipo_var statement
    (19) funcion -> FN ID LPAR . RPAR statement
    (74) lista_parametros -> . lista_parametros COMA asignacion_simple
    (75) lista_parametros -> . asignacion_simple
    (90) asignacion_simple -> . ID DPUNTOS tipo_var
    (91) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (92) asignacion_simple -> . ID DPUNTOS ANDSINGLE tipo_var
    (93) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE tipo_var
    (94) asignacion_simple -> . ID DPUNTOS ANDSINGLE MUT tipo_var
    (95) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE MUT tipo_var

    RPAR            shift and go to state 31
    ID              shift and go to state 29
    MUT             shift and go to state 33

    lista_parametros               shift and go to state 30
    asignacion_simple              shift and go to state 32

state 18

    (21) mod_statement -> LLLAV instrucciones_mod . RLLAV
    (23) instrucciones_mod -> instrucciones_mod . instruccion_mod
    (25) instruccion_mod -> . PUB modulo
    (26) instruccion_mod -> . PUB struct
    (27) instruccion_mod -> . PUB funcion
    (28) instruccion_mod -> . modulo
    (29) instruccion_mod -> . struct
    (30) instruccion_mod -> . funcion
    (20) modulo -> . MOD ID mod_statement
    (31) struct -> . STRUCT ID LLLAV lista_var RLLAV
    (32) struct -> . STRUCT ID LLLAV RLLAV
    (16) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (18) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> . FN ID LPAR RPAR statement

    RLLAV           shift and go to state 34
    PUB             shift and go to state 21
    MOD             shift and go to state 7
    STRUCT          shift and go to state 8
    FN              shift and go to state 9

    instruccion_mod                shift and go to state 35
    modulo                         shift and go to state 22
    struct                         shift and go to state 23
    funcion                        shift and go to state 24

state 19

    (22) mod_statement -> LLLAV RLLAV .

    MOD             reduce using rule 22 (mod_statement -> LLLAV RLLAV .)
    STRUCT          reduce using rule 22 (mod_statement -> LLLAV RLLAV .)
    FN              reduce using rule 22 (mod_statement -> LLLAV RLLAV .)
    $end            reduce using rule 22 (mod_statement -> LLLAV RLLAV .)
    RLLAV           reduce using rule 22 (mod_statement -> LLLAV RLLAV .)
    PUB             reduce using rule 22 (mod_statement -> LLLAV RLLAV .)


state 20

    (24) instrucciones_mod -> instruccion_mod .

    RLLAV           reduce using rule 24 (instrucciones_mod -> instruccion_mod .)
    PUB             reduce using rule 24 (instrucciones_mod -> instruccion_mod .)
    MOD             reduce using rule 24 (instrucciones_mod -> instruccion_mod .)
    STRUCT          reduce using rule 24 (instrucciones_mod -> instruccion_mod .)
    FN              reduce using rule 24 (instrucciones_mod -> instruccion_mod .)


state 21

    (25) instruccion_mod -> PUB . modulo
    (26) instruccion_mod -> PUB . struct
    (27) instruccion_mod -> PUB . funcion
    (20) modulo -> . MOD ID mod_statement
    (31) struct -> . STRUCT ID LLLAV lista_var RLLAV
    (32) struct -> . STRUCT ID LLLAV RLLAV
    (16) funcion -> . FN ID LPAR lista_parametros RPAR ARROW tipo_var statement
    (17) funcion -> . FN ID LPAR lista_parametros RPAR statement
    (18) funcion -> . FN ID LPAR RPAR ARROW tipo_var statement
    (19) funcion -> . FN ID LPAR RPAR statement

    MOD             shift and go to state 7
    STRUCT          shift and go to state 8
    FN              shift and go to state 9

    modulo                         shift and go to state 36
    struct                         shift and go to state 37
    funcion                        shift and go to state 38

state 22

    (28) instruccion_mod -> modulo .

    RLLAV           reduce using rule 28 (instruccion_mod -> modulo .)
    PUB             reduce using rule 28 (instruccion_mod -> modulo .)
    MOD             reduce using rule 28 (instruccion_mod -> modulo .)
    STRUCT          reduce using rule 28 (instruccion_mod -> modulo .)
    FN              reduce using rule 28 (instruccion_mod -> modulo .)


state 23

    (29) instruccion_mod -> struct .

    RLLAV           reduce using rule 29 (instruccion_mod -> struct .)
    PUB             reduce using rule 29 (instruccion_mod -> struct .)
    MOD             reduce using rule 29 (instruccion_mod -> struct .)
    STRUCT          reduce using rule 29 (instruccion_mod -> struct .)
    FN              reduce using rule 29 (instruccion_mod -> struct .)


state 24

    (30) instruccion_mod -> funcion .

    RLLAV           reduce using rule 30 (instruccion_mod -> funcion .)
    PUB             reduce using rule 30 (instruccion_mod -> funcion .)
    MOD             reduce using rule 30 (instruccion_mod -> funcion .)
    STRUCT          reduce using rule 30 (instruccion_mod -> funcion .)
    FN              reduce using rule 30 (instruccion_mod -> funcion .)


state 25

    (73) lista_var -> ID . DPUNTOS tipo_var

    DPUNTOS         shift and go to state 39


state 26

    (31) struct -> STRUCT ID LLLAV lista_var . RLLAV
    (70) lista_var -> lista_var . COMA PUB ID DPUNTOS tipo_var
    (71) lista_var -> lista_var . COMA ID DPUNTOS tipo_var

    RLLAV           shift and go to state 40
    COMA            shift and go to state 41


state 27

    (32) struct -> STRUCT ID LLLAV RLLAV .

    MOD             reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)
    STRUCT          reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)
    FN              reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)
    $end            reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)
    RLLAV           reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)
    PUB             reduce using rule 32 (struct -> STRUCT ID LLLAV RLLAV .)


state 28

    (72) lista_var -> PUB . ID DPUNTOS tipo_var

    ID              shift and go to state 42


state 29

    (90) asignacion_simple -> ID . DPUNTOS tipo_var
    (92) asignacion_simple -> ID . DPUNTOS ANDSINGLE tipo_var
    (94) asignacion_simple -> ID . DPUNTOS ANDSINGLE MUT tipo_var

    DPUNTOS         shift and go to state 43


state 30

    (16) funcion -> FN ID LPAR lista_parametros . RPAR ARROW tipo_var statement
    (17) funcion -> FN ID LPAR lista_parametros . RPAR statement
    (74) lista_parametros -> lista_parametros . COMA asignacion_simple

    RPAR            shift and go to state 44
    COMA            shift and go to state 45


state 31

    (18) funcion -> FN ID LPAR RPAR . ARROW tipo_var statement
    (19) funcion -> FN ID LPAR RPAR . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    ARROW           shift and go to state 46
    LLLAV           shift and go to state 48

    statement                      shift and go to state 47

state 32

    (75) lista_parametros -> asignacion_simple .

    RPAR            reduce using rule 75 (lista_parametros -> asignacion_simple .)
    COMA            reduce using rule 75 (lista_parametros -> asignacion_simple .)


state 33

    (91) asignacion_simple -> MUT . ID DPUNTOS tipo_var
    (93) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE tipo_var
    (95) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE MUT tipo_var

    ID              shift and go to state 49


state 34

    (21) mod_statement -> LLLAV instrucciones_mod RLLAV .

    MOD             reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)
    STRUCT          reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)
    FN              reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)
    $end            reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)
    RLLAV           reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)
    PUB             reduce using rule 21 (mod_statement -> LLLAV instrucciones_mod RLLAV .)


state 35

    (23) instrucciones_mod -> instrucciones_mod instruccion_mod .

    RLLAV           reduce using rule 23 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    PUB             reduce using rule 23 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    MOD             reduce using rule 23 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    STRUCT          reduce using rule 23 (instrucciones_mod -> instrucciones_mod instruccion_mod .)
    FN              reduce using rule 23 (instrucciones_mod -> instrucciones_mod instruccion_mod .)


state 36

    (25) instruccion_mod -> PUB modulo .

    RLLAV           reduce using rule 25 (instruccion_mod -> PUB modulo .)
    PUB             reduce using rule 25 (instruccion_mod -> PUB modulo .)
    MOD             reduce using rule 25 (instruccion_mod -> PUB modulo .)
    STRUCT          reduce using rule 25 (instruccion_mod -> PUB modulo .)
    FN              reduce using rule 25 (instruccion_mod -> PUB modulo .)


state 37

    (26) instruccion_mod -> PUB struct .

    RLLAV           reduce using rule 26 (instruccion_mod -> PUB struct .)
    PUB             reduce using rule 26 (instruccion_mod -> PUB struct .)
    MOD             reduce using rule 26 (instruccion_mod -> PUB struct .)
    STRUCT          reduce using rule 26 (instruccion_mod -> PUB struct .)
    FN              reduce using rule 26 (instruccion_mod -> PUB struct .)


state 38

    (27) instruccion_mod -> PUB funcion .

    RLLAV           reduce using rule 27 (instruccion_mod -> PUB funcion .)
    PUB             reduce using rule 27 (instruccion_mod -> PUB funcion .)
    MOD             reduce using rule 27 (instruccion_mod -> PUB funcion .)
    STRUCT          reduce using rule 27 (instruccion_mod -> PUB funcion .)
    FN              reduce using rule 27 (instruccion_mod -> PUB funcion .)


state 39

    (73) lista_var -> ID DPUNTOS . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 51
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 40

    (31) struct -> STRUCT ID LLLAV lista_var RLLAV .

    MOD             reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)
    STRUCT          reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)
    FN              reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)
    $end            reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)
    RLLAV           reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)
    PUB             reduce using rule 31 (struct -> STRUCT ID LLLAV lista_var RLLAV .)


state 41

    (70) lista_var -> lista_var COMA . PUB ID DPUNTOS tipo_var
    (71) lista_var -> lista_var COMA . ID DPUNTOS tipo_var

    PUB             shift and go to state 63
    ID              shift and go to state 64


state 42

    (72) lista_var -> PUB ID . DPUNTOS tipo_var

    DPUNTOS         shift and go to state 65


state 43

    (90) asignacion_simple -> ID DPUNTOS . tipo_var
    (92) asignacion_simple -> ID DPUNTOS . ANDSINGLE tipo_var
    (94) asignacion_simple -> ID DPUNTOS . ANDSINGLE MUT tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    ANDSINGLE       shift and go to state 67
    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 66
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 44

    (16) funcion -> FN ID LPAR lista_parametros RPAR . ARROW tipo_var statement
    (17) funcion -> FN ID LPAR lista_parametros RPAR . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    ARROW           shift and go to state 68
    LLLAV           shift and go to state 48

    statement                      shift and go to state 69

state 45

    (74) lista_parametros -> lista_parametros COMA . asignacion_simple
    (90) asignacion_simple -> . ID DPUNTOS tipo_var
    (91) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (92) asignacion_simple -> . ID DPUNTOS ANDSINGLE tipo_var
    (93) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE tipo_var
    (94) asignacion_simple -> . ID DPUNTOS ANDSINGLE MUT tipo_var
    (95) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE MUT tipo_var

    ID              shift and go to state 29
    MUT             shift and go to state 33

    asignacion_simple              shift and go to state 70

state 46

    (18) funcion -> FN ID LPAR RPAR ARROW . tipo_var statement
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 71
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 47

    (19) funcion -> FN ID LPAR RPAR statement .

    MOD             reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)
    STRUCT          reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)
    FN              reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)
    $end            reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)
    RLLAV           reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)
    PUB             reduce using rule 19 (funcion -> FN ID LPAR RPAR statement .)


state 48

    (68) statement -> LLLAV . instrucciones_l RLLAV
    (69) statement -> LLLAV . RLLAV
    (7) instrucciones_l -> . instrucciones_l instruccion_l
    (8) instrucciones_l -> . instruccion_l
    (9) instruccion_l -> . print PCOMA
    (10) instruccion_l -> . declaracion PCOMA
    (11) instruccion_l -> . asignacion PCOMA
    (12) instruccion_l -> . llamada PCOMA
    (13) instruccion_l -> . sentencia
    (14) instruccion_l -> . transferencia
    (15) instruccion_l -> . transferencia PCOMA
    (179) print -> . PRINT AD LPAR lista_exp RPAR
    (76) declaracion -> . LET asignacion_simple IGUAL auxexp
    (77) declaracion -> . LET MUT asignacion
    (78) declaracion -> . LET asignacion
    (79) asignacion -> . lista_assign IGUAL auxexp
    (80) asignacion -> . ID lista_arr IGUAL auxexp
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (62) transferencia -> . CONTINUE
    (63) transferencia -> . BREAK
    (64) transferencia -> . BREAK auxexp
    (65) transferencia -> . RETURN
    (66) transferencia -> . RETURN auxexp
    (67) transferencia -> . auxexp
    (81) lista_assign -> . lista_assign PUNTO ID
    (82) lista_assign -> . ID
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR

    RLLAV           shift and go to state 73
    PRINT           shift and go to state 81
    LET             shift and go to state 84
    ID              shift and go to state 88
    CONTINUE        shift and go to state 94
    BREAK           shift and go to state 95
    RETURN          shift and go to state 96
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127

    instrucciones_l                shift and go to state 72
    instruccion_l                  shift and go to state 74
    print                          shift and go to state 75
    declaracion                    shift and go to state 76
    asignacion                     shift and go to state 77
    llamada                        shift and go to state 78
    sentencia                      shift and go to state 79
    transferencia                  shift and go to state 80
    auxexp                         shift and go to state 85
    lista_assign                   shift and go to state 87
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93
    exp                            shift and go to state 98
    expstruct                      shift and go to state 103
    lista_classtype                shift and go to state 104
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    valores                        shift and go to state 114
    newarray                       shift and go to state 116

state 49

    (91) asignacion_simple -> MUT ID . DPUNTOS tipo_var
    (93) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE tipo_var
    (95) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE MUT tipo_var

    DPUNTOS         shift and go to state 128


state 50

    (162) lista_classtype -> ID .

    DPUNTOS         reduce using rule 162 (lista_classtype -> ID .)
    RLLAV           reduce using rule 162 (lista_classtype -> ID .)
    COMA            reduce using rule 162 (lista_classtype -> ID .)
    RPAR            reduce using rule 162 (lista_classtype -> ID .)
    IGUAL           reduce using rule 162 (lista_classtype -> ID .)
    LLLAV           reduce using rule 162 (lista_classtype -> ID .)
    RCOR            reduce using rule 162 (lista_classtype -> ID .)
    PCOMA           reduce using rule 162 (lista_classtype -> ID .)
    MAYOR           reduce using rule 162 (lista_classtype -> ID .)
    MAS             reduce using rule 162 (lista_classtype -> ID .)
    MENOS           reduce using rule 162 (lista_classtype -> ID .)
    MULTIPLICACION  reduce using rule 162 (lista_classtype -> ID .)
    DIVISION        reduce using rule 162 (lista_classtype -> ID .)
    MODULO          reduce using rule 162 (lista_classtype -> ID .)
    AND             reduce using rule 162 (lista_classtype -> ID .)
    OR              reduce using rule 162 (lista_classtype -> ID .)
    IGUALI          reduce using rule 162 (lista_classtype -> ID .)
    DIF             reduce using rule 162 (lista_classtype -> ID .)
    MENOR           reduce using rule 162 (lista_classtype -> ID .)
    MAYORI          reduce using rule 162 (lista_classtype -> ID .)
    MENORI          reduce using rule 162 (lista_classtype -> ID .)
    AS              reduce using rule 162 (lista_classtype -> ID .)
    PRINT           reduce using rule 162 (lista_classtype -> ID .)
    LET             reduce using rule 162 (lista_classtype -> ID .)
    ID              reduce using rule 162 (lista_classtype -> ID .)
    CONTINUE        reduce using rule 162 (lista_classtype -> ID .)
    BREAK           reduce using rule 162 (lista_classtype -> ID .)
    RETURN          reduce using rule 162 (lista_classtype -> ID .)
    IF              reduce using rule 162 (lista_classtype -> ID .)
    MATCH           reduce using rule 162 (lista_classtype -> ID .)
    LOOP            reduce using rule 162 (lista_classtype -> ID .)
    WHILE           reduce using rule 162 (lista_classtype -> ID .)
    FOR             reduce using rule 162 (lista_classtype -> ID .)
    LPAR            reduce using rule 162 (lista_classtype -> ID .)
    AD              reduce using rule 162 (lista_classtype -> ID .)
    VEC             reduce using rule 162 (lista_classtype -> ID .)
    VECTOR          reduce using rule 162 (lista_classtype -> ID .)
    MUT             reduce using rule 162 (lista_classtype -> ID .)
    ANDSINGLE       reduce using rule 162 (lista_classtype -> ID .)
    I64             reduce using rule 162 (lista_classtype -> ID .)
    F64             reduce using rule 162 (lista_classtype -> ID .)
    ENTERO          reduce using rule 162 (lista_classtype -> ID .)
    DECIMAL         reduce using rule 162 (lista_classtype -> ID .)
    CADENA          reduce using rule 162 (lista_classtype -> ID .)
    BOOLEANO        reduce using rule 162 (lista_classtype -> ID .)
    CARACTER        reduce using rule 162 (lista_classtype -> ID .)
    LCOR            reduce using rule 162 (lista_classtype -> ID .)
    ARROW2          reduce using rule 162 (lista_classtype -> ID .)
    ORSINGLE        reduce using rule 162 (lista_classtype -> ID .)
    PUNTO           reduce using rule 162 (lista_classtype -> ID .)


state 51

    (73) lista_var -> ID DPUNTOS tipo_var .

    RLLAV           reduce using rule 73 (lista_var -> ID DPUNTOS tipo_var .)
    COMA            reduce using rule 73 (lista_var -> ID DPUNTOS tipo_var .)


state 52

    (149) tipo_var -> I64 .

    RLLAV           reduce using rule 149 (tipo_var -> I64 .)
    COMA            reduce using rule 149 (tipo_var -> I64 .)
    RPAR            reduce using rule 149 (tipo_var -> I64 .)
    IGUAL           reduce using rule 149 (tipo_var -> I64 .)
    LLLAV           reduce using rule 149 (tipo_var -> I64 .)
    RCOR            reduce using rule 149 (tipo_var -> I64 .)
    PCOMA           reduce using rule 149 (tipo_var -> I64 .)
    MAYOR           reduce using rule 149 (tipo_var -> I64 .)
    MAS             reduce using rule 149 (tipo_var -> I64 .)
    MENOS           reduce using rule 149 (tipo_var -> I64 .)
    MULTIPLICACION  reduce using rule 149 (tipo_var -> I64 .)
    DIVISION        reduce using rule 149 (tipo_var -> I64 .)
    MODULO          reduce using rule 149 (tipo_var -> I64 .)
    AND             reduce using rule 149 (tipo_var -> I64 .)
    OR              reduce using rule 149 (tipo_var -> I64 .)
    IGUALI          reduce using rule 149 (tipo_var -> I64 .)
    DIF             reduce using rule 149 (tipo_var -> I64 .)
    MENOR           reduce using rule 149 (tipo_var -> I64 .)
    MAYORI          reduce using rule 149 (tipo_var -> I64 .)
    MENORI          reduce using rule 149 (tipo_var -> I64 .)
    AS              reduce using rule 149 (tipo_var -> I64 .)
    PRINT           reduce using rule 149 (tipo_var -> I64 .)
    LET             reduce using rule 149 (tipo_var -> I64 .)
    ID              reduce using rule 149 (tipo_var -> I64 .)
    CONTINUE        reduce using rule 149 (tipo_var -> I64 .)
    BREAK           reduce using rule 149 (tipo_var -> I64 .)
    RETURN          reduce using rule 149 (tipo_var -> I64 .)
    IF              reduce using rule 149 (tipo_var -> I64 .)
    MATCH           reduce using rule 149 (tipo_var -> I64 .)
    LOOP            reduce using rule 149 (tipo_var -> I64 .)
    WHILE           reduce using rule 149 (tipo_var -> I64 .)
    FOR             reduce using rule 149 (tipo_var -> I64 .)
    LPAR            reduce using rule 149 (tipo_var -> I64 .)
    AD              reduce using rule 149 (tipo_var -> I64 .)
    VEC             reduce using rule 149 (tipo_var -> I64 .)
    VECTOR          reduce using rule 149 (tipo_var -> I64 .)
    MUT             reduce using rule 149 (tipo_var -> I64 .)
    ANDSINGLE       reduce using rule 149 (tipo_var -> I64 .)
    I64             reduce using rule 149 (tipo_var -> I64 .)
    F64             reduce using rule 149 (tipo_var -> I64 .)
    ENTERO          reduce using rule 149 (tipo_var -> I64 .)
    DECIMAL         reduce using rule 149 (tipo_var -> I64 .)
    CADENA          reduce using rule 149 (tipo_var -> I64 .)
    BOOLEANO        reduce using rule 149 (tipo_var -> I64 .)
    CARACTER        reduce using rule 149 (tipo_var -> I64 .)
    LCOR            reduce using rule 149 (tipo_var -> I64 .)
    ARROW2          reduce using rule 149 (tipo_var -> I64 .)
    ORSINGLE        reduce using rule 149 (tipo_var -> I64 .)
    PUNTO           reduce using rule 149 (tipo_var -> I64 .)


state 53

    (150) tipo_var -> F64 .

    RLLAV           reduce using rule 150 (tipo_var -> F64 .)
    COMA            reduce using rule 150 (tipo_var -> F64 .)
    RPAR            reduce using rule 150 (tipo_var -> F64 .)
    IGUAL           reduce using rule 150 (tipo_var -> F64 .)
    LLLAV           reduce using rule 150 (tipo_var -> F64 .)
    RCOR            reduce using rule 150 (tipo_var -> F64 .)
    PCOMA           reduce using rule 150 (tipo_var -> F64 .)
    MAYOR           reduce using rule 150 (tipo_var -> F64 .)
    MAS             reduce using rule 150 (tipo_var -> F64 .)
    MENOS           reduce using rule 150 (tipo_var -> F64 .)
    MULTIPLICACION  reduce using rule 150 (tipo_var -> F64 .)
    DIVISION        reduce using rule 150 (tipo_var -> F64 .)
    MODULO          reduce using rule 150 (tipo_var -> F64 .)
    AND             reduce using rule 150 (tipo_var -> F64 .)
    OR              reduce using rule 150 (tipo_var -> F64 .)
    IGUALI          reduce using rule 150 (tipo_var -> F64 .)
    DIF             reduce using rule 150 (tipo_var -> F64 .)
    MENOR           reduce using rule 150 (tipo_var -> F64 .)
    MAYORI          reduce using rule 150 (tipo_var -> F64 .)
    MENORI          reduce using rule 150 (tipo_var -> F64 .)
    AS              reduce using rule 150 (tipo_var -> F64 .)
    PRINT           reduce using rule 150 (tipo_var -> F64 .)
    LET             reduce using rule 150 (tipo_var -> F64 .)
    ID              reduce using rule 150 (tipo_var -> F64 .)
    CONTINUE        reduce using rule 150 (tipo_var -> F64 .)
    BREAK           reduce using rule 150 (tipo_var -> F64 .)
    RETURN          reduce using rule 150 (tipo_var -> F64 .)
    IF              reduce using rule 150 (tipo_var -> F64 .)
    MATCH           reduce using rule 150 (tipo_var -> F64 .)
    LOOP            reduce using rule 150 (tipo_var -> F64 .)
    WHILE           reduce using rule 150 (tipo_var -> F64 .)
    FOR             reduce using rule 150 (tipo_var -> F64 .)
    LPAR            reduce using rule 150 (tipo_var -> F64 .)
    AD              reduce using rule 150 (tipo_var -> F64 .)
    VEC             reduce using rule 150 (tipo_var -> F64 .)
    VECTOR          reduce using rule 150 (tipo_var -> F64 .)
    MUT             reduce using rule 150 (tipo_var -> F64 .)
    ANDSINGLE       reduce using rule 150 (tipo_var -> F64 .)
    I64             reduce using rule 150 (tipo_var -> F64 .)
    F64             reduce using rule 150 (tipo_var -> F64 .)
    ENTERO          reduce using rule 150 (tipo_var -> F64 .)
    DECIMAL         reduce using rule 150 (tipo_var -> F64 .)
    CADENA          reduce using rule 150 (tipo_var -> F64 .)
    BOOLEANO        reduce using rule 150 (tipo_var -> F64 .)
    CARACTER        reduce using rule 150 (tipo_var -> F64 .)
    LCOR            reduce using rule 150 (tipo_var -> F64 .)
    ARROW2          reduce using rule 150 (tipo_var -> F64 .)
    ORSINGLE        reduce using rule 150 (tipo_var -> F64 .)
    PUNTO           reduce using rule 150 (tipo_var -> F64 .)


state 54

    (151) tipo_var -> STRING .

    RLLAV           reduce using rule 151 (tipo_var -> STRING .)
    COMA            reduce using rule 151 (tipo_var -> STRING .)
    RPAR            reduce using rule 151 (tipo_var -> STRING .)
    IGUAL           reduce using rule 151 (tipo_var -> STRING .)
    LLLAV           reduce using rule 151 (tipo_var -> STRING .)
    RCOR            reduce using rule 151 (tipo_var -> STRING .)
    PCOMA           reduce using rule 151 (tipo_var -> STRING .)
    MAYOR           reduce using rule 151 (tipo_var -> STRING .)
    MAS             reduce using rule 151 (tipo_var -> STRING .)
    MENOS           reduce using rule 151 (tipo_var -> STRING .)
    MULTIPLICACION  reduce using rule 151 (tipo_var -> STRING .)
    DIVISION        reduce using rule 151 (tipo_var -> STRING .)
    MODULO          reduce using rule 151 (tipo_var -> STRING .)
    AND             reduce using rule 151 (tipo_var -> STRING .)
    OR              reduce using rule 151 (tipo_var -> STRING .)
    IGUALI          reduce using rule 151 (tipo_var -> STRING .)
    DIF             reduce using rule 151 (tipo_var -> STRING .)
    MENOR           reduce using rule 151 (tipo_var -> STRING .)
    MAYORI          reduce using rule 151 (tipo_var -> STRING .)
    MENORI          reduce using rule 151 (tipo_var -> STRING .)
    AS              reduce using rule 151 (tipo_var -> STRING .)
    PRINT           reduce using rule 151 (tipo_var -> STRING .)
    LET             reduce using rule 151 (tipo_var -> STRING .)
    ID              reduce using rule 151 (tipo_var -> STRING .)
    CONTINUE        reduce using rule 151 (tipo_var -> STRING .)
    BREAK           reduce using rule 151 (tipo_var -> STRING .)
    RETURN          reduce using rule 151 (tipo_var -> STRING .)
    IF              reduce using rule 151 (tipo_var -> STRING .)
    MATCH           reduce using rule 151 (tipo_var -> STRING .)
    LOOP            reduce using rule 151 (tipo_var -> STRING .)
    WHILE           reduce using rule 151 (tipo_var -> STRING .)
    FOR             reduce using rule 151 (tipo_var -> STRING .)
    LPAR            reduce using rule 151 (tipo_var -> STRING .)
    AD              reduce using rule 151 (tipo_var -> STRING .)
    VEC             reduce using rule 151 (tipo_var -> STRING .)
    VECTOR          reduce using rule 151 (tipo_var -> STRING .)
    MUT             reduce using rule 151 (tipo_var -> STRING .)
    ANDSINGLE       reduce using rule 151 (tipo_var -> STRING .)
    I64             reduce using rule 151 (tipo_var -> STRING .)
    F64             reduce using rule 151 (tipo_var -> STRING .)
    ENTERO          reduce using rule 151 (tipo_var -> STRING .)
    DECIMAL         reduce using rule 151 (tipo_var -> STRING .)
    CADENA          reduce using rule 151 (tipo_var -> STRING .)
    BOOLEANO        reduce using rule 151 (tipo_var -> STRING .)
    CARACTER        reduce using rule 151 (tipo_var -> STRING .)
    LCOR            reduce using rule 151 (tipo_var -> STRING .)
    ARROW2          reduce using rule 151 (tipo_var -> STRING .)
    ORSINGLE        reduce using rule 151 (tipo_var -> STRING .)
    PUNTO           reduce using rule 151 (tipo_var -> STRING .)


state 55

    (152) tipo_var -> ANDSINGLE . aSTR

    aSTR            shift and go to state 129


state 56

    (153) tipo_var -> BOOL .

    RLLAV           reduce using rule 153 (tipo_var -> BOOL .)
    COMA            reduce using rule 153 (tipo_var -> BOOL .)
    RPAR            reduce using rule 153 (tipo_var -> BOOL .)
    IGUAL           reduce using rule 153 (tipo_var -> BOOL .)
    LLLAV           reduce using rule 153 (tipo_var -> BOOL .)
    RCOR            reduce using rule 153 (tipo_var -> BOOL .)
    PCOMA           reduce using rule 153 (tipo_var -> BOOL .)
    MAYOR           reduce using rule 153 (tipo_var -> BOOL .)
    MAS             reduce using rule 153 (tipo_var -> BOOL .)
    MENOS           reduce using rule 153 (tipo_var -> BOOL .)
    MULTIPLICACION  reduce using rule 153 (tipo_var -> BOOL .)
    DIVISION        reduce using rule 153 (tipo_var -> BOOL .)
    MODULO          reduce using rule 153 (tipo_var -> BOOL .)
    AND             reduce using rule 153 (tipo_var -> BOOL .)
    OR              reduce using rule 153 (tipo_var -> BOOL .)
    IGUALI          reduce using rule 153 (tipo_var -> BOOL .)
    DIF             reduce using rule 153 (tipo_var -> BOOL .)
    MENOR           reduce using rule 153 (tipo_var -> BOOL .)
    MAYORI          reduce using rule 153 (tipo_var -> BOOL .)
    MENORI          reduce using rule 153 (tipo_var -> BOOL .)
    AS              reduce using rule 153 (tipo_var -> BOOL .)
    PRINT           reduce using rule 153 (tipo_var -> BOOL .)
    LET             reduce using rule 153 (tipo_var -> BOOL .)
    ID              reduce using rule 153 (tipo_var -> BOOL .)
    CONTINUE        reduce using rule 153 (tipo_var -> BOOL .)
    BREAK           reduce using rule 153 (tipo_var -> BOOL .)
    RETURN          reduce using rule 153 (tipo_var -> BOOL .)
    IF              reduce using rule 153 (tipo_var -> BOOL .)
    MATCH           reduce using rule 153 (tipo_var -> BOOL .)
    LOOP            reduce using rule 153 (tipo_var -> BOOL .)
    WHILE           reduce using rule 153 (tipo_var -> BOOL .)
    FOR             reduce using rule 153 (tipo_var -> BOOL .)
    LPAR            reduce using rule 153 (tipo_var -> BOOL .)
    AD              reduce using rule 153 (tipo_var -> BOOL .)
    VEC             reduce using rule 153 (tipo_var -> BOOL .)
    VECTOR          reduce using rule 153 (tipo_var -> BOOL .)
    MUT             reduce using rule 153 (tipo_var -> BOOL .)
    ANDSINGLE       reduce using rule 153 (tipo_var -> BOOL .)
    I64             reduce using rule 153 (tipo_var -> BOOL .)
    F64             reduce using rule 153 (tipo_var -> BOOL .)
    ENTERO          reduce using rule 153 (tipo_var -> BOOL .)
    DECIMAL         reduce using rule 153 (tipo_var -> BOOL .)
    CADENA          reduce using rule 153 (tipo_var -> BOOL .)
    BOOLEANO        reduce using rule 153 (tipo_var -> BOOL .)
    CARACTER        reduce using rule 153 (tipo_var -> BOOL .)
    LCOR            reduce using rule 153 (tipo_var -> BOOL .)
    ARROW2          reduce using rule 153 (tipo_var -> BOOL .)
    ORSINGLE        reduce using rule 153 (tipo_var -> BOOL .)
    PUNTO           reduce using rule 153 (tipo_var -> BOOL .)


state 57

    (154) tipo_var -> CHAR .

    RLLAV           reduce using rule 154 (tipo_var -> CHAR .)
    COMA            reduce using rule 154 (tipo_var -> CHAR .)
    RPAR            reduce using rule 154 (tipo_var -> CHAR .)
    IGUAL           reduce using rule 154 (tipo_var -> CHAR .)
    LLLAV           reduce using rule 154 (tipo_var -> CHAR .)
    RCOR            reduce using rule 154 (tipo_var -> CHAR .)
    PCOMA           reduce using rule 154 (tipo_var -> CHAR .)
    MAYOR           reduce using rule 154 (tipo_var -> CHAR .)
    MAS             reduce using rule 154 (tipo_var -> CHAR .)
    MENOS           reduce using rule 154 (tipo_var -> CHAR .)
    MULTIPLICACION  reduce using rule 154 (tipo_var -> CHAR .)
    DIVISION        reduce using rule 154 (tipo_var -> CHAR .)
    MODULO          reduce using rule 154 (tipo_var -> CHAR .)
    AND             reduce using rule 154 (tipo_var -> CHAR .)
    OR              reduce using rule 154 (tipo_var -> CHAR .)
    IGUALI          reduce using rule 154 (tipo_var -> CHAR .)
    DIF             reduce using rule 154 (tipo_var -> CHAR .)
    MENOR           reduce using rule 154 (tipo_var -> CHAR .)
    MAYORI          reduce using rule 154 (tipo_var -> CHAR .)
    MENORI          reduce using rule 154 (tipo_var -> CHAR .)
    AS              reduce using rule 154 (tipo_var -> CHAR .)
    PRINT           reduce using rule 154 (tipo_var -> CHAR .)
    LET             reduce using rule 154 (tipo_var -> CHAR .)
    ID              reduce using rule 154 (tipo_var -> CHAR .)
    CONTINUE        reduce using rule 154 (tipo_var -> CHAR .)
    BREAK           reduce using rule 154 (tipo_var -> CHAR .)
    RETURN          reduce using rule 154 (tipo_var -> CHAR .)
    IF              reduce using rule 154 (tipo_var -> CHAR .)
    MATCH           reduce using rule 154 (tipo_var -> CHAR .)
    LOOP            reduce using rule 154 (tipo_var -> CHAR .)
    WHILE           reduce using rule 154 (tipo_var -> CHAR .)
    FOR             reduce using rule 154 (tipo_var -> CHAR .)
    LPAR            reduce using rule 154 (tipo_var -> CHAR .)
    AD              reduce using rule 154 (tipo_var -> CHAR .)
    VEC             reduce using rule 154 (tipo_var -> CHAR .)
    VECTOR          reduce using rule 154 (tipo_var -> CHAR .)
    MUT             reduce using rule 154 (tipo_var -> CHAR .)
    ANDSINGLE       reduce using rule 154 (tipo_var -> CHAR .)
    I64             reduce using rule 154 (tipo_var -> CHAR .)
    F64             reduce using rule 154 (tipo_var -> CHAR .)
    ENTERO          reduce using rule 154 (tipo_var -> CHAR .)
    DECIMAL         reduce using rule 154 (tipo_var -> CHAR .)
    CADENA          reduce using rule 154 (tipo_var -> CHAR .)
    BOOLEANO        reduce using rule 154 (tipo_var -> CHAR .)
    CARACTER        reduce using rule 154 (tipo_var -> CHAR .)
    LCOR            reduce using rule 154 (tipo_var -> CHAR .)
    ARROW2          reduce using rule 154 (tipo_var -> CHAR .)
    ORSINGLE        reduce using rule 154 (tipo_var -> CHAR .)
    PUNTO           reduce using rule 154 (tipo_var -> CHAR .)


state 58

    (155) tipo_var -> USIZE .

    RLLAV           reduce using rule 155 (tipo_var -> USIZE .)
    COMA            reduce using rule 155 (tipo_var -> USIZE .)
    RPAR            reduce using rule 155 (tipo_var -> USIZE .)
    IGUAL           reduce using rule 155 (tipo_var -> USIZE .)
    LLLAV           reduce using rule 155 (tipo_var -> USIZE .)
    RCOR            reduce using rule 155 (tipo_var -> USIZE .)
    PCOMA           reduce using rule 155 (tipo_var -> USIZE .)
    MAYOR           reduce using rule 155 (tipo_var -> USIZE .)
    MAS             reduce using rule 155 (tipo_var -> USIZE .)
    MENOS           reduce using rule 155 (tipo_var -> USIZE .)
    MULTIPLICACION  reduce using rule 155 (tipo_var -> USIZE .)
    DIVISION        reduce using rule 155 (tipo_var -> USIZE .)
    MODULO          reduce using rule 155 (tipo_var -> USIZE .)
    AND             reduce using rule 155 (tipo_var -> USIZE .)
    OR              reduce using rule 155 (tipo_var -> USIZE .)
    IGUALI          reduce using rule 155 (tipo_var -> USIZE .)
    DIF             reduce using rule 155 (tipo_var -> USIZE .)
    MENOR           reduce using rule 155 (tipo_var -> USIZE .)
    MAYORI          reduce using rule 155 (tipo_var -> USIZE .)
    MENORI          reduce using rule 155 (tipo_var -> USIZE .)
    AS              reduce using rule 155 (tipo_var -> USIZE .)
    PRINT           reduce using rule 155 (tipo_var -> USIZE .)
    LET             reduce using rule 155 (tipo_var -> USIZE .)
    ID              reduce using rule 155 (tipo_var -> USIZE .)
    CONTINUE        reduce using rule 155 (tipo_var -> USIZE .)
    BREAK           reduce using rule 155 (tipo_var -> USIZE .)
    RETURN          reduce using rule 155 (tipo_var -> USIZE .)
    IF              reduce using rule 155 (tipo_var -> USIZE .)
    MATCH           reduce using rule 155 (tipo_var -> USIZE .)
    LOOP            reduce using rule 155 (tipo_var -> USIZE .)
    WHILE           reduce using rule 155 (tipo_var -> USIZE .)
    FOR             reduce using rule 155 (tipo_var -> USIZE .)
    LPAR            reduce using rule 155 (tipo_var -> USIZE .)
    AD              reduce using rule 155 (tipo_var -> USIZE .)
    VEC             reduce using rule 155 (tipo_var -> USIZE .)
    VECTOR          reduce using rule 155 (tipo_var -> USIZE .)
    MUT             reduce using rule 155 (tipo_var -> USIZE .)
    ANDSINGLE       reduce using rule 155 (tipo_var -> USIZE .)
    I64             reduce using rule 155 (tipo_var -> USIZE .)
    F64             reduce using rule 155 (tipo_var -> USIZE .)
    ENTERO          reduce using rule 155 (tipo_var -> USIZE .)
    DECIMAL         reduce using rule 155 (tipo_var -> USIZE .)
    CADENA          reduce using rule 155 (tipo_var -> USIZE .)
    BOOLEANO        reduce using rule 155 (tipo_var -> USIZE .)
    CARACTER        reduce using rule 155 (tipo_var -> USIZE .)
    LCOR            reduce using rule 155 (tipo_var -> USIZE .)
    ARROW2          reduce using rule 155 (tipo_var -> USIZE .)
    ORSINGLE        reduce using rule 155 (tipo_var -> USIZE .)
    PUNTO           reduce using rule 155 (tipo_var -> USIZE .)


state 59

    (156) tipo_var -> lista_arr2 .

    RLLAV           reduce using rule 156 (tipo_var -> lista_arr2 .)
    COMA            reduce using rule 156 (tipo_var -> lista_arr2 .)
    RPAR            reduce using rule 156 (tipo_var -> lista_arr2 .)
    IGUAL           reduce using rule 156 (tipo_var -> lista_arr2 .)
    LLLAV           reduce using rule 156 (tipo_var -> lista_arr2 .)
    RCOR            reduce using rule 156 (tipo_var -> lista_arr2 .)
    PCOMA           reduce using rule 156 (tipo_var -> lista_arr2 .)
    MAYOR           reduce using rule 156 (tipo_var -> lista_arr2 .)
    MAS             reduce using rule 156 (tipo_var -> lista_arr2 .)
    MENOS           reduce using rule 156 (tipo_var -> lista_arr2 .)
    MULTIPLICACION  reduce using rule 156 (tipo_var -> lista_arr2 .)
    DIVISION        reduce using rule 156 (tipo_var -> lista_arr2 .)
    MODULO          reduce using rule 156 (tipo_var -> lista_arr2 .)
    AND             reduce using rule 156 (tipo_var -> lista_arr2 .)
    OR              reduce using rule 156 (tipo_var -> lista_arr2 .)
    IGUALI          reduce using rule 156 (tipo_var -> lista_arr2 .)
    DIF             reduce using rule 156 (tipo_var -> lista_arr2 .)
    MENOR           reduce using rule 156 (tipo_var -> lista_arr2 .)
    MAYORI          reduce using rule 156 (tipo_var -> lista_arr2 .)
    MENORI          reduce using rule 156 (tipo_var -> lista_arr2 .)
    AS              reduce using rule 156 (tipo_var -> lista_arr2 .)
    PRINT           reduce using rule 156 (tipo_var -> lista_arr2 .)
    LET             reduce using rule 156 (tipo_var -> lista_arr2 .)
    ID              reduce using rule 156 (tipo_var -> lista_arr2 .)
    CONTINUE        reduce using rule 156 (tipo_var -> lista_arr2 .)
    BREAK           reduce using rule 156 (tipo_var -> lista_arr2 .)
    RETURN          reduce using rule 156 (tipo_var -> lista_arr2 .)
    IF              reduce using rule 156 (tipo_var -> lista_arr2 .)
    MATCH           reduce using rule 156 (tipo_var -> lista_arr2 .)
    LOOP            reduce using rule 156 (tipo_var -> lista_arr2 .)
    WHILE           reduce using rule 156 (tipo_var -> lista_arr2 .)
    FOR             reduce using rule 156 (tipo_var -> lista_arr2 .)
    LPAR            reduce using rule 156 (tipo_var -> lista_arr2 .)
    AD              reduce using rule 156 (tipo_var -> lista_arr2 .)
    VEC             reduce using rule 156 (tipo_var -> lista_arr2 .)
    VECTOR          reduce using rule 156 (tipo_var -> lista_arr2 .)
    MUT             reduce using rule 156 (tipo_var -> lista_arr2 .)
    ANDSINGLE       reduce using rule 156 (tipo_var -> lista_arr2 .)
    I64             reduce using rule 156 (tipo_var -> lista_arr2 .)
    F64             reduce using rule 156 (tipo_var -> lista_arr2 .)
    ENTERO          reduce using rule 156 (tipo_var -> lista_arr2 .)
    DECIMAL         reduce using rule 156 (tipo_var -> lista_arr2 .)
    CADENA          reduce using rule 156 (tipo_var -> lista_arr2 .)
    BOOLEANO        reduce using rule 156 (tipo_var -> lista_arr2 .)
    CARACTER        reduce using rule 156 (tipo_var -> lista_arr2 .)
    LCOR            reduce using rule 156 (tipo_var -> lista_arr2 .)
    ARROW2          reduce using rule 156 (tipo_var -> lista_arr2 .)
    ORSINGLE        reduce using rule 156 (tipo_var -> lista_arr2 .)
    PUNTO           reduce using rule 156 (tipo_var -> lista_arr2 .)


state 60

    (157) tipo_var -> LCOR . tipo_var RCOR
    (96) lista_arr2 -> LCOR . tipo_var PCOMA exp RCOR
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 130
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 61

    (158) tipo_var -> lista_classtype .
    (161) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

    RLLAV           reduce using rule 158 (tipo_var -> lista_classtype .)
    COMA            reduce using rule 158 (tipo_var -> lista_classtype .)
    RPAR            reduce using rule 158 (tipo_var -> lista_classtype .)
    IGUAL           reduce using rule 158 (tipo_var -> lista_classtype .)
    LLLAV           reduce using rule 158 (tipo_var -> lista_classtype .)
    RCOR            reduce using rule 158 (tipo_var -> lista_classtype .)
    PCOMA           reduce using rule 158 (tipo_var -> lista_classtype .)
    MAS             reduce using rule 158 (tipo_var -> lista_classtype .)
    MENOS           reduce using rule 158 (tipo_var -> lista_classtype .)
    MULTIPLICACION  reduce using rule 158 (tipo_var -> lista_classtype .)
    DIVISION        reduce using rule 158 (tipo_var -> lista_classtype .)
    MODULO          reduce using rule 158 (tipo_var -> lista_classtype .)
    AND             reduce using rule 158 (tipo_var -> lista_classtype .)
    OR              reduce using rule 158 (tipo_var -> lista_classtype .)
    IGUALI          reduce using rule 158 (tipo_var -> lista_classtype .)
    DIF             reduce using rule 158 (tipo_var -> lista_classtype .)
    MAYOR           reduce using rule 158 (tipo_var -> lista_classtype .)
    MENOR           reduce using rule 158 (tipo_var -> lista_classtype .)
    MAYORI          reduce using rule 158 (tipo_var -> lista_classtype .)
    MENORI          reduce using rule 158 (tipo_var -> lista_classtype .)
    AS              reduce using rule 158 (tipo_var -> lista_classtype .)
    PRINT           reduce using rule 158 (tipo_var -> lista_classtype .)
    LET             reduce using rule 158 (tipo_var -> lista_classtype .)
    ID              reduce using rule 158 (tipo_var -> lista_classtype .)
    CONTINUE        reduce using rule 158 (tipo_var -> lista_classtype .)
    BREAK           reduce using rule 158 (tipo_var -> lista_classtype .)
    RETURN          reduce using rule 158 (tipo_var -> lista_classtype .)
    IF              reduce using rule 158 (tipo_var -> lista_classtype .)
    MATCH           reduce using rule 158 (tipo_var -> lista_classtype .)
    LOOP            reduce using rule 158 (tipo_var -> lista_classtype .)
    WHILE           reduce using rule 158 (tipo_var -> lista_classtype .)
    FOR             reduce using rule 158 (tipo_var -> lista_classtype .)
    LPAR            reduce using rule 158 (tipo_var -> lista_classtype .)
    AD              reduce using rule 158 (tipo_var -> lista_classtype .)
    VEC             reduce using rule 158 (tipo_var -> lista_classtype .)
    VECTOR          reduce using rule 158 (tipo_var -> lista_classtype .)
    MUT             reduce using rule 158 (tipo_var -> lista_classtype .)
    ANDSINGLE       reduce using rule 158 (tipo_var -> lista_classtype .)
    I64             reduce using rule 158 (tipo_var -> lista_classtype .)
    F64             reduce using rule 158 (tipo_var -> lista_classtype .)
    ENTERO          reduce using rule 158 (tipo_var -> lista_classtype .)
    DECIMAL         reduce using rule 158 (tipo_var -> lista_classtype .)
    CADENA          reduce using rule 158 (tipo_var -> lista_classtype .)
    BOOLEANO        reduce using rule 158 (tipo_var -> lista_classtype .)
    CARACTER        reduce using rule 158 (tipo_var -> lista_classtype .)
    LCOR            reduce using rule 158 (tipo_var -> lista_classtype .)
    ARROW2          reduce using rule 158 (tipo_var -> lista_classtype .)
    ORSINGLE        reduce using rule 158 (tipo_var -> lista_classtype .)
    PUNTO           reduce using rule 158 (tipo_var -> lista_classtype .)
    DPUNTOS         shift and go to state 131


state 62

    (159) tipo_var -> VECTOR . MENOR tipo_var MAYOR
    (160) tipo_var -> VECTOR . MENOR lista_classtype MAYOR

    MENOR           shift and go to state 132


state 63

    (70) lista_var -> lista_var COMA PUB . ID DPUNTOS tipo_var

    ID              shift and go to state 133


state 64

    (71) lista_var -> lista_var COMA ID . DPUNTOS tipo_var

    DPUNTOS         shift and go to state 134


state 65

    (72) lista_var -> PUB ID DPUNTOS . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 135
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 66

    (90) asignacion_simple -> ID DPUNTOS tipo_var .

    RPAR            reduce using rule 90 (asignacion_simple -> ID DPUNTOS tipo_var .)
    COMA            reduce using rule 90 (asignacion_simple -> ID DPUNTOS tipo_var .)
    IGUAL           reduce using rule 90 (asignacion_simple -> ID DPUNTOS tipo_var .)


state 67

    (92) asignacion_simple -> ID DPUNTOS ANDSINGLE . tipo_var
    (94) asignacion_simple -> ID DPUNTOS ANDSINGLE . MUT tipo_var
    (152) tipo_var -> ANDSINGLE . aSTR
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    MUT             shift and go to state 137
    aSTR            shift and go to state 129
    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 136
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 68

    (16) funcion -> FN ID LPAR lista_parametros RPAR ARROW . tipo_var statement
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 138
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 69

    (17) funcion -> FN ID LPAR lista_parametros RPAR statement .

    MOD             reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    STRUCT          reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    FN              reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    $end            reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    RLLAV           reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)
    PUB             reduce using rule 17 (funcion -> FN ID LPAR lista_parametros RPAR statement .)


state 70

    (74) lista_parametros -> lista_parametros COMA asignacion_simple .

    RPAR            reduce using rule 74 (lista_parametros -> lista_parametros COMA asignacion_simple .)
    COMA            reduce using rule 74 (lista_parametros -> lista_parametros COMA asignacion_simple .)


state 71

    (18) funcion -> FN ID LPAR RPAR ARROW tipo_var . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 48

    statement                      shift and go to state 139

state 72

    (68) statement -> LLLAV instrucciones_l . RLLAV
    (7) instrucciones_l -> instrucciones_l . instruccion_l
    (9) instruccion_l -> . print PCOMA
    (10) instruccion_l -> . declaracion PCOMA
    (11) instruccion_l -> . asignacion PCOMA
    (12) instruccion_l -> . llamada PCOMA
    (13) instruccion_l -> . sentencia
    (14) instruccion_l -> . transferencia
    (15) instruccion_l -> . transferencia PCOMA
    (179) print -> . PRINT AD LPAR lista_exp RPAR
    (76) declaracion -> . LET asignacion_simple IGUAL auxexp
    (77) declaracion -> . LET MUT asignacion
    (78) declaracion -> . LET asignacion
    (79) asignacion -> . lista_assign IGUAL auxexp
    (80) asignacion -> . ID lista_arr IGUAL auxexp
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (62) transferencia -> . CONTINUE
    (63) transferencia -> . BREAK
    (64) transferencia -> . BREAK auxexp
    (65) transferencia -> . RETURN
    (66) transferencia -> . RETURN auxexp
    (67) transferencia -> . auxexp
    (81) lista_assign -> . lista_assign PUNTO ID
    (82) lista_assign -> . ID
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR

    RLLAV           shift and go to state 140
    PRINT           shift and go to state 81
    LET             shift and go to state 84
    ID              shift and go to state 88
    CONTINUE        shift and go to state 94
    BREAK           shift and go to state 95
    RETURN          shift and go to state 96
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127

    instruccion_l                  shift and go to state 141
    print                          shift and go to state 75
    declaracion                    shift and go to state 76
    asignacion                     shift and go to state 77
    llamada                        shift and go to state 78
    sentencia                      shift and go to state 79
    transferencia                  shift and go to state 80
    auxexp                         shift and go to state 85
    lista_assign                   shift and go to state 87
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93
    exp                            shift and go to state 98
    expstruct                      shift and go to state 103
    lista_classtype                shift and go to state 104
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    valores                        shift and go to state 114
    newarray                       shift and go to state 116

state 73

    (69) statement -> LLLAV RLLAV .

    MOD             reduce using rule 69 (statement -> LLLAV RLLAV .)
    STRUCT          reduce using rule 69 (statement -> LLLAV RLLAV .)
    FN              reduce using rule 69 (statement -> LLLAV RLLAV .)
    $end            reduce using rule 69 (statement -> LLLAV RLLAV .)
    RLLAV           reduce using rule 69 (statement -> LLLAV RLLAV .)
    PUB             reduce using rule 69 (statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 69 (statement -> LLLAV RLLAV .)
    LET             reduce using rule 69 (statement -> LLLAV RLLAV .)
    ID              reduce using rule 69 (statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 69 (statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 69 (statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 69 (statement -> LLLAV RLLAV .)
    IF              reduce using rule 69 (statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 69 (statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 69 (statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 69 (statement -> LLLAV RLLAV .)
    FOR             reduce using rule 69 (statement -> LLLAV RLLAV .)
    LPAR            reduce using rule 69 (statement -> LLLAV RLLAV .)
    MENOS           reduce using rule 69 (statement -> LLLAV RLLAV .)
    AD              reduce using rule 69 (statement -> LLLAV RLLAV .)
    VEC             reduce using rule 69 (statement -> LLLAV RLLAV .)
    VECTOR          reduce using rule 69 (statement -> LLLAV RLLAV .)
    MUT             reduce using rule 69 (statement -> LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 69 (statement -> LLLAV RLLAV .)
    I64             reduce using rule 69 (statement -> LLLAV RLLAV .)
    F64             reduce using rule 69 (statement -> LLLAV RLLAV .)
    ENTERO          reduce using rule 69 (statement -> LLLAV RLLAV .)
    DECIMAL         reduce using rule 69 (statement -> LLLAV RLLAV .)
    CADENA          reduce using rule 69 (statement -> LLLAV RLLAV .)
    BOOLEANO        reduce using rule 69 (statement -> LLLAV RLLAV .)
    CARACTER        reduce using rule 69 (statement -> LLLAV RLLAV .)
    LCOR            reduce using rule 69 (statement -> LLLAV RLLAV .)
    MAS             reduce using rule 69 (statement -> LLLAV RLLAV .)
    MULTIPLICACION  reduce using rule 69 (statement -> LLLAV RLLAV .)
    DIVISION        reduce using rule 69 (statement -> LLLAV RLLAV .)
    MODULO          reduce using rule 69 (statement -> LLLAV RLLAV .)
    AND             reduce using rule 69 (statement -> LLLAV RLLAV .)
    OR              reduce using rule 69 (statement -> LLLAV RLLAV .)
    IGUALI          reduce using rule 69 (statement -> LLLAV RLLAV .)
    DIF             reduce using rule 69 (statement -> LLLAV RLLAV .)
    MAYOR           reduce using rule 69 (statement -> LLLAV RLLAV .)
    MENOR           reduce using rule 69 (statement -> LLLAV RLLAV .)
    MAYORI          reduce using rule 69 (statement -> LLLAV RLLAV .)
    MENORI          reduce using rule 69 (statement -> LLLAV RLLAV .)
    AS              reduce using rule 69 (statement -> LLLAV RLLAV .)
    PCOMA           reduce using rule 69 (statement -> LLLAV RLLAV .)
    COMA            reduce using rule 69 (statement -> LLLAV RLLAV .)
    LLLAV           reduce using rule 69 (statement -> LLLAV RLLAV .)
    RCOR            reduce using rule 69 (statement -> LLLAV RLLAV .)
    RPAR            reduce using rule 69 (statement -> LLLAV RLLAV .)
    ARROW2          reduce using rule 69 (statement -> LLLAV RLLAV .)
    ORSINGLE        reduce using rule 69 (statement -> LLLAV RLLAV .)
    PUNTO           reduce using rule 69 (statement -> LLLAV RLLAV .)
    ELSE            reduce using rule 69 (statement -> LLLAV RLLAV .)


state 74

    (8) instrucciones_l -> instruccion_l .

    RLLAV           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    PRINT           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    LET             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    ID              reduce using rule 8 (instrucciones_l -> instruccion_l .)
    CONTINUE        reduce using rule 8 (instrucciones_l -> instruccion_l .)
    BREAK           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    RETURN          reduce using rule 8 (instrucciones_l -> instruccion_l .)
    IF              reduce using rule 8 (instrucciones_l -> instruccion_l .)
    MATCH           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    LOOP            reduce using rule 8 (instrucciones_l -> instruccion_l .)
    WHILE           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    FOR             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    LPAR            reduce using rule 8 (instrucciones_l -> instruccion_l .)
    MENOS           reduce using rule 8 (instrucciones_l -> instruccion_l .)
    AD              reduce using rule 8 (instrucciones_l -> instruccion_l .)
    VEC             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    VECTOR          reduce using rule 8 (instrucciones_l -> instruccion_l .)
    MUT             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    ANDSINGLE       reduce using rule 8 (instrucciones_l -> instruccion_l .)
    I64             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    F64             reduce using rule 8 (instrucciones_l -> instruccion_l .)
    ENTERO          reduce using rule 8 (instrucciones_l -> instruccion_l .)
    DECIMAL         reduce using rule 8 (instrucciones_l -> instruccion_l .)
    CADENA          reduce using rule 8 (instrucciones_l -> instruccion_l .)
    BOOLEANO        reduce using rule 8 (instrucciones_l -> instruccion_l .)
    CARACTER        reduce using rule 8 (instrucciones_l -> instruccion_l .)
    LCOR            reduce using rule 8 (instrucciones_l -> instruccion_l .)


state 75

    (9) instruccion_l -> print . PCOMA

    PCOMA           shift and go to state 142


state 76

    (10) instruccion_l -> declaracion . PCOMA

    PCOMA           shift and go to state 143


state 77

    (11) instruccion_l -> asignacion . PCOMA

    PCOMA           shift and go to state 144


state 78

    (12) instruccion_l -> llamada . PCOMA
    (109) exp -> llamada .

  ! shift/reduce conflict for PCOMA resolved as shift
    PCOMA           shift and go to state 145
    MAS             reduce using rule 109 (exp -> llamada .)
    MENOS           reduce using rule 109 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 109 (exp -> llamada .)
    DIVISION        reduce using rule 109 (exp -> llamada .)
    MODULO          reduce using rule 109 (exp -> llamada .)
    AND             reduce using rule 109 (exp -> llamada .)
    OR              reduce using rule 109 (exp -> llamada .)
    IGUALI          reduce using rule 109 (exp -> llamada .)
    DIF             reduce using rule 109 (exp -> llamada .)
    MAYOR           reduce using rule 109 (exp -> llamada .)
    MENOR           reduce using rule 109 (exp -> llamada .)
    MAYORI          reduce using rule 109 (exp -> llamada .)
    MENORI          reduce using rule 109 (exp -> llamada .)
    AS              reduce using rule 109 (exp -> llamada .)
    RLLAV           reduce using rule 109 (exp -> llamada .)
    PRINT           reduce using rule 109 (exp -> llamada .)
    LET             reduce using rule 109 (exp -> llamada .)
    ID              reduce using rule 109 (exp -> llamada .)
    CONTINUE        reduce using rule 109 (exp -> llamada .)
    BREAK           reduce using rule 109 (exp -> llamada .)
    RETURN          reduce using rule 109 (exp -> llamada .)
    IF              reduce using rule 109 (exp -> llamada .)
    MATCH           reduce using rule 109 (exp -> llamada .)
    LOOP            reduce using rule 109 (exp -> llamada .)
    WHILE           reduce using rule 109 (exp -> llamada .)
    FOR             reduce using rule 109 (exp -> llamada .)
    LPAR            reduce using rule 109 (exp -> llamada .)
    AD              reduce using rule 109 (exp -> llamada .)
    VEC             reduce using rule 109 (exp -> llamada .)
    VECTOR          reduce using rule 109 (exp -> llamada .)
    MUT             reduce using rule 109 (exp -> llamada .)
    ANDSINGLE       reduce using rule 109 (exp -> llamada .)
    I64             reduce using rule 109 (exp -> llamada .)
    F64             reduce using rule 109 (exp -> llamada .)
    ENTERO          reduce using rule 109 (exp -> llamada .)
    DECIMAL         reduce using rule 109 (exp -> llamada .)
    CADENA          reduce using rule 109 (exp -> llamada .)
    BOOLEANO        reduce using rule 109 (exp -> llamada .)
    CARACTER        reduce using rule 109 (exp -> llamada .)
    LCOR            reduce using rule 109 (exp -> llamada .)

  ! PCOMA           [ reduce using rule 109 (exp -> llamada .) ]


state 79

    (13) instruccion_l -> sentencia .
    (110) exp -> sentencia .

  ! reduce/reduce conflict for MENOS resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for RLLAV resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for PRINT resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LET resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ID resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CONTINUE resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for BREAK resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for RETURN resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for IF resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for MATCH resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LOOP resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for WHILE resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for FOR resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LPAR resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for AD resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for VEC resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for VECTOR resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for MUT resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ANDSINGLE resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for I64 resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for F64 resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for ENTERO resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for DECIMAL resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CADENA resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for BOOLEANO resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for CARACTER resolved using rule 13 (instruccion_l -> sentencia .)
  ! reduce/reduce conflict for LCOR resolved using rule 13 (instruccion_l -> sentencia .)
    RLLAV           reduce using rule 13 (instruccion_l -> sentencia .)
    PRINT           reduce using rule 13 (instruccion_l -> sentencia .)
    LET             reduce using rule 13 (instruccion_l -> sentencia .)
    ID              reduce using rule 13 (instruccion_l -> sentencia .)
    CONTINUE        reduce using rule 13 (instruccion_l -> sentencia .)
    BREAK           reduce using rule 13 (instruccion_l -> sentencia .)
    RETURN          reduce using rule 13 (instruccion_l -> sentencia .)
    IF              reduce using rule 13 (instruccion_l -> sentencia .)
    MATCH           reduce using rule 13 (instruccion_l -> sentencia .)
    LOOP            reduce using rule 13 (instruccion_l -> sentencia .)
    WHILE           reduce using rule 13 (instruccion_l -> sentencia .)
    FOR             reduce using rule 13 (instruccion_l -> sentencia .)
    LPAR            reduce using rule 13 (instruccion_l -> sentencia .)
    MENOS           reduce using rule 13 (instruccion_l -> sentencia .)
    AD              reduce using rule 13 (instruccion_l -> sentencia .)
    VEC             reduce using rule 13 (instruccion_l -> sentencia .)
    VECTOR          reduce using rule 13 (instruccion_l -> sentencia .)
    MUT             reduce using rule 13 (instruccion_l -> sentencia .)
    ANDSINGLE       reduce using rule 13 (instruccion_l -> sentencia .)
    I64             reduce using rule 13 (instruccion_l -> sentencia .)
    F64             reduce using rule 13 (instruccion_l -> sentencia .)
    ENTERO          reduce using rule 13 (instruccion_l -> sentencia .)
    DECIMAL         reduce using rule 13 (instruccion_l -> sentencia .)
    CADENA          reduce using rule 13 (instruccion_l -> sentencia .)
    BOOLEANO        reduce using rule 13 (instruccion_l -> sentencia .)
    CARACTER        reduce using rule 13 (instruccion_l -> sentencia .)
    LCOR            reduce using rule 13 (instruccion_l -> sentencia .)
    MAS             reduce using rule 110 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 110 (exp -> sentencia .)
    DIVISION        reduce using rule 110 (exp -> sentencia .)
    MODULO          reduce using rule 110 (exp -> sentencia .)
    AND             reduce using rule 110 (exp -> sentencia .)
    OR              reduce using rule 110 (exp -> sentencia .)
    IGUALI          reduce using rule 110 (exp -> sentencia .)
    DIF             reduce using rule 110 (exp -> sentencia .)
    MAYOR           reduce using rule 110 (exp -> sentencia .)
    MENOR           reduce using rule 110 (exp -> sentencia .)
    MAYORI          reduce using rule 110 (exp -> sentencia .)
    MENORI          reduce using rule 110 (exp -> sentencia .)
    AS              reduce using rule 110 (exp -> sentencia .)
    PCOMA           reduce using rule 110 (exp -> sentencia .)

  ! MENOS           [ reduce using rule 110 (exp -> sentencia .) ]
  ! RLLAV           [ reduce using rule 110 (exp -> sentencia .) ]
  ! PRINT           [ reduce using rule 110 (exp -> sentencia .) ]
  ! LET             [ reduce using rule 110 (exp -> sentencia .) ]
  ! ID              [ reduce using rule 110 (exp -> sentencia .) ]
  ! CONTINUE        [ reduce using rule 110 (exp -> sentencia .) ]
  ! BREAK           [ reduce using rule 110 (exp -> sentencia .) ]
  ! RETURN          [ reduce using rule 110 (exp -> sentencia .) ]
  ! IF              [ reduce using rule 110 (exp -> sentencia .) ]
  ! MATCH           [ reduce using rule 110 (exp -> sentencia .) ]
  ! LOOP            [ reduce using rule 110 (exp -> sentencia .) ]
  ! WHILE           [ reduce using rule 110 (exp -> sentencia .) ]
  ! FOR             [ reduce using rule 110 (exp -> sentencia .) ]
  ! LPAR            [ reduce using rule 110 (exp -> sentencia .) ]
  ! AD              [ reduce using rule 110 (exp -> sentencia .) ]
  ! VEC             [ reduce using rule 110 (exp -> sentencia .) ]
  ! VECTOR          [ reduce using rule 110 (exp -> sentencia .) ]
  ! MUT             [ reduce using rule 110 (exp -> sentencia .) ]
  ! ANDSINGLE       [ reduce using rule 110 (exp -> sentencia .) ]
  ! I64             [ reduce using rule 110 (exp -> sentencia .) ]
  ! F64             [ reduce using rule 110 (exp -> sentencia .) ]
  ! ENTERO          [ reduce using rule 110 (exp -> sentencia .) ]
  ! DECIMAL         [ reduce using rule 110 (exp -> sentencia .) ]
  ! CADENA          [ reduce using rule 110 (exp -> sentencia .) ]
  ! BOOLEANO        [ reduce using rule 110 (exp -> sentencia .) ]
  ! CARACTER        [ reduce using rule 110 (exp -> sentencia .) ]
  ! LCOR            [ reduce using rule 110 (exp -> sentencia .) ]


state 80

    (14) instruccion_l -> transferencia .
    (15) instruccion_l -> transferencia . PCOMA

    RLLAV           reduce using rule 14 (instruccion_l -> transferencia .)
    PRINT           reduce using rule 14 (instruccion_l -> transferencia .)
    LET             reduce using rule 14 (instruccion_l -> transferencia .)
    ID              reduce using rule 14 (instruccion_l -> transferencia .)
    CONTINUE        reduce using rule 14 (instruccion_l -> transferencia .)
    BREAK           reduce using rule 14 (instruccion_l -> transferencia .)
    RETURN          reduce using rule 14 (instruccion_l -> transferencia .)
    IF              reduce using rule 14 (instruccion_l -> transferencia .)
    MATCH           reduce using rule 14 (instruccion_l -> transferencia .)
    LOOP            reduce using rule 14 (instruccion_l -> transferencia .)
    WHILE           reduce using rule 14 (instruccion_l -> transferencia .)
    FOR             reduce using rule 14 (instruccion_l -> transferencia .)
    LPAR            reduce using rule 14 (instruccion_l -> transferencia .)
    MENOS           reduce using rule 14 (instruccion_l -> transferencia .)
    AD              reduce using rule 14 (instruccion_l -> transferencia .)
    VEC             reduce using rule 14 (instruccion_l -> transferencia .)
    VECTOR          reduce using rule 14 (instruccion_l -> transferencia .)
    MUT             reduce using rule 14 (instruccion_l -> transferencia .)
    ANDSINGLE       reduce using rule 14 (instruccion_l -> transferencia .)
    I64             reduce using rule 14 (instruccion_l -> transferencia .)
    F64             reduce using rule 14 (instruccion_l -> transferencia .)
    ENTERO          reduce using rule 14 (instruccion_l -> transferencia .)
    DECIMAL         reduce using rule 14 (instruccion_l -> transferencia .)
    CADENA          reduce using rule 14 (instruccion_l -> transferencia .)
    BOOLEANO        reduce using rule 14 (instruccion_l -> transferencia .)
    CARACTER        reduce using rule 14 (instruccion_l -> transferencia .)
    LCOR            reduce using rule 14 (instruccion_l -> transferencia .)
    PCOMA           shift and go to state 146


state 81

    (179) print -> PRINT . AD LPAR lista_exp RPAR

    AD              shift and go to state 147


state 82

    (123) expop -> AD . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 148
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 83

    (99) exp -> LPAR . exp LPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 152
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 84

    (76) declaracion -> LET . asignacion_simple IGUAL auxexp
    (77) declaracion -> LET . MUT asignacion
    (78) declaracion -> LET . asignacion
    (90) asignacion_simple -> . ID DPUNTOS tipo_var
    (91) asignacion_simple -> . MUT ID DPUNTOS tipo_var
    (92) asignacion_simple -> . ID DPUNTOS ANDSINGLE tipo_var
    (93) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE tipo_var
    (94) asignacion_simple -> . ID DPUNTOS ANDSINGLE MUT tipo_var
    (95) asignacion_simple -> . MUT ID DPUNTOS ANDSINGLE MUT tipo_var
    (79) asignacion -> . lista_assign IGUAL auxexp
    (80) asignacion -> . ID lista_arr IGUAL auxexp
    (81) lista_assign -> . lista_assign PUNTO ID
    (82) lista_assign -> . ID

    MUT             shift and go to state 154
    ID              shift and go to state 156

    asignacion_simple              shift and go to state 153
    asignacion                     shift and go to state 155
    lista_assign                   shift and go to state 87

state 85

    (67) transferencia -> auxexp .

    PCOMA           reduce using rule 67 (transferencia -> auxexp .)
    RLLAV           reduce using rule 67 (transferencia -> auxexp .)
    PRINT           reduce using rule 67 (transferencia -> auxexp .)
    LET             reduce using rule 67 (transferencia -> auxexp .)
    ID              reduce using rule 67 (transferencia -> auxexp .)
    CONTINUE        reduce using rule 67 (transferencia -> auxexp .)
    BREAK           reduce using rule 67 (transferencia -> auxexp .)
    RETURN          reduce using rule 67 (transferencia -> auxexp .)
    IF              reduce using rule 67 (transferencia -> auxexp .)
    MATCH           reduce using rule 67 (transferencia -> auxexp .)
    LOOP            reduce using rule 67 (transferencia -> auxexp .)
    WHILE           reduce using rule 67 (transferencia -> auxexp .)
    FOR             reduce using rule 67 (transferencia -> auxexp .)
    LPAR            reduce using rule 67 (transferencia -> auxexp .)
    MENOS           reduce using rule 67 (transferencia -> auxexp .)
    AD              reduce using rule 67 (transferencia -> auxexp .)
    VEC             reduce using rule 67 (transferencia -> auxexp .)
    VECTOR          reduce using rule 67 (transferencia -> auxexp .)
    MUT             reduce using rule 67 (transferencia -> auxexp .)
    ANDSINGLE       reduce using rule 67 (transferencia -> auxexp .)
    I64             reduce using rule 67 (transferencia -> auxexp .)
    F64             reduce using rule 67 (transferencia -> auxexp .)
    ENTERO          reduce using rule 67 (transferencia -> auxexp .)
    DECIMAL         reduce using rule 67 (transferencia -> auxexp .)
    CADENA          reduce using rule 67 (transferencia -> auxexp .)
    BOOLEANO        reduce using rule 67 (transferencia -> auxexp .)
    CARACTER        reduce using rule 67 (transferencia -> auxexp .)
    LCOR            reduce using rule 67 (transferencia -> auxexp .)
    COMA            reduce using rule 67 (transferencia -> auxexp .)


state 86

    (136) exparam -> MUT . ID

    ID              shift and go to state 157


state 87

    (79) asignacion -> lista_assign . IGUAL auxexp
    (81) lista_assign -> lista_assign . PUNTO ID

    IGUAL           shift and go to state 158
    PUNTO           shift and go to state 159


state 88

    (80) asignacion -> ID . lista_arr IGUAL auxexp
    (163) llamada -> ID . LPAR RPAR
    (164) llamada -> ID . LPAR lista_exp RPAR
    (82) lista_assign -> ID .
    (162) lista_classtype -> ID .
    (138) exparr -> ID . lista_arr
    (85) lista_acc -> ID .
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

  ! reduce/reduce conflict for PUNTO resolved using rule 82 (lista_assign -> ID .)
  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    LPAR            shift and go to state 161
    IGUAL           reduce using rule 82 (lista_assign -> ID .)
    PUNTO           reduce using rule 82 (lista_assign -> ID .)
    LLLAV           reduce using rule 162 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 162 (lista_classtype -> ID .)
    MAS             reduce using rule 85 (lista_acc -> ID .)
    MENOS           reduce using rule 85 (lista_acc -> ID .)
    MULTIPLICACION  reduce using rule 85 (lista_acc -> ID .)
    DIVISION        reduce using rule 85 (lista_acc -> ID .)
    MODULO          reduce using rule 85 (lista_acc -> ID .)
    AND             reduce using rule 85 (lista_acc -> ID .)
    OR              reduce using rule 85 (lista_acc -> ID .)
    IGUALI          reduce using rule 85 (lista_acc -> ID .)
    DIF             reduce using rule 85 (lista_acc -> ID .)
    MAYOR           reduce using rule 85 (lista_acc -> ID .)
    MENOR           reduce using rule 85 (lista_acc -> ID .)
    MAYORI          reduce using rule 85 (lista_acc -> ID .)
    MENORI          reduce using rule 85 (lista_acc -> ID .)
    AS              reduce using rule 85 (lista_acc -> ID .)
    PCOMA           reduce using rule 85 (lista_acc -> ID .)
    RLLAV           reduce using rule 85 (lista_acc -> ID .)
    PRINT           reduce using rule 85 (lista_acc -> ID .)
    LET             reduce using rule 85 (lista_acc -> ID .)
    ID              reduce using rule 85 (lista_acc -> ID .)
    CONTINUE        reduce using rule 85 (lista_acc -> ID .)
    BREAK           reduce using rule 85 (lista_acc -> ID .)
    RETURN          reduce using rule 85 (lista_acc -> ID .)
    IF              reduce using rule 85 (lista_acc -> ID .)
    MATCH           reduce using rule 85 (lista_acc -> ID .)
    LOOP            reduce using rule 85 (lista_acc -> ID .)
    WHILE           reduce using rule 85 (lista_acc -> ID .)
    FOR             reduce using rule 85 (lista_acc -> ID .)
    AD              reduce using rule 85 (lista_acc -> ID .)
    VEC             reduce using rule 85 (lista_acc -> ID .)
    VECTOR          reduce using rule 85 (lista_acc -> ID .)
    MUT             reduce using rule 85 (lista_acc -> ID .)
    ANDSINGLE       reduce using rule 85 (lista_acc -> ID .)
    I64             reduce using rule 85 (lista_acc -> ID .)
    F64             reduce using rule 85 (lista_acc -> ID .)
    ENTERO          reduce using rule 85 (lista_acc -> ID .)
    DECIMAL         reduce using rule 85 (lista_acc -> ID .)
    CADENA          reduce using rule 85 (lista_acc -> ID .)
    BOOLEANO        reduce using rule 85 (lista_acc -> ID .)
    CARACTER        reduce using rule 85 (lista_acc -> ID .)
    LCOR            shift and go to state 162

  ! PUNTO           [ reduce using rule 85 (lista_acc -> ID .) ]
  ! LPAR            [ reduce using rule 85 (lista_acc -> ID .) ]
  ! LCOR            [ reduce using rule 85 (lista_acc -> ID .) ]

    lista_arr                      shift and go to state 160

state 89

    (33) sentencia -> if .

    RLLAV           reduce using rule 33 (sentencia -> if .)
    PRINT           reduce using rule 33 (sentencia -> if .)
    LET             reduce using rule 33 (sentencia -> if .)
    ID              reduce using rule 33 (sentencia -> if .)
    CONTINUE        reduce using rule 33 (sentencia -> if .)
    BREAK           reduce using rule 33 (sentencia -> if .)
    RETURN          reduce using rule 33 (sentencia -> if .)
    IF              reduce using rule 33 (sentencia -> if .)
    MATCH           reduce using rule 33 (sentencia -> if .)
    LOOP            reduce using rule 33 (sentencia -> if .)
    WHILE           reduce using rule 33 (sentencia -> if .)
    FOR             reduce using rule 33 (sentencia -> if .)
    LPAR            reduce using rule 33 (sentencia -> if .)
    MENOS           reduce using rule 33 (sentencia -> if .)
    AD              reduce using rule 33 (sentencia -> if .)
    VEC             reduce using rule 33 (sentencia -> if .)
    VECTOR          reduce using rule 33 (sentencia -> if .)
    MUT             reduce using rule 33 (sentencia -> if .)
    ANDSINGLE       reduce using rule 33 (sentencia -> if .)
    I64             reduce using rule 33 (sentencia -> if .)
    F64             reduce using rule 33 (sentencia -> if .)
    ENTERO          reduce using rule 33 (sentencia -> if .)
    DECIMAL         reduce using rule 33 (sentencia -> if .)
    CADENA          reduce using rule 33 (sentencia -> if .)
    BOOLEANO        reduce using rule 33 (sentencia -> if .)
    CARACTER        reduce using rule 33 (sentencia -> if .)
    LCOR            reduce using rule 33 (sentencia -> if .)
    MAS             reduce using rule 33 (sentencia -> if .)
    MULTIPLICACION  reduce using rule 33 (sentencia -> if .)
    DIVISION        reduce using rule 33 (sentencia -> if .)
    MODULO          reduce using rule 33 (sentencia -> if .)
    AND             reduce using rule 33 (sentencia -> if .)
    OR              reduce using rule 33 (sentencia -> if .)
    IGUALI          reduce using rule 33 (sentencia -> if .)
    DIF             reduce using rule 33 (sentencia -> if .)
    MAYOR           reduce using rule 33 (sentencia -> if .)
    MENOR           reduce using rule 33 (sentencia -> if .)
    MAYORI          reduce using rule 33 (sentencia -> if .)
    MENORI          reduce using rule 33 (sentencia -> if .)
    AS              reduce using rule 33 (sentencia -> if .)
    PCOMA           reduce using rule 33 (sentencia -> if .)
    COMA            reduce using rule 33 (sentencia -> if .)
    LLLAV           reduce using rule 33 (sentencia -> if .)
    RCOR            reduce using rule 33 (sentencia -> if .)
    RPAR            reduce using rule 33 (sentencia -> if .)
    ARROW2          reduce using rule 33 (sentencia -> if .)
    ORSINGLE        reduce using rule 33 (sentencia -> if .)
    PUNTO           reduce using rule 33 (sentencia -> if .)


state 90

    (34) sentencia -> match .

    RLLAV           reduce using rule 34 (sentencia -> match .)
    PRINT           reduce using rule 34 (sentencia -> match .)
    LET             reduce using rule 34 (sentencia -> match .)
    ID              reduce using rule 34 (sentencia -> match .)
    CONTINUE        reduce using rule 34 (sentencia -> match .)
    BREAK           reduce using rule 34 (sentencia -> match .)
    RETURN          reduce using rule 34 (sentencia -> match .)
    IF              reduce using rule 34 (sentencia -> match .)
    MATCH           reduce using rule 34 (sentencia -> match .)
    LOOP            reduce using rule 34 (sentencia -> match .)
    WHILE           reduce using rule 34 (sentencia -> match .)
    FOR             reduce using rule 34 (sentencia -> match .)
    LPAR            reduce using rule 34 (sentencia -> match .)
    MENOS           reduce using rule 34 (sentencia -> match .)
    AD              reduce using rule 34 (sentencia -> match .)
    VEC             reduce using rule 34 (sentencia -> match .)
    VECTOR          reduce using rule 34 (sentencia -> match .)
    MUT             reduce using rule 34 (sentencia -> match .)
    ANDSINGLE       reduce using rule 34 (sentencia -> match .)
    I64             reduce using rule 34 (sentencia -> match .)
    F64             reduce using rule 34 (sentencia -> match .)
    ENTERO          reduce using rule 34 (sentencia -> match .)
    DECIMAL         reduce using rule 34 (sentencia -> match .)
    CADENA          reduce using rule 34 (sentencia -> match .)
    BOOLEANO        reduce using rule 34 (sentencia -> match .)
    CARACTER        reduce using rule 34 (sentencia -> match .)
    LCOR            reduce using rule 34 (sentencia -> match .)
    MAS             reduce using rule 34 (sentencia -> match .)
    MULTIPLICACION  reduce using rule 34 (sentencia -> match .)
    DIVISION        reduce using rule 34 (sentencia -> match .)
    MODULO          reduce using rule 34 (sentencia -> match .)
    AND             reduce using rule 34 (sentencia -> match .)
    OR              reduce using rule 34 (sentencia -> match .)
    IGUALI          reduce using rule 34 (sentencia -> match .)
    DIF             reduce using rule 34 (sentencia -> match .)
    MAYOR           reduce using rule 34 (sentencia -> match .)
    MENOR           reduce using rule 34 (sentencia -> match .)
    MAYORI          reduce using rule 34 (sentencia -> match .)
    MENORI          reduce using rule 34 (sentencia -> match .)
    AS              reduce using rule 34 (sentencia -> match .)
    PCOMA           reduce using rule 34 (sentencia -> match .)
    COMA            reduce using rule 34 (sentencia -> match .)
    LLLAV           reduce using rule 34 (sentencia -> match .)
    RCOR            reduce using rule 34 (sentencia -> match .)
    RPAR            reduce using rule 34 (sentencia -> match .)
    ARROW2          reduce using rule 34 (sentencia -> match .)
    ORSINGLE        reduce using rule 34 (sentencia -> match .)
    PUNTO           reduce using rule 34 (sentencia -> match .)


state 91

    (35) sentencia -> loop .

    RLLAV           reduce using rule 35 (sentencia -> loop .)
    PRINT           reduce using rule 35 (sentencia -> loop .)
    LET             reduce using rule 35 (sentencia -> loop .)
    ID              reduce using rule 35 (sentencia -> loop .)
    CONTINUE        reduce using rule 35 (sentencia -> loop .)
    BREAK           reduce using rule 35 (sentencia -> loop .)
    RETURN          reduce using rule 35 (sentencia -> loop .)
    IF              reduce using rule 35 (sentencia -> loop .)
    MATCH           reduce using rule 35 (sentencia -> loop .)
    LOOP            reduce using rule 35 (sentencia -> loop .)
    WHILE           reduce using rule 35 (sentencia -> loop .)
    FOR             reduce using rule 35 (sentencia -> loop .)
    LPAR            reduce using rule 35 (sentencia -> loop .)
    MENOS           reduce using rule 35 (sentencia -> loop .)
    AD              reduce using rule 35 (sentencia -> loop .)
    VEC             reduce using rule 35 (sentencia -> loop .)
    VECTOR          reduce using rule 35 (sentencia -> loop .)
    MUT             reduce using rule 35 (sentencia -> loop .)
    ANDSINGLE       reduce using rule 35 (sentencia -> loop .)
    I64             reduce using rule 35 (sentencia -> loop .)
    F64             reduce using rule 35 (sentencia -> loop .)
    ENTERO          reduce using rule 35 (sentencia -> loop .)
    DECIMAL         reduce using rule 35 (sentencia -> loop .)
    CADENA          reduce using rule 35 (sentencia -> loop .)
    BOOLEANO        reduce using rule 35 (sentencia -> loop .)
    CARACTER        reduce using rule 35 (sentencia -> loop .)
    LCOR            reduce using rule 35 (sentencia -> loop .)
    MAS             reduce using rule 35 (sentencia -> loop .)
    MULTIPLICACION  reduce using rule 35 (sentencia -> loop .)
    DIVISION        reduce using rule 35 (sentencia -> loop .)
    MODULO          reduce using rule 35 (sentencia -> loop .)
    AND             reduce using rule 35 (sentencia -> loop .)
    OR              reduce using rule 35 (sentencia -> loop .)
    IGUALI          reduce using rule 35 (sentencia -> loop .)
    DIF             reduce using rule 35 (sentencia -> loop .)
    MAYOR           reduce using rule 35 (sentencia -> loop .)
    MENOR           reduce using rule 35 (sentencia -> loop .)
    MAYORI          reduce using rule 35 (sentencia -> loop .)
    MENORI          reduce using rule 35 (sentencia -> loop .)
    AS              reduce using rule 35 (sentencia -> loop .)
    PCOMA           reduce using rule 35 (sentencia -> loop .)
    COMA            reduce using rule 35 (sentencia -> loop .)
    LLLAV           reduce using rule 35 (sentencia -> loop .)
    RCOR            reduce using rule 35 (sentencia -> loop .)
    RPAR            reduce using rule 35 (sentencia -> loop .)
    ARROW2          reduce using rule 35 (sentencia -> loop .)
    ORSINGLE        reduce using rule 35 (sentencia -> loop .)
    PUNTO           reduce using rule 35 (sentencia -> loop .)


state 92

    (36) sentencia -> while .

    RLLAV           reduce using rule 36 (sentencia -> while .)
    PRINT           reduce using rule 36 (sentencia -> while .)
    LET             reduce using rule 36 (sentencia -> while .)
    ID              reduce using rule 36 (sentencia -> while .)
    CONTINUE        reduce using rule 36 (sentencia -> while .)
    BREAK           reduce using rule 36 (sentencia -> while .)
    RETURN          reduce using rule 36 (sentencia -> while .)
    IF              reduce using rule 36 (sentencia -> while .)
    MATCH           reduce using rule 36 (sentencia -> while .)
    LOOP            reduce using rule 36 (sentencia -> while .)
    WHILE           reduce using rule 36 (sentencia -> while .)
    FOR             reduce using rule 36 (sentencia -> while .)
    LPAR            reduce using rule 36 (sentencia -> while .)
    MENOS           reduce using rule 36 (sentencia -> while .)
    AD              reduce using rule 36 (sentencia -> while .)
    VEC             reduce using rule 36 (sentencia -> while .)
    VECTOR          reduce using rule 36 (sentencia -> while .)
    MUT             reduce using rule 36 (sentencia -> while .)
    ANDSINGLE       reduce using rule 36 (sentencia -> while .)
    I64             reduce using rule 36 (sentencia -> while .)
    F64             reduce using rule 36 (sentencia -> while .)
    ENTERO          reduce using rule 36 (sentencia -> while .)
    DECIMAL         reduce using rule 36 (sentencia -> while .)
    CADENA          reduce using rule 36 (sentencia -> while .)
    BOOLEANO        reduce using rule 36 (sentencia -> while .)
    CARACTER        reduce using rule 36 (sentencia -> while .)
    LCOR            reduce using rule 36 (sentencia -> while .)
    MAS             reduce using rule 36 (sentencia -> while .)
    MULTIPLICACION  reduce using rule 36 (sentencia -> while .)
    DIVISION        reduce using rule 36 (sentencia -> while .)
    MODULO          reduce using rule 36 (sentencia -> while .)
    AND             reduce using rule 36 (sentencia -> while .)
    OR              reduce using rule 36 (sentencia -> while .)
    IGUALI          reduce using rule 36 (sentencia -> while .)
    DIF             reduce using rule 36 (sentencia -> while .)
    MAYOR           reduce using rule 36 (sentencia -> while .)
    MENOR           reduce using rule 36 (sentencia -> while .)
    MAYORI          reduce using rule 36 (sentencia -> while .)
    MENORI          reduce using rule 36 (sentencia -> while .)
    AS              reduce using rule 36 (sentencia -> while .)
    PCOMA           reduce using rule 36 (sentencia -> while .)
    COMA            reduce using rule 36 (sentencia -> while .)
    LLLAV           reduce using rule 36 (sentencia -> while .)
    RCOR            reduce using rule 36 (sentencia -> while .)
    RPAR            reduce using rule 36 (sentencia -> while .)
    ARROW2          reduce using rule 36 (sentencia -> while .)
    ORSINGLE        reduce using rule 36 (sentencia -> while .)
    PUNTO           reduce using rule 36 (sentencia -> while .)


state 93

    (37) sentencia -> for .

    RLLAV           reduce using rule 37 (sentencia -> for .)
    PRINT           reduce using rule 37 (sentencia -> for .)
    LET             reduce using rule 37 (sentencia -> for .)
    ID              reduce using rule 37 (sentencia -> for .)
    CONTINUE        reduce using rule 37 (sentencia -> for .)
    BREAK           reduce using rule 37 (sentencia -> for .)
    RETURN          reduce using rule 37 (sentencia -> for .)
    IF              reduce using rule 37 (sentencia -> for .)
    MATCH           reduce using rule 37 (sentencia -> for .)
    LOOP            reduce using rule 37 (sentencia -> for .)
    WHILE           reduce using rule 37 (sentencia -> for .)
    FOR             reduce using rule 37 (sentencia -> for .)
    LPAR            reduce using rule 37 (sentencia -> for .)
    MENOS           reduce using rule 37 (sentencia -> for .)
    AD              reduce using rule 37 (sentencia -> for .)
    VEC             reduce using rule 37 (sentencia -> for .)
    VECTOR          reduce using rule 37 (sentencia -> for .)
    MUT             reduce using rule 37 (sentencia -> for .)
    ANDSINGLE       reduce using rule 37 (sentencia -> for .)
    I64             reduce using rule 37 (sentencia -> for .)
    F64             reduce using rule 37 (sentencia -> for .)
    ENTERO          reduce using rule 37 (sentencia -> for .)
    DECIMAL         reduce using rule 37 (sentencia -> for .)
    CADENA          reduce using rule 37 (sentencia -> for .)
    BOOLEANO        reduce using rule 37 (sentencia -> for .)
    CARACTER        reduce using rule 37 (sentencia -> for .)
    LCOR            reduce using rule 37 (sentencia -> for .)
    MAS             reduce using rule 37 (sentencia -> for .)
    MULTIPLICACION  reduce using rule 37 (sentencia -> for .)
    DIVISION        reduce using rule 37 (sentencia -> for .)
    MODULO          reduce using rule 37 (sentencia -> for .)
    AND             reduce using rule 37 (sentencia -> for .)
    OR              reduce using rule 37 (sentencia -> for .)
    IGUALI          reduce using rule 37 (sentencia -> for .)
    DIF             reduce using rule 37 (sentencia -> for .)
    MAYOR           reduce using rule 37 (sentencia -> for .)
    MENOR           reduce using rule 37 (sentencia -> for .)
    MAYORI          reduce using rule 37 (sentencia -> for .)
    MENORI          reduce using rule 37 (sentencia -> for .)
    AS              reduce using rule 37 (sentencia -> for .)
    PCOMA           reduce using rule 37 (sentencia -> for .)
    COMA            reduce using rule 37 (sentencia -> for .)
    LLLAV           reduce using rule 37 (sentencia -> for .)
    RCOR            reduce using rule 37 (sentencia -> for .)
    RPAR            reduce using rule 37 (sentencia -> for .)
    ARROW2          reduce using rule 37 (sentencia -> for .)
    ORSINGLE        reduce using rule 37 (sentencia -> for .)
    PUNTO           reduce using rule 37 (sentencia -> for .)


state 94

    (62) transferencia -> CONTINUE .

    PCOMA           reduce using rule 62 (transferencia -> CONTINUE .)
    RLLAV           reduce using rule 62 (transferencia -> CONTINUE .)
    PRINT           reduce using rule 62 (transferencia -> CONTINUE .)
    LET             reduce using rule 62 (transferencia -> CONTINUE .)
    ID              reduce using rule 62 (transferencia -> CONTINUE .)
    CONTINUE        reduce using rule 62 (transferencia -> CONTINUE .)
    BREAK           reduce using rule 62 (transferencia -> CONTINUE .)
    RETURN          reduce using rule 62 (transferencia -> CONTINUE .)
    IF              reduce using rule 62 (transferencia -> CONTINUE .)
    MATCH           reduce using rule 62 (transferencia -> CONTINUE .)
    LOOP            reduce using rule 62 (transferencia -> CONTINUE .)
    WHILE           reduce using rule 62 (transferencia -> CONTINUE .)
    FOR             reduce using rule 62 (transferencia -> CONTINUE .)
    LPAR            reduce using rule 62 (transferencia -> CONTINUE .)
    MENOS           reduce using rule 62 (transferencia -> CONTINUE .)
    AD              reduce using rule 62 (transferencia -> CONTINUE .)
    VEC             reduce using rule 62 (transferencia -> CONTINUE .)
    VECTOR          reduce using rule 62 (transferencia -> CONTINUE .)
    MUT             reduce using rule 62 (transferencia -> CONTINUE .)
    ANDSINGLE       reduce using rule 62 (transferencia -> CONTINUE .)
    I64             reduce using rule 62 (transferencia -> CONTINUE .)
    F64             reduce using rule 62 (transferencia -> CONTINUE .)
    ENTERO          reduce using rule 62 (transferencia -> CONTINUE .)
    DECIMAL         reduce using rule 62 (transferencia -> CONTINUE .)
    CADENA          reduce using rule 62 (transferencia -> CONTINUE .)
    BOOLEANO        reduce using rule 62 (transferencia -> CONTINUE .)
    CARACTER        reduce using rule 62 (transferencia -> CONTINUE .)
    LCOR            reduce using rule 62 (transferencia -> CONTINUE .)
    COMA            reduce using rule 62 (transferencia -> CONTINUE .)


state 95

    (63) transferencia -> BREAK .
    (64) transferencia -> BREAK . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for AD resolved as shift
  ! shift/reduce conflict for VEC resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for MUT resolved as shift
  ! shift/reduce conflict for ANDSINGLE resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    PCOMA           reduce using rule 63 (transferencia -> BREAK .)
    RLLAV           reduce using rule 63 (transferencia -> BREAK .)
    PRINT           reduce using rule 63 (transferencia -> BREAK .)
    LET             reduce using rule 63 (transferencia -> BREAK .)
    CONTINUE        reduce using rule 63 (transferencia -> BREAK .)
    BREAK           reduce using rule 63 (transferencia -> BREAK .)
    RETURN          reduce using rule 63 (transferencia -> BREAK .)
    COMA            reduce using rule 63 (transferencia -> BREAK .)
    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

  ! ID              [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! IF              [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! MATCH           [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! LOOP            [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! WHILE           [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! FOR             [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! LPAR            [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! MENOS           [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! AD              [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! VEC             [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! VECTOR          [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! MUT             [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! ANDSINGLE       [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! I64             [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! F64             [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! ENTERO          [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! DECIMAL         [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! CADENA          [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! BOOLEANO        [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! CARACTER        [ reduce using rule 63 (transferencia -> BREAK .) ]
  ! LCOR            [ reduce using rule 63 (transferencia -> BREAK .) ]

    auxexp                         shift and go to state 163
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 96

    (65) transferencia -> RETURN .
    (66) transferencia -> RETURN . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for ID resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for AD resolved as shift
  ! shift/reduce conflict for VEC resolved as shift
  ! shift/reduce conflict for VECTOR resolved as shift
  ! shift/reduce conflict for MUT resolved as shift
  ! shift/reduce conflict for ANDSINGLE resolved as shift
  ! shift/reduce conflict for I64 resolved as shift
  ! shift/reduce conflict for F64 resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for DECIMAL resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for BOOLEANO resolved as shift
  ! shift/reduce conflict for CARACTER resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for MATCH resolved as shift
  ! shift/reduce conflict for LOOP resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
    PCOMA           reduce using rule 65 (transferencia -> RETURN .)
    RLLAV           reduce using rule 65 (transferencia -> RETURN .)
    PRINT           reduce using rule 65 (transferencia -> RETURN .)
    LET             reduce using rule 65 (transferencia -> RETURN .)
    CONTINUE        reduce using rule 65 (transferencia -> RETURN .)
    BREAK           reduce using rule 65 (transferencia -> RETURN .)
    RETURN          reduce using rule 65 (transferencia -> RETURN .)
    COMA            reduce using rule 65 (transferencia -> RETURN .)
    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

  ! ID              [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! IF              [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! MATCH           [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! LOOP            [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! WHILE           [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! FOR             [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! LPAR            [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! MENOS           [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! AD              [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! VEC             [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! VECTOR          [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! MUT             [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! ANDSINGLE       [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! I64             [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! F64             [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! ENTERO          [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! DECIMAL         [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! CADENA          [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! BOOLEANO        [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! CARACTER        [ reduce using rule 65 (transferencia -> RETURN .) ]
  ! LCOR            [ reduce using rule 65 (transferencia -> RETURN .) ]

    auxexp                         shift and go to state 165
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 97

    (38) if -> IF . exp statement else
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 166
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 98

    (98) auxexp -> exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

  ! shift/reduce conflict for MENOS resolved as shift
    PCOMA           reduce using rule 98 (auxexp -> exp .)
    RLLAV           reduce using rule 98 (auxexp -> exp .)
    PRINT           reduce using rule 98 (auxexp -> exp .)
    LET             reduce using rule 98 (auxexp -> exp .)
    ID              reduce using rule 98 (auxexp -> exp .)
    CONTINUE        reduce using rule 98 (auxexp -> exp .)
    BREAK           reduce using rule 98 (auxexp -> exp .)
    RETURN          reduce using rule 98 (auxexp -> exp .)
    IF              reduce using rule 98 (auxexp -> exp .)
    MATCH           reduce using rule 98 (auxexp -> exp .)
    LOOP            reduce using rule 98 (auxexp -> exp .)
    WHILE           reduce using rule 98 (auxexp -> exp .)
    FOR             reduce using rule 98 (auxexp -> exp .)
    LPAR            reduce using rule 98 (auxexp -> exp .)
    AD              reduce using rule 98 (auxexp -> exp .)
    VEC             reduce using rule 98 (auxexp -> exp .)
    VECTOR          reduce using rule 98 (auxexp -> exp .)
    MUT             reduce using rule 98 (auxexp -> exp .)
    ANDSINGLE       reduce using rule 98 (auxexp -> exp .)
    I64             reduce using rule 98 (auxexp -> exp .)
    F64             reduce using rule 98 (auxexp -> exp .)
    ENTERO          reduce using rule 98 (auxexp -> exp .)
    DECIMAL         reduce using rule 98 (auxexp -> exp .)
    CADENA          reduce using rule 98 (auxexp -> exp .)
    BOOLEANO        reduce using rule 98 (auxexp -> exp .)
    CARACTER        reduce using rule 98 (auxexp -> exp .)
    LCOR            reduce using rule 98 (auxexp -> exp .)
    COMA            reduce using rule 98 (auxexp -> exp .)
    RCOR            reduce using rule 98 (auxexp -> exp .)
    RPAR            reduce using rule 98 (auxexp -> exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180

  ! MENOS           [ reduce using rule 98 (auxexp -> exp .) ]


state 99

    (43) match -> MATCH . exp match_statement
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 181
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 100

    (57) loop -> LOOP . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 48

    statement                      shift and go to state 182

state 101

    (58) while -> WHILE . exp statement
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 183
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 102

    (59) for -> FOR . ID IN foriterative statement

    ID              shift and go to state 184


state 103

    (97) auxexp -> expstruct .

    PCOMA           reduce using rule 97 (auxexp -> expstruct .)
    RLLAV           reduce using rule 97 (auxexp -> expstruct .)
    PRINT           reduce using rule 97 (auxexp -> expstruct .)
    LET             reduce using rule 97 (auxexp -> expstruct .)
    ID              reduce using rule 97 (auxexp -> expstruct .)
    CONTINUE        reduce using rule 97 (auxexp -> expstruct .)
    BREAK           reduce using rule 97 (auxexp -> expstruct .)
    RETURN          reduce using rule 97 (auxexp -> expstruct .)
    IF              reduce using rule 97 (auxexp -> expstruct .)
    MATCH           reduce using rule 97 (auxexp -> expstruct .)
    LOOP            reduce using rule 97 (auxexp -> expstruct .)
    WHILE           reduce using rule 97 (auxexp -> expstruct .)
    FOR             reduce using rule 97 (auxexp -> expstruct .)
    LPAR            reduce using rule 97 (auxexp -> expstruct .)
    MENOS           reduce using rule 97 (auxexp -> expstruct .)
    AD              reduce using rule 97 (auxexp -> expstruct .)
    VEC             reduce using rule 97 (auxexp -> expstruct .)
    VECTOR          reduce using rule 97 (auxexp -> expstruct .)
    MUT             reduce using rule 97 (auxexp -> expstruct .)
    ANDSINGLE       reduce using rule 97 (auxexp -> expstruct .)
    I64             reduce using rule 97 (auxexp -> expstruct .)
    F64             reduce using rule 97 (auxexp -> expstruct .)
    ENTERO          reduce using rule 97 (auxexp -> expstruct .)
    DECIMAL         reduce using rule 97 (auxexp -> expstruct .)
    CADENA          reduce using rule 97 (auxexp -> expstruct .)
    BOOLEANO        reduce using rule 97 (auxexp -> expstruct .)
    CARACTER        reduce using rule 97 (auxexp -> expstruct .)
    LCOR            reduce using rule 97 (auxexp -> expstruct .)
    COMA            reduce using rule 97 (auxexp -> expstruct .)
    RCOR            reduce using rule 97 (auxexp -> expstruct .)
    RPAR            reduce using rule 97 (auxexp -> expstruct .)


state 104

    (131) expstruct -> lista_classtype . LLLAV lista_att RLLAV
    (132) expstruct -> lista_classtype . LLLAV RLLAV
    (133) expstruct -> lista_classtype . DPUNTOS DPUNTOS llamada
    (161) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

    LLLAV           shift and go to state 185
    DPUNTOS         shift and go to state 186


state 105

    (100) exp -> expmath .

    MAS             reduce using rule 100 (exp -> expmath .)
    MENOS           reduce using rule 100 (exp -> expmath .)
    MULTIPLICACION  reduce using rule 100 (exp -> expmath .)
    DIVISION        reduce using rule 100 (exp -> expmath .)
    MODULO          reduce using rule 100 (exp -> expmath .)
    AND             reduce using rule 100 (exp -> expmath .)
    OR              reduce using rule 100 (exp -> expmath .)
    IGUALI          reduce using rule 100 (exp -> expmath .)
    DIF             reduce using rule 100 (exp -> expmath .)
    MAYOR           reduce using rule 100 (exp -> expmath .)
    MENOR           reduce using rule 100 (exp -> expmath .)
    MAYORI          reduce using rule 100 (exp -> expmath .)
    MENORI          reduce using rule 100 (exp -> expmath .)
    AS              reduce using rule 100 (exp -> expmath .)
    PCOMA           reduce using rule 100 (exp -> expmath .)
    RLLAV           reduce using rule 100 (exp -> expmath .)
    PRINT           reduce using rule 100 (exp -> expmath .)
    LET             reduce using rule 100 (exp -> expmath .)
    ID              reduce using rule 100 (exp -> expmath .)
    CONTINUE        reduce using rule 100 (exp -> expmath .)
    BREAK           reduce using rule 100 (exp -> expmath .)
    RETURN          reduce using rule 100 (exp -> expmath .)
    IF              reduce using rule 100 (exp -> expmath .)
    MATCH           reduce using rule 100 (exp -> expmath .)
    LOOP            reduce using rule 100 (exp -> expmath .)
    WHILE           reduce using rule 100 (exp -> expmath .)
    FOR             reduce using rule 100 (exp -> expmath .)
    LPAR            reduce using rule 100 (exp -> expmath .)
    AD              reduce using rule 100 (exp -> expmath .)
    VEC             reduce using rule 100 (exp -> expmath .)
    VECTOR          reduce using rule 100 (exp -> expmath .)
    MUT             reduce using rule 100 (exp -> expmath .)
    ANDSINGLE       reduce using rule 100 (exp -> expmath .)
    I64             reduce using rule 100 (exp -> expmath .)
    F64             reduce using rule 100 (exp -> expmath .)
    ENTERO          reduce using rule 100 (exp -> expmath .)
    DECIMAL         reduce using rule 100 (exp -> expmath .)
    CADENA          reduce using rule 100 (exp -> expmath .)
    BOOLEANO        reduce using rule 100 (exp -> expmath .)
    CARACTER        reduce using rule 100 (exp -> expmath .)
    LCOR            reduce using rule 100 (exp -> expmath .)
    COMA            reduce using rule 100 (exp -> expmath .)
    LLLAV           reduce using rule 100 (exp -> expmath .)
    RCOR            reduce using rule 100 (exp -> expmath .)
    RPAR            reduce using rule 100 (exp -> expmath .)
    ARROW2          reduce using rule 100 (exp -> expmath .)
    ORSINGLE        reduce using rule 100 (exp -> expmath .)
    PUNTO           reduce using rule 100 (exp -> expmath .)


state 106

    (101) exp -> expop .

    MAS             reduce using rule 101 (exp -> expop .)
    MENOS           reduce using rule 101 (exp -> expop .)
    MULTIPLICACION  reduce using rule 101 (exp -> expop .)
    DIVISION        reduce using rule 101 (exp -> expop .)
    MODULO          reduce using rule 101 (exp -> expop .)
    AND             reduce using rule 101 (exp -> expop .)
    OR              reduce using rule 101 (exp -> expop .)
    IGUALI          reduce using rule 101 (exp -> expop .)
    DIF             reduce using rule 101 (exp -> expop .)
    MAYOR           reduce using rule 101 (exp -> expop .)
    MENOR           reduce using rule 101 (exp -> expop .)
    MAYORI          reduce using rule 101 (exp -> expop .)
    MENORI          reduce using rule 101 (exp -> expop .)
    AS              reduce using rule 101 (exp -> expop .)
    PCOMA           reduce using rule 101 (exp -> expop .)
    RLLAV           reduce using rule 101 (exp -> expop .)
    PRINT           reduce using rule 101 (exp -> expop .)
    LET             reduce using rule 101 (exp -> expop .)
    ID              reduce using rule 101 (exp -> expop .)
    CONTINUE        reduce using rule 101 (exp -> expop .)
    BREAK           reduce using rule 101 (exp -> expop .)
    RETURN          reduce using rule 101 (exp -> expop .)
    IF              reduce using rule 101 (exp -> expop .)
    MATCH           reduce using rule 101 (exp -> expop .)
    LOOP            reduce using rule 101 (exp -> expop .)
    WHILE           reduce using rule 101 (exp -> expop .)
    FOR             reduce using rule 101 (exp -> expop .)
    LPAR            reduce using rule 101 (exp -> expop .)
    AD              reduce using rule 101 (exp -> expop .)
    VEC             reduce using rule 101 (exp -> expop .)
    VECTOR          reduce using rule 101 (exp -> expop .)
    MUT             reduce using rule 101 (exp -> expop .)
    ANDSINGLE       reduce using rule 101 (exp -> expop .)
    I64             reduce using rule 101 (exp -> expop .)
    F64             reduce using rule 101 (exp -> expop .)
    ENTERO          reduce using rule 101 (exp -> expop .)
    DECIMAL         reduce using rule 101 (exp -> expop .)
    CADENA          reduce using rule 101 (exp -> expop .)
    BOOLEANO        reduce using rule 101 (exp -> expop .)
    CARACTER        reduce using rule 101 (exp -> expop .)
    LCOR            reduce using rule 101 (exp -> expop .)
    COMA            reduce using rule 101 (exp -> expop .)
    LLLAV           reduce using rule 101 (exp -> expop .)
    RCOR            reduce using rule 101 (exp -> expop .)
    RPAR            reduce using rule 101 (exp -> expop .)
    ARROW2          reduce using rule 101 (exp -> expop .)
    ORSINGLE        reduce using rule 101 (exp -> expop .)
    PUNTO           reduce using rule 101 (exp -> expop .)


state 107

    (102) exp -> exprel .

    MAS             reduce using rule 102 (exp -> exprel .)
    MENOS           reduce using rule 102 (exp -> exprel .)
    MULTIPLICACION  reduce using rule 102 (exp -> exprel .)
    DIVISION        reduce using rule 102 (exp -> exprel .)
    MODULO          reduce using rule 102 (exp -> exprel .)
    AND             reduce using rule 102 (exp -> exprel .)
    OR              reduce using rule 102 (exp -> exprel .)
    IGUALI          reduce using rule 102 (exp -> exprel .)
    DIF             reduce using rule 102 (exp -> exprel .)
    MAYOR           reduce using rule 102 (exp -> exprel .)
    MENOR           reduce using rule 102 (exp -> exprel .)
    MAYORI          reduce using rule 102 (exp -> exprel .)
    MENORI          reduce using rule 102 (exp -> exprel .)
    AS              reduce using rule 102 (exp -> exprel .)
    PCOMA           reduce using rule 102 (exp -> exprel .)
    RLLAV           reduce using rule 102 (exp -> exprel .)
    PRINT           reduce using rule 102 (exp -> exprel .)
    LET             reduce using rule 102 (exp -> exprel .)
    ID              reduce using rule 102 (exp -> exprel .)
    CONTINUE        reduce using rule 102 (exp -> exprel .)
    BREAK           reduce using rule 102 (exp -> exprel .)
    RETURN          reduce using rule 102 (exp -> exprel .)
    IF              reduce using rule 102 (exp -> exprel .)
    MATCH           reduce using rule 102 (exp -> exprel .)
    LOOP            reduce using rule 102 (exp -> exprel .)
    WHILE           reduce using rule 102 (exp -> exprel .)
    FOR             reduce using rule 102 (exp -> exprel .)
    LPAR            reduce using rule 102 (exp -> exprel .)
    AD              reduce using rule 102 (exp -> exprel .)
    VEC             reduce using rule 102 (exp -> exprel .)
    VECTOR          reduce using rule 102 (exp -> exprel .)
    MUT             reduce using rule 102 (exp -> exprel .)
    ANDSINGLE       reduce using rule 102 (exp -> exprel .)
    I64             reduce using rule 102 (exp -> exprel .)
    F64             reduce using rule 102 (exp -> exprel .)
    ENTERO          reduce using rule 102 (exp -> exprel .)
    DECIMAL         reduce using rule 102 (exp -> exprel .)
    CADENA          reduce using rule 102 (exp -> exprel .)
    BOOLEANO        reduce using rule 102 (exp -> exprel .)
    CARACTER        reduce using rule 102 (exp -> exprel .)
    LCOR            reduce using rule 102 (exp -> exprel .)
    COMA            reduce using rule 102 (exp -> exprel .)
    LLLAV           reduce using rule 102 (exp -> exprel .)
    RCOR            reduce using rule 102 (exp -> exprel .)
    RPAR            reduce using rule 102 (exp -> exprel .)
    ARROW2          reduce using rule 102 (exp -> exprel .)
    ORSINGLE        reduce using rule 102 (exp -> exprel .)
    PUNTO           reduce using rule 102 (exp -> exprel .)


state 108

    (103) exp -> exparr .

    MAS             reduce using rule 103 (exp -> exparr .)
    MENOS           reduce using rule 103 (exp -> exparr .)
    MULTIPLICACION  reduce using rule 103 (exp -> exparr .)
    DIVISION        reduce using rule 103 (exp -> exparr .)
    MODULO          reduce using rule 103 (exp -> exparr .)
    AND             reduce using rule 103 (exp -> exparr .)
    OR              reduce using rule 103 (exp -> exparr .)
    IGUALI          reduce using rule 103 (exp -> exparr .)
    DIF             reduce using rule 103 (exp -> exparr .)
    MAYOR           reduce using rule 103 (exp -> exparr .)
    MENOR           reduce using rule 103 (exp -> exparr .)
    MAYORI          reduce using rule 103 (exp -> exparr .)
    MENORI          reduce using rule 103 (exp -> exparr .)
    AS              reduce using rule 103 (exp -> exparr .)
    PCOMA           reduce using rule 103 (exp -> exparr .)
    RLLAV           reduce using rule 103 (exp -> exparr .)
    PRINT           reduce using rule 103 (exp -> exparr .)
    LET             reduce using rule 103 (exp -> exparr .)
    ID              reduce using rule 103 (exp -> exparr .)
    CONTINUE        reduce using rule 103 (exp -> exparr .)
    BREAK           reduce using rule 103 (exp -> exparr .)
    RETURN          reduce using rule 103 (exp -> exparr .)
    IF              reduce using rule 103 (exp -> exparr .)
    MATCH           reduce using rule 103 (exp -> exparr .)
    LOOP            reduce using rule 103 (exp -> exparr .)
    WHILE           reduce using rule 103 (exp -> exparr .)
    FOR             reduce using rule 103 (exp -> exparr .)
    LPAR            reduce using rule 103 (exp -> exparr .)
    AD              reduce using rule 103 (exp -> exparr .)
    VEC             reduce using rule 103 (exp -> exparr .)
    VECTOR          reduce using rule 103 (exp -> exparr .)
    MUT             reduce using rule 103 (exp -> exparr .)
    ANDSINGLE       reduce using rule 103 (exp -> exparr .)
    I64             reduce using rule 103 (exp -> exparr .)
    F64             reduce using rule 103 (exp -> exparr .)
    ENTERO          reduce using rule 103 (exp -> exparr .)
    DECIMAL         reduce using rule 103 (exp -> exparr .)
    CADENA          reduce using rule 103 (exp -> exparr .)
    BOOLEANO        reduce using rule 103 (exp -> exparr .)
    CARACTER        reduce using rule 103 (exp -> exparr .)
    LCOR            reduce using rule 103 (exp -> exparr .)
    COMA            reduce using rule 103 (exp -> exparr .)
    LLLAV           reduce using rule 103 (exp -> exparr .)
    RCOR            reduce using rule 103 (exp -> exparr .)
    RPAR            reduce using rule 103 (exp -> exparr .)
    ARROW2          reduce using rule 103 (exp -> exparr .)
    ORSINGLE        reduce using rule 103 (exp -> exparr .)
    PUNTO           reduce using rule 103 (exp -> exparr .)


state 109

    (104) exp -> expvec .

    MAS             reduce using rule 104 (exp -> expvec .)
    MENOS           reduce using rule 104 (exp -> expvec .)
    MULTIPLICACION  reduce using rule 104 (exp -> expvec .)
    DIVISION        reduce using rule 104 (exp -> expvec .)
    MODULO          reduce using rule 104 (exp -> expvec .)
    AND             reduce using rule 104 (exp -> expvec .)
    OR              reduce using rule 104 (exp -> expvec .)
    IGUALI          reduce using rule 104 (exp -> expvec .)
    DIF             reduce using rule 104 (exp -> expvec .)
    MAYOR           reduce using rule 104 (exp -> expvec .)
    MENOR           reduce using rule 104 (exp -> expvec .)
    MAYORI          reduce using rule 104 (exp -> expvec .)
    MENORI          reduce using rule 104 (exp -> expvec .)
    AS              reduce using rule 104 (exp -> expvec .)
    PCOMA           reduce using rule 104 (exp -> expvec .)
    RLLAV           reduce using rule 104 (exp -> expvec .)
    PRINT           reduce using rule 104 (exp -> expvec .)
    LET             reduce using rule 104 (exp -> expvec .)
    ID              reduce using rule 104 (exp -> expvec .)
    CONTINUE        reduce using rule 104 (exp -> expvec .)
    BREAK           reduce using rule 104 (exp -> expvec .)
    RETURN          reduce using rule 104 (exp -> expvec .)
    IF              reduce using rule 104 (exp -> expvec .)
    MATCH           reduce using rule 104 (exp -> expvec .)
    LOOP            reduce using rule 104 (exp -> expvec .)
    WHILE           reduce using rule 104 (exp -> expvec .)
    FOR             reduce using rule 104 (exp -> expvec .)
    LPAR            reduce using rule 104 (exp -> expvec .)
    AD              reduce using rule 104 (exp -> expvec .)
    VEC             reduce using rule 104 (exp -> expvec .)
    VECTOR          reduce using rule 104 (exp -> expvec .)
    MUT             reduce using rule 104 (exp -> expvec .)
    ANDSINGLE       reduce using rule 104 (exp -> expvec .)
    I64             reduce using rule 104 (exp -> expvec .)
    F64             reduce using rule 104 (exp -> expvec .)
    ENTERO          reduce using rule 104 (exp -> expvec .)
    DECIMAL         reduce using rule 104 (exp -> expvec .)
    CADENA          reduce using rule 104 (exp -> expvec .)
    BOOLEANO        reduce using rule 104 (exp -> expvec .)
    CARACTER        reduce using rule 104 (exp -> expvec .)
    LCOR            reduce using rule 104 (exp -> expvec .)
    COMA            reduce using rule 104 (exp -> expvec .)
    LLLAV           reduce using rule 104 (exp -> expvec .)
    RCOR            reduce using rule 104 (exp -> expvec .)
    RPAR            reduce using rule 104 (exp -> expvec .)
    ARROW2          reduce using rule 104 (exp -> expvec .)
    ORSINGLE        reduce using rule 104 (exp -> expvec .)
    PUNTO           reduce using rule 104 (exp -> expvec .)


state 110

    (105) exp -> exparam .

    MAS             reduce using rule 105 (exp -> exparam .)
    MENOS           reduce using rule 105 (exp -> exparam .)
    MULTIPLICACION  reduce using rule 105 (exp -> exparam .)
    DIVISION        reduce using rule 105 (exp -> exparam .)
    MODULO          reduce using rule 105 (exp -> exparam .)
    AND             reduce using rule 105 (exp -> exparam .)
    OR              reduce using rule 105 (exp -> exparam .)
    IGUALI          reduce using rule 105 (exp -> exparam .)
    DIF             reduce using rule 105 (exp -> exparam .)
    MAYOR           reduce using rule 105 (exp -> exparam .)
    MENOR           reduce using rule 105 (exp -> exparam .)
    MAYORI          reduce using rule 105 (exp -> exparam .)
    MENORI          reduce using rule 105 (exp -> exparam .)
    AS              reduce using rule 105 (exp -> exparam .)
    PCOMA           reduce using rule 105 (exp -> exparam .)
    RLLAV           reduce using rule 105 (exp -> exparam .)
    PRINT           reduce using rule 105 (exp -> exparam .)
    LET             reduce using rule 105 (exp -> exparam .)
    ID              reduce using rule 105 (exp -> exparam .)
    CONTINUE        reduce using rule 105 (exp -> exparam .)
    BREAK           reduce using rule 105 (exp -> exparam .)
    RETURN          reduce using rule 105 (exp -> exparam .)
    IF              reduce using rule 105 (exp -> exparam .)
    MATCH           reduce using rule 105 (exp -> exparam .)
    LOOP            reduce using rule 105 (exp -> exparam .)
    WHILE           reduce using rule 105 (exp -> exparam .)
    FOR             reduce using rule 105 (exp -> exparam .)
    LPAR            reduce using rule 105 (exp -> exparam .)
    AD              reduce using rule 105 (exp -> exparam .)
    VEC             reduce using rule 105 (exp -> exparam .)
    VECTOR          reduce using rule 105 (exp -> exparam .)
    MUT             reduce using rule 105 (exp -> exparam .)
    ANDSINGLE       reduce using rule 105 (exp -> exparam .)
    I64             reduce using rule 105 (exp -> exparam .)
    F64             reduce using rule 105 (exp -> exparam .)
    ENTERO          reduce using rule 105 (exp -> exparam .)
    DECIMAL         reduce using rule 105 (exp -> exparam .)
    CADENA          reduce using rule 105 (exp -> exparam .)
    BOOLEANO        reduce using rule 105 (exp -> exparam .)
    CARACTER        reduce using rule 105 (exp -> exparam .)
    LCOR            reduce using rule 105 (exp -> exparam .)
    COMA            reduce using rule 105 (exp -> exparam .)
    LLLAV           reduce using rule 105 (exp -> exparam .)
    RCOR            reduce using rule 105 (exp -> exparam .)
    RPAR            reduce using rule 105 (exp -> exparam .)
    ARROW2          reduce using rule 105 (exp -> exparam .)
    ORSINGLE        reduce using rule 105 (exp -> exparam .)
    PUNTO           reduce using rule 105 (exp -> exparam .)


state 111

    (106) exp -> exppow .

    MAS             reduce using rule 106 (exp -> exppow .)
    MENOS           reduce using rule 106 (exp -> exppow .)
    MULTIPLICACION  reduce using rule 106 (exp -> exppow .)
    DIVISION        reduce using rule 106 (exp -> exppow .)
    MODULO          reduce using rule 106 (exp -> exppow .)
    AND             reduce using rule 106 (exp -> exppow .)
    OR              reduce using rule 106 (exp -> exppow .)
    IGUALI          reduce using rule 106 (exp -> exppow .)
    DIF             reduce using rule 106 (exp -> exppow .)
    MAYOR           reduce using rule 106 (exp -> exppow .)
    MENOR           reduce using rule 106 (exp -> exppow .)
    MAYORI          reduce using rule 106 (exp -> exppow .)
    MENORI          reduce using rule 106 (exp -> exppow .)
    AS              reduce using rule 106 (exp -> exppow .)
    PCOMA           reduce using rule 106 (exp -> exppow .)
    RLLAV           reduce using rule 106 (exp -> exppow .)
    PRINT           reduce using rule 106 (exp -> exppow .)
    LET             reduce using rule 106 (exp -> exppow .)
    ID              reduce using rule 106 (exp -> exppow .)
    CONTINUE        reduce using rule 106 (exp -> exppow .)
    BREAK           reduce using rule 106 (exp -> exppow .)
    RETURN          reduce using rule 106 (exp -> exppow .)
    IF              reduce using rule 106 (exp -> exppow .)
    MATCH           reduce using rule 106 (exp -> exppow .)
    LOOP            reduce using rule 106 (exp -> exppow .)
    WHILE           reduce using rule 106 (exp -> exppow .)
    FOR             reduce using rule 106 (exp -> exppow .)
    LPAR            reduce using rule 106 (exp -> exppow .)
    AD              reduce using rule 106 (exp -> exppow .)
    VEC             reduce using rule 106 (exp -> exppow .)
    VECTOR          reduce using rule 106 (exp -> exppow .)
    MUT             reduce using rule 106 (exp -> exppow .)
    ANDSINGLE       reduce using rule 106 (exp -> exppow .)
    I64             reduce using rule 106 (exp -> exppow .)
    F64             reduce using rule 106 (exp -> exppow .)
    ENTERO          reduce using rule 106 (exp -> exppow .)
    DECIMAL         reduce using rule 106 (exp -> exppow .)
    CADENA          reduce using rule 106 (exp -> exppow .)
    BOOLEANO        reduce using rule 106 (exp -> exppow .)
    CARACTER        reduce using rule 106 (exp -> exppow .)
    LCOR            reduce using rule 106 (exp -> exppow .)
    COMA            reduce using rule 106 (exp -> exppow .)
    LLLAV           reduce using rule 106 (exp -> exppow .)
    RCOR            reduce using rule 106 (exp -> exppow .)
    RPAR            reduce using rule 106 (exp -> exppow .)
    ARROW2          reduce using rule 106 (exp -> exppow .)
    ORSINGLE        reduce using rule 106 (exp -> exppow .)
    PUNTO           reduce using rule 106 (exp -> exppow .)


state 112

    (107) exp -> expcast .

    MAS             reduce using rule 107 (exp -> expcast .)
    MENOS           reduce using rule 107 (exp -> expcast .)
    MULTIPLICACION  reduce using rule 107 (exp -> expcast .)
    DIVISION        reduce using rule 107 (exp -> expcast .)
    MODULO          reduce using rule 107 (exp -> expcast .)
    AND             reduce using rule 107 (exp -> expcast .)
    OR              reduce using rule 107 (exp -> expcast .)
    IGUALI          reduce using rule 107 (exp -> expcast .)
    DIF             reduce using rule 107 (exp -> expcast .)
    MAYOR           reduce using rule 107 (exp -> expcast .)
    MENOR           reduce using rule 107 (exp -> expcast .)
    MAYORI          reduce using rule 107 (exp -> expcast .)
    MENORI          reduce using rule 107 (exp -> expcast .)
    AS              reduce using rule 107 (exp -> expcast .)
    PCOMA           reduce using rule 107 (exp -> expcast .)
    RLLAV           reduce using rule 107 (exp -> expcast .)
    PRINT           reduce using rule 107 (exp -> expcast .)
    LET             reduce using rule 107 (exp -> expcast .)
    ID              reduce using rule 107 (exp -> expcast .)
    CONTINUE        reduce using rule 107 (exp -> expcast .)
    BREAK           reduce using rule 107 (exp -> expcast .)
    RETURN          reduce using rule 107 (exp -> expcast .)
    IF              reduce using rule 107 (exp -> expcast .)
    MATCH           reduce using rule 107 (exp -> expcast .)
    LOOP            reduce using rule 107 (exp -> expcast .)
    WHILE           reduce using rule 107 (exp -> expcast .)
    FOR             reduce using rule 107 (exp -> expcast .)
    LPAR            reduce using rule 107 (exp -> expcast .)
    AD              reduce using rule 107 (exp -> expcast .)
    VEC             reduce using rule 107 (exp -> expcast .)
    VECTOR          reduce using rule 107 (exp -> expcast .)
    MUT             reduce using rule 107 (exp -> expcast .)
    ANDSINGLE       reduce using rule 107 (exp -> expcast .)
    I64             reduce using rule 107 (exp -> expcast .)
    F64             reduce using rule 107 (exp -> expcast .)
    ENTERO          reduce using rule 107 (exp -> expcast .)
    DECIMAL         reduce using rule 107 (exp -> expcast .)
    CADENA          reduce using rule 107 (exp -> expcast .)
    BOOLEANO        reduce using rule 107 (exp -> expcast .)
    CARACTER        reduce using rule 107 (exp -> expcast .)
    LCOR            reduce using rule 107 (exp -> expcast .)
    COMA            reduce using rule 107 (exp -> expcast .)
    LLLAV           reduce using rule 107 (exp -> expcast .)
    RCOR            reduce using rule 107 (exp -> expcast .)
    RPAR            reduce using rule 107 (exp -> expcast .)
    ARROW2          reduce using rule 107 (exp -> expcast .)
    ORSINGLE        reduce using rule 107 (exp -> expcast .)
    PUNTO           reduce using rule 107 (exp -> expcast .)


state 113

    (108) exp -> lista_acc .
    (83) lista_acc -> lista_acc . PUNTO ID
    (84) lista_acc -> lista_acc . PUNTO exp_native

  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 108 (exp -> lista_acc .)
    MENOS           reduce using rule 108 (exp -> lista_acc .)
    MULTIPLICACION  reduce using rule 108 (exp -> lista_acc .)
    DIVISION        reduce using rule 108 (exp -> lista_acc .)
    MODULO          reduce using rule 108 (exp -> lista_acc .)
    AND             reduce using rule 108 (exp -> lista_acc .)
    OR              reduce using rule 108 (exp -> lista_acc .)
    IGUALI          reduce using rule 108 (exp -> lista_acc .)
    DIF             reduce using rule 108 (exp -> lista_acc .)
    MAYOR           reduce using rule 108 (exp -> lista_acc .)
    MENOR           reduce using rule 108 (exp -> lista_acc .)
    MAYORI          reduce using rule 108 (exp -> lista_acc .)
    MENORI          reduce using rule 108 (exp -> lista_acc .)
    AS              reduce using rule 108 (exp -> lista_acc .)
    PCOMA           reduce using rule 108 (exp -> lista_acc .)
    RLLAV           reduce using rule 108 (exp -> lista_acc .)
    PRINT           reduce using rule 108 (exp -> lista_acc .)
    LET             reduce using rule 108 (exp -> lista_acc .)
    ID              reduce using rule 108 (exp -> lista_acc .)
    CONTINUE        reduce using rule 108 (exp -> lista_acc .)
    BREAK           reduce using rule 108 (exp -> lista_acc .)
    RETURN          reduce using rule 108 (exp -> lista_acc .)
    IF              reduce using rule 108 (exp -> lista_acc .)
    MATCH           reduce using rule 108 (exp -> lista_acc .)
    LOOP            reduce using rule 108 (exp -> lista_acc .)
    WHILE           reduce using rule 108 (exp -> lista_acc .)
    FOR             reduce using rule 108 (exp -> lista_acc .)
    LPAR            reduce using rule 108 (exp -> lista_acc .)
    AD              reduce using rule 108 (exp -> lista_acc .)
    VEC             reduce using rule 108 (exp -> lista_acc .)
    VECTOR          reduce using rule 108 (exp -> lista_acc .)
    MUT             reduce using rule 108 (exp -> lista_acc .)
    ANDSINGLE       reduce using rule 108 (exp -> lista_acc .)
    I64             reduce using rule 108 (exp -> lista_acc .)
    F64             reduce using rule 108 (exp -> lista_acc .)
    ENTERO          reduce using rule 108 (exp -> lista_acc .)
    DECIMAL         reduce using rule 108 (exp -> lista_acc .)
    CADENA          reduce using rule 108 (exp -> lista_acc .)
    BOOLEANO        reduce using rule 108 (exp -> lista_acc .)
    CARACTER        reduce using rule 108 (exp -> lista_acc .)
    LCOR            reduce using rule 108 (exp -> lista_acc .)
    COMA            reduce using rule 108 (exp -> lista_acc .)
    LLLAV           reduce using rule 108 (exp -> lista_acc .)
    RCOR            reduce using rule 108 (exp -> lista_acc .)
    RPAR            reduce using rule 108 (exp -> lista_acc .)
    ARROW2          reduce using rule 108 (exp -> lista_acc .)
    ORSINGLE        reduce using rule 108 (exp -> lista_acc .)
    PUNTO           shift and go to state 187

  ! PUNTO           [ reduce using rule 108 (exp -> lista_acc .) ]


state 114

    (111) exp -> valores .
    (112) exp -> valores . PUNTO exp_native

  ! shift/reduce conflict for PUNTO resolved as shift
    MAS             reduce using rule 111 (exp -> valores .)
    MENOS           reduce using rule 111 (exp -> valores .)
    MULTIPLICACION  reduce using rule 111 (exp -> valores .)
    DIVISION        reduce using rule 111 (exp -> valores .)
    MODULO          reduce using rule 111 (exp -> valores .)
    AND             reduce using rule 111 (exp -> valores .)
    OR              reduce using rule 111 (exp -> valores .)
    IGUALI          reduce using rule 111 (exp -> valores .)
    DIF             reduce using rule 111 (exp -> valores .)
    MAYOR           reduce using rule 111 (exp -> valores .)
    MENOR           reduce using rule 111 (exp -> valores .)
    MAYORI          reduce using rule 111 (exp -> valores .)
    MENORI          reduce using rule 111 (exp -> valores .)
    AS              reduce using rule 111 (exp -> valores .)
    PCOMA           reduce using rule 111 (exp -> valores .)
    RLLAV           reduce using rule 111 (exp -> valores .)
    PRINT           reduce using rule 111 (exp -> valores .)
    LET             reduce using rule 111 (exp -> valores .)
    ID              reduce using rule 111 (exp -> valores .)
    CONTINUE        reduce using rule 111 (exp -> valores .)
    BREAK           reduce using rule 111 (exp -> valores .)
    RETURN          reduce using rule 111 (exp -> valores .)
    IF              reduce using rule 111 (exp -> valores .)
    MATCH           reduce using rule 111 (exp -> valores .)
    LOOP            reduce using rule 111 (exp -> valores .)
    WHILE           reduce using rule 111 (exp -> valores .)
    FOR             reduce using rule 111 (exp -> valores .)
    LPAR            reduce using rule 111 (exp -> valores .)
    AD              reduce using rule 111 (exp -> valores .)
    VEC             reduce using rule 111 (exp -> valores .)
    VECTOR          reduce using rule 111 (exp -> valores .)
    MUT             reduce using rule 111 (exp -> valores .)
    ANDSINGLE       reduce using rule 111 (exp -> valores .)
    I64             reduce using rule 111 (exp -> valores .)
    F64             reduce using rule 111 (exp -> valores .)
    ENTERO          reduce using rule 111 (exp -> valores .)
    DECIMAL         reduce using rule 111 (exp -> valores .)
    CADENA          reduce using rule 111 (exp -> valores .)
    BOOLEANO        reduce using rule 111 (exp -> valores .)
    CARACTER        reduce using rule 111 (exp -> valores .)
    LCOR            reduce using rule 111 (exp -> valores .)
    COMA            reduce using rule 111 (exp -> valores .)
    LLLAV           reduce using rule 111 (exp -> valores .)
    RCOR            reduce using rule 111 (exp -> valores .)
    RPAR            reduce using rule 111 (exp -> valores .)
    ARROW2          reduce using rule 111 (exp -> valores .)
    ORSINGLE        reduce using rule 111 (exp -> valores .)
    PUNTO           shift and go to state 188

  ! PUNTO           [ reduce using rule 111 (exp -> valores .) ]


state 115

    (118) expmath -> MENOS . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 189
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 116

    (139) exparr -> newarray .

    MAS             reduce using rule 139 (exparr -> newarray .)
    MENOS           reduce using rule 139 (exparr -> newarray .)
    MULTIPLICACION  reduce using rule 139 (exparr -> newarray .)
    DIVISION        reduce using rule 139 (exparr -> newarray .)
    MODULO          reduce using rule 139 (exparr -> newarray .)
    AND             reduce using rule 139 (exparr -> newarray .)
    OR              reduce using rule 139 (exparr -> newarray .)
    IGUALI          reduce using rule 139 (exparr -> newarray .)
    DIF             reduce using rule 139 (exparr -> newarray .)
    MAYOR           reduce using rule 139 (exparr -> newarray .)
    MENOR           reduce using rule 139 (exparr -> newarray .)
    MAYORI          reduce using rule 139 (exparr -> newarray .)
    MENORI          reduce using rule 139 (exparr -> newarray .)
    AS              reduce using rule 139 (exparr -> newarray .)
    PCOMA           reduce using rule 139 (exparr -> newarray .)
    RLLAV           reduce using rule 139 (exparr -> newarray .)
    PRINT           reduce using rule 139 (exparr -> newarray .)
    LET             reduce using rule 139 (exparr -> newarray .)
    ID              reduce using rule 139 (exparr -> newarray .)
    CONTINUE        reduce using rule 139 (exparr -> newarray .)
    BREAK           reduce using rule 139 (exparr -> newarray .)
    RETURN          reduce using rule 139 (exparr -> newarray .)
    IF              reduce using rule 139 (exparr -> newarray .)
    MATCH           reduce using rule 139 (exparr -> newarray .)
    LOOP            reduce using rule 139 (exparr -> newarray .)
    WHILE           reduce using rule 139 (exparr -> newarray .)
    FOR             reduce using rule 139 (exparr -> newarray .)
    LPAR            reduce using rule 139 (exparr -> newarray .)
    AD              reduce using rule 139 (exparr -> newarray .)
    VEC             reduce using rule 139 (exparr -> newarray .)
    VECTOR          reduce using rule 139 (exparr -> newarray .)
    MUT             reduce using rule 139 (exparr -> newarray .)
    ANDSINGLE       reduce using rule 139 (exparr -> newarray .)
    I64             reduce using rule 139 (exparr -> newarray .)
    F64             reduce using rule 139 (exparr -> newarray .)
    ENTERO          reduce using rule 139 (exparr -> newarray .)
    DECIMAL         reduce using rule 139 (exparr -> newarray .)
    CADENA          reduce using rule 139 (exparr -> newarray .)
    BOOLEANO        reduce using rule 139 (exparr -> newarray .)
    CARACTER        reduce using rule 139 (exparr -> newarray .)
    LCOR            reduce using rule 139 (exparr -> newarray .)
    COMA            reduce using rule 139 (exparr -> newarray .)
    LLLAV           reduce using rule 139 (exparr -> newarray .)
    RCOR            reduce using rule 139 (exparr -> newarray .)
    RPAR            reduce using rule 139 (exparr -> newarray .)
    ARROW2          reduce using rule 139 (exparr -> newarray .)
    ORSINGLE        reduce using rule 139 (exparr -> newarray .)
    PUNTO           reduce using rule 139 (exparr -> newarray .)


state 117

    (140) expvec -> VEC . AD newarray

    AD              shift and go to state 190


state 118

    (141) expvec -> VECTOR . DPUNTOS DPUNTOS exp_natarr

    DPUNTOS         shift and go to state 191


state 119

    (137) exparam -> ANDSINGLE . MUT ID

    MUT             shift and go to state 192


state 120

    (119) exppow -> I64 . DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 193


state 121

    (120) exppow -> F64 . DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 194


state 122

    (144) valores -> ENTERO .

    PUNTO           reduce using rule 144 (valores -> ENTERO .)
    MAS             reduce using rule 144 (valores -> ENTERO .)
    MENOS           reduce using rule 144 (valores -> ENTERO .)
    MULTIPLICACION  reduce using rule 144 (valores -> ENTERO .)
    DIVISION        reduce using rule 144 (valores -> ENTERO .)
    MODULO          reduce using rule 144 (valores -> ENTERO .)
    AND             reduce using rule 144 (valores -> ENTERO .)
    OR              reduce using rule 144 (valores -> ENTERO .)
    IGUALI          reduce using rule 144 (valores -> ENTERO .)
    DIF             reduce using rule 144 (valores -> ENTERO .)
    MAYOR           reduce using rule 144 (valores -> ENTERO .)
    MENOR           reduce using rule 144 (valores -> ENTERO .)
    MAYORI          reduce using rule 144 (valores -> ENTERO .)
    MENORI          reduce using rule 144 (valores -> ENTERO .)
    AS              reduce using rule 144 (valores -> ENTERO .)
    PCOMA           reduce using rule 144 (valores -> ENTERO .)
    RLLAV           reduce using rule 144 (valores -> ENTERO .)
    PRINT           reduce using rule 144 (valores -> ENTERO .)
    LET             reduce using rule 144 (valores -> ENTERO .)
    ID              reduce using rule 144 (valores -> ENTERO .)
    CONTINUE        reduce using rule 144 (valores -> ENTERO .)
    BREAK           reduce using rule 144 (valores -> ENTERO .)
    RETURN          reduce using rule 144 (valores -> ENTERO .)
    IF              reduce using rule 144 (valores -> ENTERO .)
    MATCH           reduce using rule 144 (valores -> ENTERO .)
    LOOP            reduce using rule 144 (valores -> ENTERO .)
    WHILE           reduce using rule 144 (valores -> ENTERO .)
    FOR             reduce using rule 144 (valores -> ENTERO .)
    LPAR            reduce using rule 144 (valores -> ENTERO .)
    AD              reduce using rule 144 (valores -> ENTERO .)
    VEC             reduce using rule 144 (valores -> ENTERO .)
    VECTOR          reduce using rule 144 (valores -> ENTERO .)
    MUT             reduce using rule 144 (valores -> ENTERO .)
    ANDSINGLE       reduce using rule 144 (valores -> ENTERO .)
    I64             reduce using rule 144 (valores -> ENTERO .)
    F64             reduce using rule 144 (valores -> ENTERO .)
    ENTERO          reduce using rule 144 (valores -> ENTERO .)
    DECIMAL         reduce using rule 144 (valores -> ENTERO .)
    CADENA          reduce using rule 144 (valores -> ENTERO .)
    BOOLEANO        reduce using rule 144 (valores -> ENTERO .)
    CARACTER        reduce using rule 144 (valores -> ENTERO .)
    LCOR            reduce using rule 144 (valores -> ENTERO .)
    COMA            reduce using rule 144 (valores -> ENTERO .)
    LLLAV           reduce using rule 144 (valores -> ENTERO .)
    RCOR            reduce using rule 144 (valores -> ENTERO .)
    RPAR            reduce using rule 144 (valores -> ENTERO .)
    ARROW2          reduce using rule 144 (valores -> ENTERO .)
    ORSINGLE        reduce using rule 144 (valores -> ENTERO .)


state 123

    (145) valores -> DECIMAL .

    PUNTO           reduce using rule 145 (valores -> DECIMAL .)
    MAS             reduce using rule 145 (valores -> DECIMAL .)
    MENOS           reduce using rule 145 (valores -> DECIMAL .)
    MULTIPLICACION  reduce using rule 145 (valores -> DECIMAL .)
    DIVISION        reduce using rule 145 (valores -> DECIMAL .)
    MODULO          reduce using rule 145 (valores -> DECIMAL .)
    AND             reduce using rule 145 (valores -> DECIMAL .)
    OR              reduce using rule 145 (valores -> DECIMAL .)
    IGUALI          reduce using rule 145 (valores -> DECIMAL .)
    DIF             reduce using rule 145 (valores -> DECIMAL .)
    MAYOR           reduce using rule 145 (valores -> DECIMAL .)
    MENOR           reduce using rule 145 (valores -> DECIMAL .)
    MAYORI          reduce using rule 145 (valores -> DECIMAL .)
    MENORI          reduce using rule 145 (valores -> DECIMAL .)
    AS              reduce using rule 145 (valores -> DECIMAL .)
    PCOMA           reduce using rule 145 (valores -> DECIMAL .)
    RLLAV           reduce using rule 145 (valores -> DECIMAL .)
    PRINT           reduce using rule 145 (valores -> DECIMAL .)
    LET             reduce using rule 145 (valores -> DECIMAL .)
    ID              reduce using rule 145 (valores -> DECIMAL .)
    CONTINUE        reduce using rule 145 (valores -> DECIMAL .)
    BREAK           reduce using rule 145 (valores -> DECIMAL .)
    RETURN          reduce using rule 145 (valores -> DECIMAL .)
    IF              reduce using rule 145 (valores -> DECIMAL .)
    MATCH           reduce using rule 145 (valores -> DECIMAL .)
    LOOP            reduce using rule 145 (valores -> DECIMAL .)
    WHILE           reduce using rule 145 (valores -> DECIMAL .)
    FOR             reduce using rule 145 (valores -> DECIMAL .)
    LPAR            reduce using rule 145 (valores -> DECIMAL .)
    AD              reduce using rule 145 (valores -> DECIMAL .)
    VEC             reduce using rule 145 (valores -> DECIMAL .)
    VECTOR          reduce using rule 145 (valores -> DECIMAL .)
    MUT             reduce using rule 145 (valores -> DECIMAL .)
    ANDSINGLE       reduce using rule 145 (valores -> DECIMAL .)
    I64             reduce using rule 145 (valores -> DECIMAL .)
    F64             reduce using rule 145 (valores -> DECIMAL .)
    ENTERO          reduce using rule 145 (valores -> DECIMAL .)
    DECIMAL         reduce using rule 145 (valores -> DECIMAL .)
    CADENA          reduce using rule 145 (valores -> DECIMAL .)
    BOOLEANO        reduce using rule 145 (valores -> DECIMAL .)
    CARACTER        reduce using rule 145 (valores -> DECIMAL .)
    LCOR            reduce using rule 145 (valores -> DECIMAL .)
    COMA            reduce using rule 145 (valores -> DECIMAL .)
    LLLAV           reduce using rule 145 (valores -> DECIMAL .)
    RCOR            reduce using rule 145 (valores -> DECIMAL .)
    RPAR            reduce using rule 145 (valores -> DECIMAL .)
    ARROW2          reduce using rule 145 (valores -> DECIMAL .)
    ORSINGLE        reduce using rule 145 (valores -> DECIMAL .)


state 124

    (146) valores -> CADENA .

    PUNTO           reduce using rule 146 (valores -> CADENA .)
    MAS             reduce using rule 146 (valores -> CADENA .)
    MENOS           reduce using rule 146 (valores -> CADENA .)
    MULTIPLICACION  reduce using rule 146 (valores -> CADENA .)
    DIVISION        reduce using rule 146 (valores -> CADENA .)
    MODULO          reduce using rule 146 (valores -> CADENA .)
    AND             reduce using rule 146 (valores -> CADENA .)
    OR              reduce using rule 146 (valores -> CADENA .)
    IGUALI          reduce using rule 146 (valores -> CADENA .)
    DIF             reduce using rule 146 (valores -> CADENA .)
    MAYOR           reduce using rule 146 (valores -> CADENA .)
    MENOR           reduce using rule 146 (valores -> CADENA .)
    MAYORI          reduce using rule 146 (valores -> CADENA .)
    MENORI          reduce using rule 146 (valores -> CADENA .)
    AS              reduce using rule 146 (valores -> CADENA .)
    PCOMA           reduce using rule 146 (valores -> CADENA .)
    RLLAV           reduce using rule 146 (valores -> CADENA .)
    PRINT           reduce using rule 146 (valores -> CADENA .)
    LET             reduce using rule 146 (valores -> CADENA .)
    ID              reduce using rule 146 (valores -> CADENA .)
    CONTINUE        reduce using rule 146 (valores -> CADENA .)
    BREAK           reduce using rule 146 (valores -> CADENA .)
    RETURN          reduce using rule 146 (valores -> CADENA .)
    IF              reduce using rule 146 (valores -> CADENA .)
    MATCH           reduce using rule 146 (valores -> CADENA .)
    LOOP            reduce using rule 146 (valores -> CADENA .)
    WHILE           reduce using rule 146 (valores -> CADENA .)
    FOR             reduce using rule 146 (valores -> CADENA .)
    LPAR            reduce using rule 146 (valores -> CADENA .)
    AD              reduce using rule 146 (valores -> CADENA .)
    VEC             reduce using rule 146 (valores -> CADENA .)
    VECTOR          reduce using rule 146 (valores -> CADENA .)
    MUT             reduce using rule 146 (valores -> CADENA .)
    ANDSINGLE       reduce using rule 146 (valores -> CADENA .)
    I64             reduce using rule 146 (valores -> CADENA .)
    F64             reduce using rule 146 (valores -> CADENA .)
    ENTERO          reduce using rule 146 (valores -> CADENA .)
    DECIMAL         reduce using rule 146 (valores -> CADENA .)
    CADENA          reduce using rule 146 (valores -> CADENA .)
    BOOLEANO        reduce using rule 146 (valores -> CADENA .)
    CARACTER        reduce using rule 146 (valores -> CADENA .)
    LCOR            reduce using rule 146 (valores -> CADENA .)
    COMA            reduce using rule 146 (valores -> CADENA .)
    LLLAV           reduce using rule 146 (valores -> CADENA .)
    RCOR            reduce using rule 146 (valores -> CADENA .)
    RPAR            reduce using rule 146 (valores -> CADENA .)
    ARROW2          reduce using rule 146 (valores -> CADENA .)
    ORSINGLE        reduce using rule 146 (valores -> CADENA .)


state 125

    (147) valores -> BOOLEANO .

    PUNTO           reduce using rule 147 (valores -> BOOLEANO .)
    MAS             reduce using rule 147 (valores -> BOOLEANO .)
    MENOS           reduce using rule 147 (valores -> BOOLEANO .)
    MULTIPLICACION  reduce using rule 147 (valores -> BOOLEANO .)
    DIVISION        reduce using rule 147 (valores -> BOOLEANO .)
    MODULO          reduce using rule 147 (valores -> BOOLEANO .)
    AND             reduce using rule 147 (valores -> BOOLEANO .)
    OR              reduce using rule 147 (valores -> BOOLEANO .)
    IGUALI          reduce using rule 147 (valores -> BOOLEANO .)
    DIF             reduce using rule 147 (valores -> BOOLEANO .)
    MAYOR           reduce using rule 147 (valores -> BOOLEANO .)
    MENOR           reduce using rule 147 (valores -> BOOLEANO .)
    MAYORI          reduce using rule 147 (valores -> BOOLEANO .)
    MENORI          reduce using rule 147 (valores -> BOOLEANO .)
    AS              reduce using rule 147 (valores -> BOOLEANO .)
    PCOMA           reduce using rule 147 (valores -> BOOLEANO .)
    RLLAV           reduce using rule 147 (valores -> BOOLEANO .)
    PRINT           reduce using rule 147 (valores -> BOOLEANO .)
    LET             reduce using rule 147 (valores -> BOOLEANO .)
    ID              reduce using rule 147 (valores -> BOOLEANO .)
    CONTINUE        reduce using rule 147 (valores -> BOOLEANO .)
    BREAK           reduce using rule 147 (valores -> BOOLEANO .)
    RETURN          reduce using rule 147 (valores -> BOOLEANO .)
    IF              reduce using rule 147 (valores -> BOOLEANO .)
    MATCH           reduce using rule 147 (valores -> BOOLEANO .)
    LOOP            reduce using rule 147 (valores -> BOOLEANO .)
    WHILE           reduce using rule 147 (valores -> BOOLEANO .)
    FOR             reduce using rule 147 (valores -> BOOLEANO .)
    LPAR            reduce using rule 147 (valores -> BOOLEANO .)
    AD              reduce using rule 147 (valores -> BOOLEANO .)
    VEC             reduce using rule 147 (valores -> BOOLEANO .)
    VECTOR          reduce using rule 147 (valores -> BOOLEANO .)
    MUT             reduce using rule 147 (valores -> BOOLEANO .)
    ANDSINGLE       reduce using rule 147 (valores -> BOOLEANO .)
    I64             reduce using rule 147 (valores -> BOOLEANO .)
    F64             reduce using rule 147 (valores -> BOOLEANO .)
    ENTERO          reduce using rule 147 (valores -> BOOLEANO .)
    DECIMAL         reduce using rule 147 (valores -> BOOLEANO .)
    CADENA          reduce using rule 147 (valores -> BOOLEANO .)
    BOOLEANO        reduce using rule 147 (valores -> BOOLEANO .)
    CARACTER        reduce using rule 147 (valores -> BOOLEANO .)
    LCOR            reduce using rule 147 (valores -> BOOLEANO .)
    COMA            reduce using rule 147 (valores -> BOOLEANO .)
    LLLAV           reduce using rule 147 (valores -> BOOLEANO .)
    RCOR            reduce using rule 147 (valores -> BOOLEANO .)
    RPAR            reduce using rule 147 (valores -> BOOLEANO .)
    ARROW2          reduce using rule 147 (valores -> BOOLEANO .)
    ORSINGLE        reduce using rule 147 (valores -> BOOLEANO .)


state 126

    (148) valores -> CARACTER .

    PUNTO           reduce using rule 148 (valores -> CARACTER .)
    MAS             reduce using rule 148 (valores -> CARACTER .)
    MENOS           reduce using rule 148 (valores -> CARACTER .)
    MULTIPLICACION  reduce using rule 148 (valores -> CARACTER .)
    DIVISION        reduce using rule 148 (valores -> CARACTER .)
    MODULO          reduce using rule 148 (valores -> CARACTER .)
    AND             reduce using rule 148 (valores -> CARACTER .)
    OR              reduce using rule 148 (valores -> CARACTER .)
    IGUALI          reduce using rule 148 (valores -> CARACTER .)
    DIF             reduce using rule 148 (valores -> CARACTER .)
    MAYOR           reduce using rule 148 (valores -> CARACTER .)
    MENOR           reduce using rule 148 (valores -> CARACTER .)
    MAYORI          reduce using rule 148 (valores -> CARACTER .)
    MENORI          reduce using rule 148 (valores -> CARACTER .)
    AS              reduce using rule 148 (valores -> CARACTER .)
    PCOMA           reduce using rule 148 (valores -> CARACTER .)
    RLLAV           reduce using rule 148 (valores -> CARACTER .)
    PRINT           reduce using rule 148 (valores -> CARACTER .)
    LET             reduce using rule 148 (valores -> CARACTER .)
    ID              reduce using rule 148 (valores -> CARACTER .)
    CONTINUE        reduce using rule 148 (valores -> CARACTER .)
    BREAK           reduce using rule 148 (valores -> CARACTER .)
    RETURN          reduce using rule 148 (valores -> CARACTER .)
    IF              reduce using rule 148 (valores -> CARACTER .)
    MATCH           reduce using rule 148 (valores -> CARACTER .)
    LOOP            reduce using rule 148 (valores -> CARACTER .)
    WHILE           reduce using rule 148 (valores -> CARACTER .)
    FOR             reduce using rule 148 (valores -> CARACTER .)
    LPAR            reduce using rule 148 (valores -> CARACTER .)
    AD              reduce using rule 148 (valores -> CARACTER .)
    VEC             reduce using rule 148 (valores -> CARACTER .)
    VECTOR          reduce using rule 148 (valores -> CARACTER .)
    MUT             reduce using rule 148 (valores -> CARACTER .)
    ANDSINGLE       reduce using rule 148 (valores -> CARACTER .)
    I64             reduce using rule 148 (valores -> CARACTER .)
    F64             reduce using rule 148 (valores -> CARACTER .)
    ENTERO          reduce using rule 148 (valores -> CARACTER .)
    DECIMAL         reduce using rule 148 (valores -> CARACTER .)
    CADENA          reduce using rule 148 (valores -> CARACTER .)
    BOOLEANO        reduce using rule 148 (valores -> CARACTER .)
    CARACTER        reduce using rule 148 (valores -> CARACTER .)
    LCOR            reduce using rule 148 (valores -> CARACTER .)
    COMA            reduce using rule 148 (valores -> CARACTER .)
    LLLAV           reduce using rule 148 (valores -> CARACTER .)
    RCOR            reduce using rule 148 (valores -> CARACTER .)
    RPAR            reduce using rule 148 (valores -> CARACTER .)
    ARROW2          reduce using rule 148 (valores -> CARACTER .)
    ORSINGLE        reduce using rule 148 (valores -> CARACTER .)


state 127

    (142) newarray -> LCOR . lista_exp RCOR
    (143) newarray -> LCOR . auxexp PCOMA exp RCOR
    (88) lista_exp -> . lista_exp COMA auxexp
    (89) lista_exp -> . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    lista_exp                      shift and go to state 195
    auxexp                         shift and go to state 196
    exp                            shift and go to state 98
    expstruct                      shift and go to state 103
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 128

    (91) asignacion_simple -> MUT ID DPUNTOS . tipo_var
    (93) asignacion_simple -> MUT ID DPUNTOS . ANDSINGLE tipo_var
    (95) asignacion_simple -> MUT ID DPUNTOS . ANDSINGLE MUT tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    ANDSINGLE       shift and go to state 198
    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 197
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 129

    (152) tipo_var -> ANDSINGLE aSTR .

    RLLAV           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    COMA            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    RPAR            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    IGUAL           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    LLLAV           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    RCOR            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    PCOMA           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MAYOR           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MAS             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MENOS           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MULTIPLICACION  reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    DIVISION        reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MODULO          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    AND             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    OR              reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    IGUALI          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    DIF             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MENOR           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MAYORI          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MENORI          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    AS              reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    PRINT           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    LET             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    ID              reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    CONTINUE        reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    BREAK           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    RETURN          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    IF              reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MATCH           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    LOOP            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    WHILE           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    FOR             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    LPAR            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    AD              reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    VEC             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    VECTOR          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    MUT             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    ANDSINGLE       reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    I64             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    F64             reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    ENTERO          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    DECIMAL         reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    CADENA          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    BOOLEANO        reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    CARACTER        reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    LCOR            reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    ARROW2          reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    ORSINGLE        reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)
    PUNTO           reduce using rule 152 (tipo_var -> ANDSINGLE aSTR .)


state 130

    (157) tipo_var -> LCOR tipo_var . RCOR
    (96) lista_arr2 -> LCOR tipo_var . PCOMA exp RCOR

    RCOR            shift and go to state 199
    PCOMA           shift and go to state 200


state 131

    (161) lista_classtype -> lista_classtype DPUNTOS . DPUNTOS ID

    DPUNTOS         shift and go to state 201


state 132

    (159) tipo_var -> VECTOR MENOR . tipo_var MAYOR
    (160) tipo_var -> VECTOR MENOR . lista_classtype MAYOR
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 202
    lista_classtype                shift and go to state 203
    lista_arr2                     shift and go to state 59

state 133

    (70) lista_var -> lista_var COMA PUB ID . DPUNTOS tipo_var

    DPUNTOS         shift and go to state 204


state 134

    (71) lista_var -> lista_var COMA ID DPUNTOS . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 205
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 135

    (72) lista_var -> PUB ID DPUNTOS tipo_var .

    RLLAV           reduce using rule 72 (lista_var -> PUB ID DPUNTOS tipo_var .)
    COMA            reduce using rule 72 (lista_var -> PUB ID DPUNTOS tipo_var .)


state 136

    (92) asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .

    RPAR            reduce using rule 92 (asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .)
    COMA            reduce using rule 92 (asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .)
    IGUAL           reduce using rule 92 (asignacion_simple -> ID DPUNTOS ANDSINGLE tipo_var .)


state 137

    (94) asignacion_simple -> ID DPUNTOS ANDSINGLE MUT . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 206
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 138

    (16) funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 48

    statement                      shift and go to state 207

state 139

    (18) funcion -> FN ID LPAR RPAR ARROW tipo_var statement .

    MOD             reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    STRUCT          reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    FN              reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    $end            reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    RLLAV           reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)
    PUB             reduce using rule 18 (funcion -> FN ID LPAR RPAR ARROW tipo_var statement .)


state 140

    (68) statement -> LLLAV instrucciones_l RLLAV .

    MOD             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    STRUCT          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    FN              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    $end            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    RLLAV           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    PUB             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    PRINT           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    LET             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ID              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    CONTINUE        reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    BREAK           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    RETURN          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    IF              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MATCH           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    LOOP            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    WHILE           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    FOR             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    LPAR            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MENOS           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    AD              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    VEC             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    VECTOR          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MUT             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ANDSINGLE       reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    I64             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    F64             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ENTERO          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    DECIMAL         reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    CADENA          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    BOOLEANO        reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    CARACTER        reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    LCOR            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MAS             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MULTIPLICACION  reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    DIVISION        reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MODULO          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    AND             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    OR              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    IGUALI          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    DIF             reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MAYOR           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MENOR           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MAYORI          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    MENORI          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    AS              reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    PCOMA           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    COMA            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    LLLAV           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    RCOR            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    RPAR            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ARROW2          reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ORSINGLE        reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    PUNTO           reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)
    ELSE            reduce using rule 68 (statement -> LLLAV instrucciones_l RLLAV .)


state 141

    (7) instrucciones_l -> instrucciones_l instruccion_l .

    RLLAV           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    PRINT           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    LET             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    ID              reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    CONTINUE        reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    BREAK           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    RETURN          reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    IF              reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    MATCH           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    LOOP            reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    WHILE           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    FOR             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    LPAR            reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    MENOS           reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    AD              reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    VEC             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    VECTOR          reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    MUT             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    ANDSINGLE       reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    I64             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    F64             reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    ENTERO          reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    DECIMAL         reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    CADENA          reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    BOOLEANO        reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    CARACTER        reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)
    LCOR            reduce using rule 7 (instrucciones_l -> instrucciones_l instruccion_l .)


state 142

    (9) instruccion_l -> print PCOMA .

    RLLAV           reduce using rule 9 (instruccion_l -> print PCOMA .)
    PRINT           reduce using rule 9 (instruccion_l -> print PCOMA .)
    LET             reduce using rule 9 (instruccion_l -> print PCOMA .)
    ID              reduce using rule 9 (instruccion_l -> print PCOMA .)
    CONTINUE        reduce using rule 9 (instruccion_l -> print PCOMA .)
    BREAK           reduce using rule 9 (instruccion_l -> print PCOMA .)
    RETURN          reduce using rule 9 (instruccion_l -> print PCOMA .)
    IF              reduce using rule 9 (instruccion_l -> print PCOMA .)
    MATCH           reduce using rule 9 (instruccion_l -> print PCOMA .)
    LOOP            reduce using rule 9 (instruccion_l -> print PCOMA .)
    WHILE           reduce using rule 9 (instruccion_l -> print PCOMA .)
    FOR             reduce using rule 9 (instruccion_l -> print PCOMA .)
    LPAR            reduce using rule 9 (instruccion_l -> print PCOMA .)
    MENOS           reduce using rule 9 (instruccion_l -> print PCOMA .)
    AD              reduce using rule 9 (instruccion_l -> print PCOMA .)
    VEC             reduce using rule 9 (instruccion_l -> print PCOMA .)
    VECTOR          reduce using rule 9 (instruccion_l -> print PCOMA .)
    MUT             reduce using rule 9 (instruccion_l -> print PCOMA .)
    ANDSINGLE       reduce using rule 9 (instruccion_l -> print PCOMA .)
    I64             reduce using rule 9 (instruccion_l -> print PCOMA .)
    F64             reduce using rule 9 (instruccion_l -> print PCOMA .)
    ENTERO          reduce using rule 9 (instruccion_l -> print PCOMA .)
    DECIMAL         reduce using rule 9 (instruccion_l -> print PCOMA .)
    CADENA          reduce using rule 9 (instruccion_l -> print PCOMA .)
    BOOLEANO        reduce using rule 9 (instruccion_l -> print PCOMA .)
    CARACTER        reduce using rule 9 (instruccion_l -> print PCOMA .)
    LCOR            reduce using rule 9 (instruccion_l -> print PCOMA .)


state 143

    (10) instruccion_l -> declaracion PCOMA .

    RLLAV           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    PRINT           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    LET             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    ID              reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    CONTINUE        reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    BREAK           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    RETURN          reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    IF              reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    MATCH           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    LOOP            reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    WHILE           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    FOR             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    LPAR            reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    MENOS           reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    AD              reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    VEC             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    VECTOR          reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    MUT             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    ANDSINGLE       reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    I64             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    F64             reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    ENTERO          reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    DECIMAL         reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    CADENA          reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    BOOLEANO        reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    CARACTER        reduce using rule 10 (instruccion_l -> declaracion PCOMA .)
    LCOR            reduce using rule 10 (instruccion_l -> declaracion PCOMA .)


state 144

    (11) instruccion_l -> asignacion PCOMA .

    RLLAV           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    PRINT           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    LET             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    ID              reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    CONTINUE        reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    BREAK           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    RETURN          reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    IF              reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    MATCH           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    LOOP            reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    WHILE           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    FOR             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    LPAR            reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    MENOS           reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    AD              reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    VEC             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    VECTOR          reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    MUT             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    ANDSINGLE       reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    I64             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    F64             reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    ENTERO          reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    DECIMAL         reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    CADENA          reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    BOOLEANO        reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    CARACTER        reduce using rule 11 (instruccion_l -> asignacion PCOMA .)
    LCOR            reduce using rule 11 (instruccion_l -> asignacion PCOMA .)


state 145

    (12) instruccion_l -> llamada PCOMA .

    RLLAV           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    PRINT           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    LET             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    ID              reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    CONTINUE        reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    BREAK           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    RETURN          reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    IF              reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    MATCH           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    LOOP            reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    WHILE           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    FOR             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    LPAR            reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    MENOS           reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    AD              reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    VEC             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    VECTOR          reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    MUT             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    ANDSINGLE       reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    I64             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    F64             reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    ENTERO          reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    DECIMAL         reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    CADENA          reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    BOOLEANO        reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    CARACTER        reduce using rule 12 (instruccion_l -> llamada PCOMA .)
    LCOR            reduce using rule 12 (instruccion_l -> llamada PCOMA .)


state 146

    (15) instruccion_l -> transferencia PCOMA .

    RLLAV           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    PRINT           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    LET             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    ID              reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    CONTINUE        reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    BREAK           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    RETURN          reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    IF              reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    MATCH           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    LOOP            reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    WHILE           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    FOR             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    LPAR            reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    MENOS           reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    AD              reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    VEC             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    VECTOR          reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    MUT             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    ANDSINGLE       reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    I64             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    F64             reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    ENTERO          reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    DECIMAL         reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    CADENA          reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    BOOLEANO        reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    CARACTER        reduce using rule 15 (instruccion_l -> transferencia PCOMA .)
    LCOR            reduce using rule 15 (instruccion_l -> transferencia PCOMA .)


state 147

    (179) print -> PRINT AD . LPAR lista_exp RPAR

    LPAR            shift and go to state 208


state 148

    (123) expop -> AD exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 123 (expop -> AD exp .)
    AND             reduce using rule 123 (expop -> AD exp .)
    OR              reduce using rule 123 (expop -> AD exp .)
    AS              reduce using rule 123 (expop -> AD exp .)
    PCOMA           reduce using rule 123 (expop -> AD exp .)
    RLLAV           reduce using rule 123 (expop -> AD exp .)
    PRINT           reduce using rule 123 (expop -> AD exp .)
    LET             reduce using rule 123 (expop -> AD exp .)
    ID              reduce using rule 123 (expop -> AD exp .)
    CONTINUE        reduce using rule 123 (expop -> AD exp .)
    BREAK           reduce using rule 123 (expop -> AD exp .)
    RETURN          reduce using rule 123 (expop -> AD exp .)
    IF              reduce using rule 123 (expop -> AD exp .)
    MATCH           reduce using rule 123 (expop -> AD exp .)
    LOOP            reduce using rule 123 (expop -> AD exp .)
    WHILE           reduce using rule 123 (expop -> AD exp .)
    FOR             reduce using rule 123 (expop -> AD exp .)
    LPAR            reduce using rule 123 (expop -> AD exp .)
    AD              reduce using rule 123 (expop -> AD exp .)
    VEC             reduce using rule 123 (expop -> AD exp .)
    VECTOR          reduce using rule 123 (expop -> AD exp .)
    MUT             reduce using rule 123 (expop -> AD exp .)
    ANDSINGLE       reduce using rule 123 (expop -> AD exp .)
    I64             reduce using rule 123 (expop -> AD exp .)
    F64             reduce using rule 123 (expop -> AD exp .)
    ENTERO          reduce using rule 123 (expop -> AD exp .)
    DECIMAL         reduce using rule 123 (expop -> AD exp .)
    CADENA          reduce using rule 123 (expop -> AD exp .)
    BOOLEANO        reduce using rule 123 (expop -> AD exp .)
    CARACTER        reduce using rule 123 (expop -> AD exp .)
    LCOR            reduce using rule 123 (expop -> AD exp .)
    COMA            reduce using rule 123 (expop -> AD exp .)
    LLLAV           reduce using rule 123 (expop -> AD exp .)
    RCOR            reduce using rule 123 (expop -> AD exp .)
    RPAR            reduce using rule 123 (expop -> AD exp .)
    ARROW2          reduce using rule 123 (expop -> AD exp .)
    ORSINGLE        reduce using rule 123 (expop -> AD exp .)
    PUNTO           reduce using rule 123 (expop -> AD exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179

  ! MAS             [ reduce using rule 123 (expop -> AD exp .) ]
  ! MENOS           [ reduce using rule 123 (expop -> AD exp .) ]
  ! MULTIPLICACION  [ reduce using rule 123 (expop -> AD exp .) ]
  ! DIVISION        [ reduce using rule 123 (expop -> AD exp .) ]
  ! IGUALI          [ reduce using rule 123 (expop -> AD exp .) ]
  ! DIF             [ reduce using rule 123 (expop -> AD exp .) ]
  ! MAYOR           [ reduce using rule 123 (expop -> AD exp .) ]
  ! MENOR           [ reduce using rule 123 (expop -> AD exp .) ]
  ! MAYORI          [ reduce using rule 123 (expop -> AD exp .) ]
  ! MENORI          [ reduce using rule 123 (expop -> AD exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! AS              [ shift and go to state 180 ]


state 149

    (109) exp -> llamada .

    MAS             reduce using rule 109 (exp -> llamada .)
    MENOS           reduce using rule 109 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 109 (exp -> llamada .)
    DIVISION        reduce using rule 109 (exp -> llamada .)
    MODULO          reduce using rule 109 (exp -> llamada .)
    AND             reduce using rule 109 (exp -> llamada .)
    OR              reduce using rule 109 (exp -> llamada .)
    IGUALI          reduce using rule 109 (exp -> llamada .)
    DIF             reduce using rule 109 (exp -> llamada .)
    MAYOR           reduce using rule 109 (exp -> llamada .)
    MENOR           reduce using rule 109 (exp -> llamada .)
    MAYORI          reduce using rule 109 (exp -> llamada .)
    MENORI          reduce using rule 109 (exp -> llamada .)
    AS              reduce using rule 109 (exp -> llamada .)
    PCOMA           reduce using rule 109 (exp -> llamada .)
    RLLAV           reduce using rule 109 (exp -> llamada .)
    PRINT           reduce using rule 109 (exp -> llamada .)
    LET             reduce using rule 109 (exp -> llamada .)
    ID              reduce using rule 109 (exp -> llamada .)
    CONTINUE        reduce using rule 109 (exp -> llamada .)
    BREAK           reduce using rule 109 (exp -> llamada .)
    RETURN          reduce using rule 109 (exp -> llamada .)
    IF              reduce using rule 109 (exp -> llamada .)
    MATCH           reduce using rule 109 (exp -> llamada .)
    LOOP            reduce using rule 109 (exp -> llamada .)
    WHILE           reduce using rule 109 (exp -> llamada .)
    FOR             reduce using rule 109 (exp -> llamada .)
    LPAR            reduce using rule 109 (exp -> llamada .)
    AD              reduce using rule 109 (exp -> llamada .)
    VEC             reduce using rule 109 (exp -> llamada .)
    VECTOR          reduce using rule 109 (exp -> llamada .)
    MUT             reduce using rule 109 (exp -> llamada .)
    ANDSINGLE       reduce using rule 109 (exp -> llamada .)
    I64             reduce using rule 109 (exp -> llamada .)
    F64             reduce using rule 109 (exp -> llamada .)
    ENTERO          reduce using rule 109 (exp -> llamada .)
    DECIMAL         reduce using rule 109 (exp -> llamada .)
    CADENA          reduce using rule 109 (exp -> llamada .)
    BOOLEANO        reduce using rule 109 (exp -> llamada .)
    CARACTER        reduce using rule 109 (exp -> llamada .)
    LCOR            reduce using rule 109 (exp -> llamada .)
    COMA            reduce using rule 109 (exp -> llamada .)
    LLLAV           reduce using rule 109 (exp -> llamada .)
    RCOR            reduce using rule 109 (exp -> llamada .)
    RPAR            reduce using rule 109 (exp -> llamada .)
    ARROW2          reduce using rule 109 (exp -> llamada .)
    ORSINGLE        reduce using rule 109 (exp -> llamada .)
    PUNTO           reduce using rule 109 (exp -> llamada .)


state 150

    (110) exp -> sentencia .

    MAS             reduce using rule 110 (exp -> sentencia .)
    MENOS           reduce using rule 110 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 110 (exp -> sentencia .)
    DIVISION        reduce using rule 110 (exp -> sentencia .)
    MODULO          reduce using rule 110 (exp -> sentencia .)
    AND             reduce using rule 110 (exp -> sentencia .)
    OR              reduce using rule 110 (exp -> sentencia .)
    IGUALI          reduce using rule 110 (exp -> sentencia .)
    DIF             reduce using rule 110 (exp -> sentencia .)
    MAYOR           reduce using rule 110 (exp -> sentencia .)
    MENOR           reduce using rule 110 (exp -> sentencia .)
    MAYORI          reduce using rule 110 (exp -> sentencia .)
    MENORI          reduce using rule 110 (exp -> sentencia .)
    AS              reduce using rule 110 (exp -> sentencia .)
    PCOMA           reduce using rule 110 (exp -> sentencia .)
    RLLAV           reduce using rule 110 (exp -> sentencia .)
    PRINT           reduce using rule 110 (exp -> sentencia .)
    LET             reduce using rule 110 (exp -> sentencia .)
    ID              reduce using rule 110 (exp -> sentencia .)
    CONTINUE        reduce using rule 110 (exp -> sentencia .)
    BREAK           reduce using rule 110 (exp -> sentencia .)
    RETURN          reduce using rule 110 (exp -> sentencia .)
    IF              reduce using rule 110 (exp -> sentencia .)
    MATCH           reduce using rule 110 (exp -> sentencia .)
    LOOP            reduce using rule 110 (exp -> sentencia .)
    WHILE           reduce using rule 110 (exp -> sentencia .)
    FOR             reduce using rule 110 (exp -> sentencia .)
    LPAR            reduce using rule 110 (exp -> sentencia .)
    AD              reduce using rule 110 (exp -> sentencia .)
    VEC             reduce using rule 110 (exp -> sentencia .)
    VECTOR          reduce using rule 110 (exp -> sentencia .)
    MUT             reduce using rule 110 (exp -> sentencia .)
    ANDSINGLE       reduce using rule 110 (exp -> sentencia .)
    I64             reduce using rule 110 (exp -> sentencia .)
    F64             reduce using rule 110 (exp -> sentencia .)
    ENTERO          reduce using rule 110 (exp -> sentencia .)
    DECIMAL         reduce using rule 110 (exp -> sentencia .)
    CADENA          reduce using rule 110 (exp -> sentencia .)
    BOOLEANO        reduce using rule 110 (exp -> sentencia .)
    CARACTER        reduce using rule 110 (exp -> sentencia .)
    LCOR            reduce using rule 110 (exp -> sentencia .)
    COMA            reduce using rule 110 (exp -> sentencia .)
    LLLAV           reduce using rule 110 (exp -> sentencia .)
    RCOR            reduce using rule 110 (exp -> sentencia .)
    RPAR            reduce using rule 110 (exp -> sentencia .)
    ARROW2          reduce using rule 110 (exp -> sentencia .)
    ORSINGLE        reduce using rule 110 (exp -> sentencia .)
    PUNTO           reduce using rule 110 (exp -> sentencia .)


state 151

    (138) exparr -> ID . lista_arr
    (85) lista_acc -> ID .
    (163) llamada -> ID . LPAR RPAR
    (164) llamada -> ID . LPAR lista_exp RPAR
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    PUNTO           reduce using rule 85 (lista_acc -> ID .)
    MAS             reduce using rule 85 (lista_acc -> ID .)
    MENOS           reduce using rule 85 (lista_acc -> ID .)
    MULTIPLICACION  reduce using rule 85 (lista_acc -> ID .)
    DIVISION        reduce using rule 85 (lista_acc -> ID .)
    MODULO          reduce using rule 85 (lista_acc -> ID .)
    AND             reduce using rule 85 (lista_acc -> ID .)
    OR              reduce using rule 85 (lista_acc -> ID .)
    IGUALI          reduce using rule 85 (lista_acc -> ID .)
    DIF             reduce using rule 85 (lista_acc -> ID .)
    MAYOR           reduce using rule 85 (lista_acc -> ID .)
    MENOR           reduce using rule 85 (lista_acc -> ID .)
    MAYORI          reduce using rule 85 (lista_acc -> ID .)
    MENORI          reduce using rule 85 (lista_acc -> ID .)
    AS              reduce using rule 85 (lista_acc -> ID .)
    PCOMA           reduce using rule 85 (lista_acc -> ID .)
    RLLAV           reduce using rule 85 (lista_acc -> ID .)
    PRINT           reduce using rule 85 (lista_acc -> ID .)
    LET             reduce using rule 85 (lista_acc -> ID .)
    ID              reduce using rule 85 (lista_acc -> ID .)
    CONTINUE        reduce using rule 85 (lista_acc -> ID .)
    BREAK           reduce using rule 85 (lista_acc -> ID .)
    RETURN          reduce using rule 85 (lista_acc -> ID .)
    IF              reduce using rule 85 (lista_acc -> ID .)
    MATCH           reduce using rule 85 (lista_acc -> ID .)
    LOOP            reduce using rule 85 (lista_acc -> ID .)
    WHILE           reduce using rule 85 (lista_acc -> ID .)
    FOR             reduce using rule 85 (lista_acc -> ID .)
    AD              reduce using rule 85 (lista_acc -> ID .)
    VEC             reduce using rule 85 (lista_acc -> ID .)
    VECTOR          reduce using rule 85 (lista_acc -> ID .)
    MUT             reduce using rule 85 (lista_acc -> ID .)
    ANDSINGLE       reduce using rule 85 (lista_acc -> ID .)
    I64             reduce using rule 85 (lista_acc -> ID .)
    F64             reduce using rule 85 (lista_acc -> ID .)
    ENTERO          reduce using rule 85 (lista_acc -> ID .)
    DECIMAL         reduce using rule 85 (lista_acc -> ID .)
    CADENA          reduce using rule 85 (lista_acc -> ID .)
    BOOLEANO        reduce using rule 85 (lista_acc -> ID .)
    CARACTER        reduce using rule 85 (lista_acc -> ID .)
    COMA            reduce using rule 85 (lista_acc -> ID .)
    LLLAV           reduce using rule 85 (lista_acc -> ID .)
    RCOR            reduce using rule 85 (lista_acc -> ID .)
    RPAR            reduce using rule 85 (lista_acc -> ID .)
    ARROW2          reduce using rule 85 (lista_acc -> ID .)
    ORSINGLE        reduce using rule 85 (lista_acc -> ID .)
    LPAR            shift and go to state 161
    LCOR            shift and go to state 162

  ! LPAR            [ reduce using rule 85 (lista_acc -> ID .) ]
  ! LCOR            [ reduce using rule 85 (lista_acc -> ID .) ]

    lista_arr                      shift and go to state 209

state 152

    (99) exp -> LPAR exp . LPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    LPAR            shift and go to state 210
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 153

    (76) declaracion -> LET asignacion_simple . IGUAL auxexp

    IGUAL           shift and go to state 211


state 154

    (77) declaracion -> LET MUT . asignacion
    (91) asignacion_simple -> MUT . ID DPUNTOS tipo_var
    (93) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE tipo_var
    (95) asignacion_simple -> MUT . ID DPUNTOS ANDSINGLE MUT tipo_var
    (79) asignacion -> . lista_assign IGUAL auxexp
    (80) asignacion -> . ID lista_arr IGUAL auxexp
    (81) lista_assign -> . lista_assign PUNTO ID
    (82) lista_assign -> . ID

    ID              shift and go to state 213

    asignacion                     shift and go to state 212
    lista_assign                   shift and go to state 87

state 155

    (78) declaracion -> LET asignacion .

    PCOMA           reduce using rule 78 (declaracion -> LET asignacion .)


state 156

    (90) asignacion_simple -> ID . DPUNTOS tipo_var
    (92) asignacion_simple -> ID . DPUNTOS ANDSINGLE tipo_var
    (94) asignacion_simple -> ID . DPUNTOS ANDSINGLE MUT tipo_var
    (80) asignacion -> ID . lista_arr IGUAL auxexp
    (82) lista_assign -> ID .
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

    DPUNTOS         shift and go to state 43
    IGUAL           reduce using rule 82 (lista_assign -> ID .)
    PUNTO           reduce using rule 82 (lista_assign -> ID .)
    LCOR            shift and go to state 162

    lista_arr                      shift and go to state 214

state 157

    (136) exparam -> MUT ID .

    MAS             reduce using rule 136 (exparam -> MUT ID .)
    MENOS           reduce using rule 136 (exparam -> MUT ID .)
    MULTIPLICACION  reduce using rule 136 (exparam -> MUT ID .)
    DIVISION        reduce using rule 136 (exparam -> MUT ID .)
    MODULO          reduce using rule 136 (exparam -> MUT ID .)
    AND             reduce using rule 136 (exparam -> MUT ID .)
    OR              reduce using rule 136 (exparam -> MUT ID .)
    IGUALI          reduce using rule 136 (exparam -> MUT ID .)
    DIF             reduce using rule 136 (exparam -> MUT ID .)
    MAYOR           reduce using rule 136 (exparam -> MUT ID .)
    MENOR           reduce using rule 136 (exparam -> MUT ID .)
    MAYORI          reduce using rule 136 (exparam -> MUT ID .)
    MENORI          reduce using rule 136 (exparam -> MUT ID .)
    AS              reduce using rule 136 (exparam -> MUT ID .)
    PCOMA           reduce using rule 136 (exparam -> MUT ID .)
    RLLAV           reduce using rule 136 (exparam -> MUT ID .)
    PRINT           reduce using rule 136 (exparam -> MUT ID .)
    LET             reduce using rule 136 (exparam -> MUT ID .)
    ID              reduce using rule 136 (exparam -> MUT ID .)
    CONTINUE        reduce using rule 136 (exparam -> MUT ID .)
    BREAK           reduce using rule 136 (exparam -> MUT ID .)
    RETURN          reduce using rule 136 (exparam -> MUT ID .)
    IF              reduce using rule 136 (exparam -> MUT ID .)
    MATCH           reduce using rule 136 (exparam -> MUT ID .)
    LOOP            reduce using rule 136 (exparam -> MUT ID .)
    WHILE           reduce using rule 136 (exparam -> MUT ID .)
    FOR             reduce using rule 136 (exparam -> MUT ID .)
    LPAR            reduce using rule 136 (exparam -> MUT ID .)
    AD              reduce using rule 136 (exparam -> MUT ID .)
    VEC             reduce using rule 136 (exparam -> MUT ID .)
    VECTOR          reduce using rule 136 (exparam -> MUT ID .)
    MUT             reduce using rule 136 (exparam -> MUT ID .)
    ANDSINGLE       reduce using rule 136 (exparam -> MUT ID .)
    I64             reduce using rule 136 (exparam -> MUT ID .)
    F64             reduce using rule 136 (exparam -> MUT ID .)
    ENTERO          reduce using rule 136 (exparam -> MUT ID .)
    DECIMAL         reduce using rule 136 (exparam -> MUT ID .)
    CADENA          reduce using rule 136 (exparam -> MUT ID .)
    BOOLEANO        reduce using rule 136 (exparam -> MUT ID .)
    CARACTER        reduce using rule 136 (exparam -> MUT ID .)
    LCOR            reduce using rule 136 (exparam -> MUT ID .)
    COMA            reduce using rule 136 (exparam -> MUT ID .)
    LLLAV           reduce using rule 136 (exparam -> MUT ID .)
    RCOR            reduce using rule 136 (exparam -> MUT ID .)
    RPAR            reduce using rule 136 (exparam -> MUT ID .)
    ARROW2          reduce using rule 136 (exparam -> MUT ID .)
    ORSINGLE        reduce using rule 136 (exparam -> MUT ID .)
    PUNTO           reduce using rule 136 (exparam -> MUT ID .)


state 158

    (79) asignacion -> lista_assign IGUAL . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 215
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 159

    (81) lista_assign -> lista_assign PUNTO . ID

    ID              shift and go to state 216


state 160

    (80) asignacion -> ID lista_arr . IGUAL auxexp
    (138) exparr -> ID lista_arr .
    (86) lista_arr -> lista_arr . LCOR auxexp RCOR

  ! shift/reduce conflict for LCOR resolved as shift
    IGUAL           shift and go to state 217
    MAS             reduce using rule 138 (exparr -> ID lista_arr .)
    MENOS           reduce using rule 138 (exparr -> ID lista_arr .)
    MULTIPLICACION  reduce using rule 138 (exparr -> ID lista_arr .)
    DIVISION        reduce using rule 138 (exparr -> ID lista_arr .)
    MODULO          reduce using rule 138 (exparr -> ID lista_arr .)
    AND             reduce using rule 138 (exparr -> ID lista_arr .)
    OR              reduce using rule 138 (exparr -> ID lista_arr .)
    IGUALI          reduce using rule 138 (exparr -> ID lista_arr .)
    DIF             reduce using rule 138 (exparr -> ID lista_arr .)
    MAYOR           reduce using rule 138 (exparr -> ID lista_arr .)
    MENOR           reduce using rule 138 (exparr -> ID lista_arr .)
    MAYORI          reduce using rule 138 (exparr -> ID lista_arr .)
    MENORI          reduce using rule 138 (exparr -> ID lista_arr .)
    AS              reduce using rule 138 (exparr -> ID lista_arr .)
    PCOMA           reduce using rule 138 (exparr -> ID lista_arr .)
    RLLAV           reduce using rule 138 (exparr -> ID lista_arr .)
    PRINT           reduce using rule 138 (exparr -> ID lista_arr .)
    LET             reduce using rule 138 (exparr -> ID lista_arr .)
    ID              reduce using rule 138 (exparr -> ID lista_arr .)
    CONTINUE        reduce using rule 138 (exparr -> ID lista_arr .)
    BREAK           reduce using rule 138 (exparr -> ID lista_arr .)
    RETURN          reduce using rule 138 (exparr -> ID lista_arr .)
    IF              reduce using rule 138 (exparr -> ID lista_arr .)
    MATCH           reduce using rule 138 (exparr -> ID lista_arr .)
    LOOP            reduce using rule 138 (exparr -> ID lista_arr .)
    WHILE           reduce using rule 138 (exparr -> ID lista_arr .)
    FOR             reduce using rule 138 (exparr -> ID lista_arr .)
    LPAR            reduce using rule 138 (exparr -> ID lista_arr .)
    AD              reduce using rule 138 (exparr -> ID lista_arr .)
    VEC             reduce using rule 138 (exparr -> ID lista_arr .)
    VECTOR          reduce using rule 138 (exparr -> ID lista_arr .)
    MUT             reduce using rule 138 (exparr -> ID lista_arr .)
    ANDSINGLE       reduce using rule 138 (exparr -> ID lista_arr .)
    I64             reduce using rule 138 (exparr -> ID lista_arr .)
    F64             reduce using rule 138 (exparr -> ID lista_arr .)
    ENTERO          reduce using rule 138 (exparr -> ID lista_arr .)
    DECIMAL         reduce using rule 138 (exparr -> ID lista_arr .)
    CADENA          reduce using rule 138 (exparr -> ID lista_arr .)
    BOOLEANO        reduce using rule 138 (exparr -> ID lista_arr .)
    CARACTER        reduce using rule 138 (exparr -> ID lista_arr .)
    LCOR            shift and go to state 218

  ! LCOR            [ reduce using rule 138 (exparr -> ID lista_arr .) ]


state 161

    (163) llamada -> ID LPAR . RPAR
    (164) llamada -> ID LPAR . lista_exp RPAR
    (88) lista_exp -> . lista_exp COMA auxexp
    (89) lista_exp -> . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    RPAR            shift and go to state 219
    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    lista_exp                      shift and go to state 220
    auxexp                         shift and go to state 221
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 162

    (87) lista_arr -> LCOR . auxexp RCOR
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 222
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 163

    (64) transferencia -> BREAK auxexp .

    PCOMA           reduce using rule 64 (transferencia -> BREAK auxexp .)
    RLLAV           reduce using rule 64 (transferencia -> BREAK auxexp .)
    PRINT           reduce using rule 64 (transferencia -> BREAK auxexp .)
    LET             reduce using rule 64 (transferencia -> BREAK auxexp .)
    ID              reduce using rule 64 (transferencia -> BREAK auxexp .)
    CONTINUE        reduce using rule 64 (transferencia -> BREAK auxexp .)
    BREAK           reduce using rule 64 (transferencia -> BREAK auxexp .)
    RETURN          reduce using rule 64 (transferencia -> BREAK auxexp .)
    IF              reduce using rule 64 (transferencia -> BREAK auxexp .)
    MATCH           reduce using rule 64 (transferencia -> BREAK auxexp .)
    LOOP            reduce using rule 64 (transferencia -> BREAK auxexp .)
    WHILE           reduce using rule 64 (transferencia -> BREAK auxexp .)
    FOR             reduce using rule 64 (transferencia -> BREAK auxexp .)
    LPAR            reduce using rule 64 (transferencia -> BREAK auxexp .)
    MENOS           reduce using rule 64 (transferencia -> BREAK auxexp .)
    AD              reduce using rule 64 (transferencia -> BREAK auxexp .)
    VEC             reduce using rule 64 (transferencia -> BREAK auxexp .)
    VECTOR          reduce using rule 64 (transferencia -> BREAK auxexp .)
    MUT             reduce using rule 64 (transferencia -> BREAK auxexp .)
    ANDSINGLE       reduce using rule 64 (transferencia -> BREAK auxexp .)
    I64             reduce using rule 64 (transferencia -> BREAK auxexp .)
    F64             reduce using rule 64 (transferencia -> BREAK auxexp .)
    ENTERO          reduce using rule 64 (transferencia -> BREAK auxexp .)
    DECIMAL         reduce using rule 64 (transferencia -> BREAK auxexp .)
    CADENA          reduce using rule 64 (transferencia -> BREAK auxexp .)
    BOOLEANO        reduce using rule 64 (transferencia -> BREAK auxexp .)
    CARACTER        reduce using rule 64 (transferencia -> BREAK auxexp .)
    LCOR            reduce using rule 64 (transferencia -> BREAK auxexp .)
    COMA            reduce using rule 64 (transferencia -> BREAK auxexp .)


state 164

    (162) lista_classtype -> ID .
    (138) exparr -> ID . lista_arr
    (85) lista_acc -> ID .
    (163) llamada -> ID . LPAR RPAR
    (164) llamada -> ID . LPAR lista_exp RPAR
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

  ! shift/reduce conflict for LPAR resolved as shift
  ! shift/reduce conflict for LCOR resolved as shift
    LLLAV           reduce using rule 162 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 162 (lista_classtype -> ID .)
    PUNTO           reduce using rule 85 (lista_acc -> ID .)
    MAS             reduce using rule 85 (lista_acc -> ID .)
    MENOS           reduce using rule 85 (lista_acc -> ID .)
    MULTIPLICACION  reduce using rule 85 (lista_acc -> ID .)
    DIVISION        reduce using rule 85 (lista_acc -> ID .)
    MODULO          reduce using rule 85 (lista_acc -> ID .)
    AND             reduce using rule 85 (lista_acc -> ID .)
    OR              reduce using rule 85 (lista_acc -> ID .)
    IGUALI          reduce using rule 85 (lista_acc -> ID .)
    DIF             reduce using rule 85 (lista_acc -> ID .)
    MAYOR           reduce using rule 85 (lista_acc -> ID .)
    MENOR           reduce using rule 85 (lista_acc -> ID .)
    MAYORI          reduce using rule 85 (lista_acc -> ID .)
    MENORI          reduce using rule 85 (lista_acc -> ID .)
    AS              reduce using rule 85 (lista_acc -> ID .)
    PCOMA           reduce using rule 85 (lista_acc -> ID .)
    RLLAV           reduce using rule 85 (lista_acc -> ID .)
    PRINT           reduce using rule 85 (lista_acc -> ID .)
    LET             reduce using rule 85 (lista_acc -> ID .)
    ID              reduce using rule 85 (lista_acc -> ID .)
    CONTINUE        reduce using rule 85 (lista_acc -> ID .)
    BREAK           reduce using rule 85 (lista_acc -> ID .)
    RETURN          reduce using rule 85 (lista_acc -> ID .)
    IF              reduce using rule 85 (lista_acc -> ID .)
    MATCH           reduce using rule 85 (lista_acc -> ID .)
    LOOP            reduce using rule 85 (lista_acc -> ID .)
    WHILE           reduce using rule 85 (lista_acc -> ID .)
    FOR             reduce using rule 85 (lista_acc -> ID .)
    AD              reduce using rule 85 (lista_acc -> ID .)
    VEC             reduce using rule 85 (lista_acc -> ID .)
    VECTOR          reduce using rule 85 (lista_acc -> ID .)
    MUT             reduce using rule 85 (lista_acc -> ID .)
    ANDSINGLE       reduce using rule 85 (lista_acc -> ID .)
    I64             reduce using rule 85 (lista_acc -> ID .)
    F64             reduce using rule 85 (lista_acc -> ID .)
    ENTERO          reduce using rule 85 (lista_acc -> ID .)
    DECIMAL         reduce using rule 85 (lista_acc -> ID .)
    CADENA          reduce using rule 85 (lista_acc -> ID .)
    BOOLEANO        reduce using rule 85 (lista_acc -> ID .)
    CARACTER        reduce using rule 85 (lista_acc -> ID .)
    COMA            reduce using rule 85 (lista_acc -> ID .)
    RCOR            reduce using rule 85 (lista_acc -> ID .)
    RPAR            reduce using rule 85 (lista_acc -> ID .)
    LPAR            shift and go to state 161
    LCOR            shift and go to state 162

  ! LPAR            [ reduce using rule 85 (lista_acc -> ID .) ]
  ! LCOR            [ reduce using rule 85 (lista_acc -> ID .) ]

    lista_arr                      shift and go to state 209

state 165

    (66) transferencia -> RETURN auxexp .

    PCOMA           reduce using rule 66 (transferencia -> RETURN auxexp .)
    RLLAV           reduce using rule 66 (transferencia -> RETURN auxexp .)
    PRINT           reduce using rule 66 (transferencia -> RETURN auxexp .)
    LET             reduce using rule 66 (transferencia -> RETURN auxexp .)
    ID              reduce using rule 66 (transferencia -> RETURN auxexp .)
    CONTINUE        reduce using rule 66 (transferencia -> RETURN auxexp .)
    BREAK           reduce using rule 66 (transferencia -> RETURN auxexp .)
    RETURN          reduce using rule 66 (transferencia -> RETURN auxexp .)
    IF              reduce using rule 66 (transferencia -> RETURN auxexp .)
    MATCH           reduce using rule 66 (transferencia -> RETURN auxexp .)
    LOOP            reduce using rule 66 (transferencia -> RETURN auxexp .)
    WHILE           reduce using rule 66 (transferencia -> RETURN auxexp .)
    FOR             reduce using rule 66 (transferencia -> RETURN auxexp .)
    LPAR            reduce using rule 66 (transferencia -> RETURN auxexp .)
    MENOS           reduce using rule 66 (transferencia -> RETURN auxexp .)
    AD              reduce using rule 66 (transferencia -> RETURN auxexp .)
    VEC             reduce using rule 66 (transferencia -> RETURN auxexp .)
    VECTOR          reduce using rule 66 (transferencia -> RETURN auxexp .)
    MUT             reduce using rule 66 (transferencia -> RETURN auxexp .)
    ANDSINGLE       reduce using rule 66 (transferencia -> RETURN auxexp .)
    I64             reduce using rule 66 (transferencia -> RETURN auxexp .)
    F64             reduce using rule 66 (transferencia -> RETURN auxexp .)
    ENTERO          reduce using rule 66 (transferencia -> RETURN auxexp .)
    DECIMAL         reduce using rule 66 (transferencia -> RETURN auxexp .)
    CADENA          reduce using rule 66 (transferencia -> RETURN auxexp .)
    BOOLEANO        reduce using rule 66 (transferencia -> RETURN auxexp .)
    CARACTER        reduce using rule 66 (transferencia -> RETURN auxexp .)
    LCOR            reduce using rule 66 (transferencia -> RETURN auxexp .)
    COMA            reduce using rule 66 (transferencia -> RETURN auxexp .)


state 166

    (38) if -> IF exp . statement else
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180
    LLLAV           shift and go to state 48

    statement                      shift and go to state 223

state 167

    (113) expmath -> exp MAS . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 224
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 168

    (114) expmath -> exp MENOS . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 225
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 169

    (115) expmath -> exp MULTIPLICACION . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 226
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 170

    (116) expmath -> exp DIVISION . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 227
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 171

    (117) expmath -> exp MODULO . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 228
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 172

    (121) expop -> exp AND . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 229
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 173

    (122) expop -> exp OR . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 230
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 174

    (125) exprel -> exp IGUALI . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 231
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 175

    (126) exprel -> exp DIF . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 232
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 176

    (127) exprel -> exp MAYOR . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 233
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 177

    (128) exprel -> exp MENOR . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 234
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 178

    (129) exprel -> exp MAYORI . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 235
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 179

    (130) exprel -> exp MENORI . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 236
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 180

    (124) expcast -> exp AS . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 237
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 181

    (43) match -> MATCH exp . match_statement
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var
    (44) match_statement -> . LLLAV lista_brazos RLLAV
    (45) match_statement -> . LLLAV RLLAV

    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180
    LLLAV           shift and go to state 239

    match_statement                shift and go to state 238

state 182

    (57) loop -> LOOP statement .

    RLLAV           reduce using rule 57 (loop -> LOOP statement .)
    PRINT           reduce using rule 57 (loop -> LOOP statement .)
    LET             reduce using rule 57 (loop -> LOOP statement .)
    ID              reduce using rule 57 (loop -> LOOP statement .)
    CONTINUE        reduce using rule 57 (loop -> LOOP statement .)
    BREAK           reduce using rule 57 (loop -> LOOP statement .)
    RETURN          reduce using rule 57 (loop -> LOOP statement .)
    IF              reduce using rule 57 (loop -> LOOP statement .)
    MATCH           reduce using rule 57 (loop -> LOOP statement .)
    LOOP            reduce using rule 57 (loop -> LOOP statement .)
    WHILE           reduce using rule 57 (loop -> LOOP statement .)
    FOR             reduce using rule 57 (loop -> LOOP statement .)
    LPAR            reduce using rule 57 (loop -> LOOP statement .)
    MENOS           reduce using rule 57 (loop -> LOOP statement .)
    AD              reduce using rule 57 (loop -> LOOP statement .)
    VEC             reduce using rule 57 (loop -> LOOP statement .)
    VECTOR          reduce using rule 57 (loop -> LOOP statement .)
    MUT             reduce using rule 57 (loop -> LOOP statement .)
    ANDSINGLE       reduce using rule 57 (loop -> LOOP statement .)
    I64             reduce using rule 57 (loop -> LOOP statement .)
    F64             reduce using rule 57 (loop -> LOOP statement .)
    ENTERO          reduce using rule 57 (loop -> LOOP statement .)
    DECIMAL         reduce using rule 57 (loop -> LOOP statement .)
    CADENA          reduce using rule 57 (loop -> LOOP statement .)
    BOOLEANO        reduce using rule 57 (loop -> LOOP statement .)
    CARACTER        reduce using rule 57 (loop -> LOOP statement .)
    LCOR            reduce using rule 57 (loop -> LOOP statement .)
    MAS             reduce using rule 57 (loop -> LOOP statement .)
    MULTIPLICACION  reduce using rule 57 (loop -> LOOP statement .)
    DIVISION        reduce using rule 57 (loop -> LOOP statement .)
    MODULO          reduce using rule 57 (loop -> LOOP statement .)
    AND             reduce using rule 57 (loop -> LOOP statement .)
    OR              reduce using rule 57 (loop -> LOOP statement .)
    IGUALI          reduce using rule 57 (loop -> LOOP statement .)
    DIF             reduce using rule 57 (loop -> LOOP statement .)
    MAYOR           reduce using rule 57 (loop -> LOOP statement .)
    MENOR           reduce using rule 57 (loop -> LOOP statement .)
    MAYORI          reduce using rule 57 (loop -> LOOP statement .)
    MENORI          reduce using rule 57 (loop -> LOOP statement .)
    AS              reduce using rule 57 (loop -> LOOP statement .)
    PCOMA           reduce using rule 57 (loop -> LOOP statement .)
    COMA            reduce using rule 57 (loop -> LOOP statement .)
    LLLAV           reduce using rule 57 (loop -> LOOP statement .)
    RCOR            reduce using rule 57 (loop -> LOOP statement .)
    RPAR            reduce using rule 57 (loop -> LOOP statement .)
    ARROW2          reduce using rule 57 (loop -> LOOP statement .)
    ORSINGLE        reduce using rule 57 (loop -> LOOP statement .)
    PUNTO           reduce using rule 57 (loop -> LOOP statement .)


state 183

    (58) while -> WHILE exp . statement
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180
    LLLAV           shift and go to state 48

    statement                      shift and go to state 240

state 184

    (59) for -> FOR ID . IN foriterative statement

    IN              shift and go to state 241


state 185

    (131) expstruct -> lista_classtype LLLAV . lista_att RLLAV
    (132) expstruct -> lista_classtype LLLAV . RLLAV
    (134) lista_att -> . lista_att COMA ID DPUNTOS auxexp
    (135) lista_att -> . ID DPUNTOS auxexp

    RLLAV           shift and go to state 243
    ID              shift and go to state 244

    lista_att                      shift and go to state 242

state 186

    (133) expstruct -> lista_classtype DPUNTOS . DPUNTOS llamada
    (161) lista_classtype -> lista_classtype DPUNTOS . DPUNTOS ID

    DPUNTOS         shift and go to state 245


state 187

    (83) lista_acc -> lista_acc PUNTO . ID
    (84) lista_acc -> lista_acc PUNTO . exp_native
    (165) exp_native -> . TOSTRING LPAR RPAR
    (166) exp_native -> . TOOWNED LPAR RPAR
    (167) exp_native -> . CLONE LPAR RPAR
    (168) exp_native -> . LEN LPAR RPAR
    (169) exp_native -> . CAPACITY LPAR RPAR
    (170) exp_native -> . REMOVE LPAR exp RPAR
    (171) exp_native -> . CONTAINS LPAR ANDSINGLE exp RPAR
    (172) exp_native -> . PUSH LPAR exp RPAR
    (173) exp_native -> . INSERT LPAR lista_exp RPAR
    (174) exp_native -> . CHARS LPAR RPAR
    (175) exp_native -> . SQRT LPAR RPAR
    (176) exp_native -> . ABS LPAR RPAR

    ID              shift and go to state 246
    TOSTRING        shift and go to state 248
    TOOWNED         shift and go to state 249
    CLONE           shift and go to state 250
    LEN             shift and go to state 251
    CAPACITY        shift and go to state 252
    REMOVE          shift and go to state 253
    CONTAINS        shift and go to state 254
    PUSH            shift and go to state 255
    INSERT          shift and go to state 256
    CHARS           shift and go to state 257
    SQRT            shift and go to state 258
    ABS             shift and go to state 259

    exp_native                     shift and go to state 247

state 188

    (112) exp -> valores PUNTO . exp_native
    (165) exp_native -> . TOSTRING LPAR RPAR
    (166) exp_native -> . TOOWNED LPAR RPAR
    (167) exp_native -> . CLONE LPAR RPAR
    (168) exp_native -> . LEN LPAR RPAR
    (169) exp_native -> . CAPACITY LPAR RPAR
    (170) exp_native -> . REMOVE LPAR exp RPAR
    (171) exp_native -> . CONTAINS LPAR ANDSINGLE exp RPAR
    (172) exp_native -> . PUSH LPAR exp RPAR
    (173) exp_native -> . INSERT LPAR lista_exp RPAR
    (174) exp_native -> . CHARS LPAR RPAR
    (175) exp_native -> . SQRT LPAR RPAR
    (176) exp_native -> . ABS LPAR RPAR

    TOSTRING        shift and go to state 248
    TOOWNED         shift and go to state 249
    CLONE           shift and go to state 250
    LEN             shift and go to state 251
    CAPACITY        shift and go to state 252
    REMOVE          shift and go to state 253
    CONTAINS        shift and go to state 254
    PUSH            shift and go to state 255
    INSERT          shift and go to state 256
    CHARS           shift and go to state 257
    SQRT            shift and go to state 258
    ABS             shift and go to state 259

    exp_native                     shift and go to state 260

state 189

    (118) expmath -> MENOS exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MAS             reduce using rule 118 (expmath -> MENOS exp .)
    MENOS           reduce using rule 118 (expmath -> MENOS exp .)
    MULTIPLICACION  reduce using rule 118 (expmath -> MENOS exp .)
    DIVISION        reduce using rule 118 (expmath -> MENOS exp .)
    MODULO          reduce using rule 118 (expmath -> MENOS exp .)
    AND             reduce using rule 118 (expmath -> MENOS exp .)
    OR              reduce using rule 118 (expmath -> MENOS exp .)
    IGUALI          reduce using rule 118 (expmath -> MENOS exp .)
    DIF             reduce using rule 118 (expmath -> MENOS exp .)
    MAYOR           reduce using rule 118 (expmath -> MENOS exp .)
    MENOR           reduce using rule 118 (expmath -> MENOS exp .)
    MAYORI          reduce using rule 118 (expmath -> MENOS exp .)
    MENORI          reduce using rule 118 (expmath -> MENOS exp .)
    AS              reduce using rule 118 (expmath -> MENOS exp .)
    PCOMA           reduce using rule 118 (expmath -> MENOS exp .)
    RLLAV           reduce using rule 118 (expmath -> MENOS exp .)
    PRINT           reduce using rule 118 (expmath -> MENOS exp .)
    LET             reduce using rule 118 (expmath -> MENOS exp .)
    ID              reduce using rule 118 (expmath -> MENOS exp .)
    CONTINUE        reduce using rule 118 (expmath -> MENOS exp .)
    BREAK           reduce using rule 118 (expmath -> MENOS exp .)
    RETURN          reduce using rule 118 (expmath -> MENOS exp .)
    IF              reduce using rule 118 (expmath -> MENOS exp .)
    MATCH           reduce using rule 118 (expmath -> MENOS exp .)
    LOOP            reduce using rule 118 (expmath -> MENOS exp .)
    WHILE           reduce using rule 118 (expmath -> MENOS exp .)
    FOR             reduce using rule 118 (expmath -> MENOS exp .)
    LPAR            reduce using rule 118 (expmath -> MENOS exp .)
    AD              reduce using rule 118 (expmath -> MENOS exp .)
    VEC             reduce using rule 118 (expmath -> MENOS exp .)
    VECTOR          reduce using rule 118 (expmath -> MENOS exp .)
    MUT             reduce using rule 118 (expmath -> MENOS exp .)
    ANDSINGLE       reduce using rule 118 (expmath -> MENOS exp .)
    I64             reduce using rule 118 (expmath -> MENOS exp .)
    F64             reduce using rule 118 (expmath -> MENOS exp .)
    ENTERO          reduce using rule 118 (expmath -> MENOS exp .)
    DECIMAL         reduce using rule 118 (expmath -> MENOS exp .)
    CADENA          reduce using rule 118 (expmath -> MENOS exp .)
    BOOLEANO        reduce using rule 118 (expmath -> MENOS exp .)
    CARACTER        reduce using rule 118 (expmath -> MENOS exp .)
    LCOR            reduce using rule 118 (expmath -> MENOS exp .)
    COMA            reduce using rule 118 (expmath -> MENOS exp .)
    LLLAV           reduce using rule 118 (expmath -> MENOS exp .)
    RCOR            reduce using rule 118 (expmath -> MENOS exp .)
    RPAR            reduce using rule 118 (expmath -> MENOS exp .)
    ARROW2          reduce using rule 118 (expmath -> MENOS exp .)
    ORSINGLE        reduce using rule 118 (expmath -> MENOS exp .)
    PUNTO           reduce using rule 118 (expmath -> MENOS exp .)

  ! MAS             [ shift and go to state 167 ]
  ! MENOS           [ shift and go to state 168 ]
  ! MULTIPLICACION  [ shift and go to state 169 ]
  ! DIVISION        [ shift and go to state 170 ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 190

    (140) expvec -> VEC AD . newarray
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR

    LCOR            shift and go to state 127

    newarray                       shift and go to state 261

state 191

    (141) expvec -> VECTOR DPUNTOS . DPUNTOS exp_natarr

    DPUNTOS         shift and go to state 262


state 192

    (137) exparam -> ANDSINGLE MUT . ID

    ID              shift and go to state 263


state 193

    (119) exppow -> I64 DPUNTOS . DPUNTOS POW LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 264


state 194

    (120) exppow -> F64 DPUNTOS . DPUNTOS POWF LPAR exp COMA exp RPAR

    DPUNTOS         shift and go to state 265


state 195

    (142) newarray -> LCOR lista_exp . RCOR
    (88) lista_exp -> lista_exp . COMA auxexp

    RCOR            shift and go to state 266
    COMA            shift and go to state 267


state 196

    (143) newarray -> LCOR auxexp . PCOMA exp RCOR
    (89) lista_exp -> auxexp .

    PCOMA           shift and go to state 268
    RCOR            reduce using rule 89 (lista_exp -> auxexp .)
    COMA            reduce using rule 89 (lista_exp -> auxexp .)


state 197

    (91) asignacion_simple -> MUT ID DPUNTOS tipo_var .

    RPAR            reduce using rule 91 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)
    COMA            reduce using rule 91 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)
    IGUAL           reduce using rule 91 (asignacion_simple -> MUT ID DPUNTOS tipo_var .)


state 198

    (93) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE . tipo_var
    (95) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE . MUT tipo_var
    (152) tipo_var -> ANDSINGLE . aSTR
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    MUT             shift and go to state 269
    aSTR            shift and go to state 129
    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 270
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 199

    (157) tipo_var -> LCOR tipo_var RCOR .

    RLLAV           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    COMA            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    RPAR            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    IGUAL           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    LLLAV           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    RCOR            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    PCOMA           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MAYOR           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MAS             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MENOS           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MULTIPLICACION  reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    DIVISION        reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MODULO          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    AND             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    OR              reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    IGUALI          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    DIF             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MENOR           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MAYORI          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MENORI          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    AS              reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    PRINT           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    LET             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    ID              reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    CONTINUE        reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    BREAK           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    RETURN          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    IF              reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MATCH           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    LOOP            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    WHILE           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    FOR             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    LPAR            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    AD              reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    VEC             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    VECTOR          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    MUT             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    ANDSINGLE       reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    I64             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    F64             reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    ENTERO          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    DECIMAL         reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    CADENA          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    BOOLEANO        reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    CARACTER        reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    LCOR            reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    ARROW2          reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    ORSINGLE        reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)
    PUNTO           reduce using rule 157 (tipo_var -> LCOR tipo_var RCOR .)


state 200

    (96) lista_arr2 -> LCOR tipo_var PCOMA . exp RCOR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 271
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 201

    (161) lista_classtype -> lista_classtype DPUNTOS DPUNTOS . ID

    ID              shift and go to state 272


state 202

    (159) tipo_var -> VECTOR MENOR tipo_var . MAYOR

    MAYOR           shift and go to state 273


state 203

    (160) tipo_var -> VECTOR MENOR lista_classtype . MAYOR
    (158) tipo_var -> lista_classtype .
    (161) lista_classtype -> lista_classtype . DPUNTOS DPUNTOS ID

  ! shift/reduce conflict for MAYOR resolved as shift
    MAYOR           shift and go to state 274
    DPUNTOS         shift and go to state 131

  ! MAYOR           [ reduce using rule 158 (tipo_var -> lista_classtype .) ]


state 204

    (70) lista_var -> lista_var COMA PUB ID DPUNTOS . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 275
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 205

    (71) lista_var -> lista_var COMA ID DPUNTOS tipo_var .

    RLLAV           reduce using rule 71 (lista_var -> lista_var COMA ID DPUNTOS tipo_var .)
    COMA            reduce using rule 71 (lista_var -> lista_var COMA ID DPUNTOS tipo_var .)


state 206

    (94) asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .

    RPAR            reduce using rule 94 (asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .)
    COMA            reduce using rule 94 (asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .)
    IGUAL           reduce using rule 94 (asignacion_simple -> ID DPUNTOS ANDSINGLE MUT tipo_var .)


state 207

    (16) funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .

    MOD             reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    STRUCT          reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    FN              reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    $end            reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    RLLAV           reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)
    PUB             reduce using rule 16 (funcion -> FN ID LPAR lista_parametros RPAR ARROW tipo_var statement .)


state 208

    (179) print -> PRINT AD LPAR . lista_exp RPAR
    (88) lista_exp -> . lista_exp COMA auxexp
    (89) lista_exp -> . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    lista_exp                      shift and go to state 276
    auxexp                         shift and go to state 221
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 209

    (138) exparr -> ID lista_arr .
    (86) lista_arr -> lista_arr . LCOR auxexp RCOR

  ! shift/reduce conflict for LCOR resolved as shift
    MAS             reduce using rule 138 (exparr -> ID lista_arr .)
    MENOS           reduce using rule 138 (exparr -> ID lista_arr .)
    MULTIPLICACION  reduce using rule 138 (exparr -> ID lista_arr .)
    DIVISION        reduce using rule 138 (exparr -> ID lista_arr .)
    MODULO          reduce using rule 138 (exparr -> ID lista_arr .)
    AND             reduce using rule 138 (exparr -> ID lista_arr .)
    OR              reduce using rule 138 (exparr -> ID lista_arr .)
    IGUALI          reduce using rule 138 (exparr -> ID lista_arr .)
    DIF             reduce using rule 138 (exparr -> ID lista_arr .)
    MAYOR           reduce using rule 138 (exparr -> ID lista_arr .)
    MENOR           reduce using rule 138 (exparr -> ID lista_arr .)
    MAYORI          reduce using rule 138 (exparr -> ID lista_arr .)
    MENORI          reduce using rule 138 (exparr -> ID lista_arr .)
    AS              reduce using rule 138 (exparr -> ID lista_arr .)
    PCOMA           reduce using rule 138 (exparr -> ID lista_arr .)
    RLLAV           reduce using rule 138 (exparr -> ID lista_arr .)
    PRINT           reduce using rule 138 (exparr -> ID lista_arr .)
    LET             reduce using rule 138 (exparr -> ID lista_arr .)
    ID              reduce using rule 138 (exparr -> ID lista_arr .)
    CONTINUE        reduce using rule 138 (exparr -> ID lista_arr .)
    BREAK           reduce using rule 138 (exparr -> ID lista_arr .)
    RETURN          reduce using rule 138 (exparr -> ID lista_arr .)
    IF              reduce using rule 138 (exparr -> ID lista_arr .)
    MATCH           reduce using rule 138 (exparr -> ID lista_arr .)
    LOOP            reduce using rule 138 (exparr -> ID lista_arr .)
    WHILE           reduce using rule 138 (exparr -> ID lista_arr .)
    FOR             reduce using rule 138 (exparr -> ID lista_arr .)
    LPAR            reduce using rule 138 (exparr -> ID lista_arr .)
    AD              reduce using rule 138 (exparr -> ID lista_arr .)
    VEC             reduce using rule 138 (exparr -> ID lista_arr .)
    VECTOR          reduce using rule 138 (exparr -> ID lista_arr .)
    MUT             reduce using rule 138 (exparr -> ID lista_arr .)
    ANDSINGLE       reduce using rule 138 (exparr -> ID lista_arr .)
    I64             reduce using rule 138 (exparr -> ID lista_arr .)
    F64             reduce using rule 138 (exparr -> ID lista_arr .)
    ENTERO          reduce using rule 138 (exparr -> ID lista_arr .)
    DECIMAL         reduce using rule 138 (exparr -> ID lista_arr .)
    CADENA          reduce using rule 138 (exparr -> ID lista_arr .)
    BOOLEANO        reduce using rule 138 (exparr -> ID lista_arr .)
    CARACTER        reduce using rule 138 (exparr -> ID lista_arr .)
    COMA            reduce using rule 138 (exparr -> ID lista_arr .)
    LLLAV           reduce using rule 138 (exparr -> ID lista_arr .)
    RCOR            reduce using rule 138 (exparr -> ID lista_arr .)
    RPAR            reduce using rule 138 (exparr -> ID lista_arr .)
    ARROW2          reduce using rule 138 (exparr -> ID lista_arr .)
    ORSINGLE        reduce using rule 138 (exparr -> ID lista_arr .)
    PUNTO           reduce using rule 138 (exparr -> ID lista_arr .)
    LCOR            shift and go to state 218

  ! LCOR            [ reduce using rule 138 (exparr -> ID lista_arr .) ]


state 210

    (99) exp -> LPAR exp LPAR .

    MAS             reduce using rule 99 (exp -> LPAR exp LPAR .)
    MENOS           reduce using rule 99 (exp -> LPAR exp LPAR .)
    MULTIPLICACION  reduce using rule 99 (exp -> LPAR exp LPAR .)
    DIVISION        reduce using rule 99 (exp -> LPAR exp LPAR .)
    MODULO          reduce using rule 99 (exp -> LPAR exp LPAR .)
    AND             reduce using rule 99 (exp -> LPAR exp LPAR .)
    OR              reduce using rule 99 (exp -> LPAR exp LPAR .)
    IGUALI          reduce using rule 99 (exp -> LPAR exp LPAR .)
    DIF             reduce using rule 99 (exp -> LPAR exp LPAR .)
    MAYOR           reduce using rule 99 (exp -> LPAR exp LPAR .)
    MENOR           reduce using rule 99 (exp -> LPAR exp LPAR .)
    MAYORI          reduce using rule 99 (exp -> LPAR exp LPAR .)
    MENORI          reduce using rule 99 (exp -> LPAR exp LPAR .)
    AS              reduce using rule 99 (exp -> LPAR exp LPAR .)
    PCOMA           reduce using rule 99 (exp -> LPAR exp LPAR .)
    RLLAV           reduce using rule 99 (exp -> LPAR exp LPAR .)
    PRINT           reduce using rule 99 (exp -> LPAR exp LPAR .)
    LET             reduce using rule 99 (exp -> LPAR exp LPAR .)
    ID              reduce using rule 99 (exp -> LPAR exp LPAR .)
    CONTINUE        reduce using rule 99 (exp -> LPAR exp LPAR .)
    BREAK           reduce using rule 99 (exp -> LPAR exp LPAR .)
    RETURN          reduce using rule 99 (exp -> LPAR exp LPAR .)
    IF              reduce using rule 99 (exp -> LPAR exp LPAR .)
    MATCH           reduce using rule 99 (exp -> LPAR exp LPAR .)
    LOOP            reduce using rule 99 (exp -> LPAR exp LPAR .)
    WHILE           reduce using rule 99 (exp -> LPAR exp LPAR .)
    FOR             reduce using rule 99 (exp -> LPAR exp LPAR .)
    LPAR            reduce using rule 99 (exp -> LPAR exp LPAR .)
    AD              reduce using rule 99 (exp -> LPAR exp LPAR .)
    VEC             reduce using rule 99 (exp -> LPAR exp LPAR .)
    VECTOR          reduce using rule 99 (exp -> LPAR exp LPAR .)
    MUT             reduce using rule 99 (exp -> LPAR exp LPAR .)
    ANDSINGLE       reduce using rule 99 (exp -> LPAR exp LPAR .)
    I64             reduce using rule 99 (exp -> LPAR exp LPAR .)
    F64             reduce using rule 99 (exp -> LPAR exp LPAR .)
    ENTERO          reduce using rule 99 (exp -> LPAR exp LPAR .)
    DECIMAL         reduce using rule 99 (exp -> LPAR exp LPAR .)
    CADENA          reduce using rule 99 (exp -> LPAR exp LPAR .)
    BOOLEANO        reduce using rule 99 (exp -> LPAR exp LPAR .)
    CARACTER        reduce using rule 99 (exp -> LPAR exp LPAR .)
    LCOR            reduce using rule 99 (exp -> LPAR exp LPAR .)
    COMA            reduce using rule 99 (exp -> LPAR exp LPAR .)
    LLLAV           reduce using rule 99 (exp -> LPAR exp LPAR .)
    RCOR            reduce using rule 99 (exp -> LPAR exp LPAR .)
    RPAR            reduce using rule 99 (exp -> LPAR exp LPAR .)
    ARROW2          reduce using rule 99 (exp -> LPAR exp LPAR .)
    ORSINGLE        reduce using rule 99 (exp -> LPAR exp LPAR .)
    PUNTO           reduce using rule 99 (exp -> LPAR exp LPAR .)


state 211

    (76) declaracion -> LET asignacion_simple IGUAL . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 277
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 212

    (77) declaracion -> LET MUT asignacion .

    PCOMA           reduce using rule 77 (declaracion -> LET MUT asignacion .)


state 213

    (91) asignacion_simple -> MUT ID . DPUNTOS tipo_var
    (93) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE tipo_var
    (95) asignacion_simple -> MUT ID . DPUNTOS ANDSINGLE MUT tipo_var
    (80) asignacion -> ID . lista_arr IGUAL auxexp
    (82) lista_assign -> ID .
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

    DPUNTOS         shift and go to state 128
    IGUAL           reduce using rule 82 (lista_assign -> ID .)
    PUNTO           reduce using rule 82 (lista_assign -> ID .)
    LCOR            shift and go to state 162

    lista_arr                      shift and go to state 214

state 214

    (80) asignacion -> ID lista_arr . IGUAL auxexp
    (86) lista_arr -> lista_arr . LCOR auxexp RCOR

    IGUAL           shift and go to state 217
    LCOR            shift and go to state 218


state 215

    (79) asignacion -> lista_assign IGUAL auxexp .

    PCOMA           reduce using rule 79 (asignacion -> lista_assign IGUAL auxexp .)


state 216

    (81) lista_assign -> lista_assign PUNTO ID .

    IGUAL           reduce using rule 81 (lista_assign -> lista_assign PUNTO ID .)
    PUNTO           reduce using rule 81 (lista_assign -> lista_assign PUNTO ID .)


state 217

    (80) asignacion -> ID lista_arr IGUAL . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 278
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 218

    (86) lista_arr -> lista_arr LCOR . auxexp RCOR
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 279
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 219

    (163) llamada -> ID LPAR RPAR .

    PCOMA           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MAS             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MENOS           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MULTIPLICACION  reduce using rule 163 (llamada -> ID LPAR RPAR .)
    DIVISION        reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MODULO          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    AND             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    OR              reduce using rule 163 (llamada -> ID LPAR RPAR .)
    IGUALI          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    DIF             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MAYOR           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MENOR           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MAYORI          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MENORI          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    AS              reduce using rule 163 (llamada -> ID LPAR RPAR .)
    RLLAV           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    PRINT           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    LET             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    ID              reduce using rule 163 (llamada -> ID LPAR RPAR .)
    CONTINUE        reduce using rule 163 (llamada -> ID LPAR RPAR .)
    BREAK           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    RETURN          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    IF              reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MATCH           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    LOOP            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    WHILE           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    FOR             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    LPAR            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    AD              reduce using rule 163 (llamada -> ID LPAR RPAR .)
    VEC             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    VECTOR          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    MUT             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    ANDSINGLE       reduce using rule 163 (llamada -> ID LPAR RPAR .)
    I64             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    F64             reduce using rule 163 (llamada -> ID LPAR RPAR .)
    ENTERO          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    DECIMAL         reduce using rule 163 (llamada -> ID LPAR RPAR .)
    CADENA          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    BOOLEANO        reduce using rule 163 (llamada -> ID LPAR RPAR .)
    CARACTER        reduce using rule 163 (llamada -> ID LPAR RPAR .)
    LCOR            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    COMA            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    LLLAV           reduce using rule 163 (llamada -> ID LPAR RPAR .)
    RCOR            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    RPAR            reduce using rule 163 (llamada -> ID LPAR RPAR .)
    ARROW2          reduce using rule 163 (llamada -> ID LPAR RPAR .)
    ORSINGLE        reduce using rule 163 (llamada -> ID LPAR RPAR .)
    PUNTO           reduce using rule 163 (llamada -> ID LPAR RPAR .)


state 220

    (164) llamada -> ID LPAR lista_exp . RPAR
    (88) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 280
    COMA            shift and go to state 267


state 221

    (89) lista_exp -> auxexp .

    RPAR            reduce using rule 89 (lista_exp -> auxexp .)
    COMA            reduce using rule 89 (lista_exp -> auxexp .)


state 222

    (87) lista_arr -> LCOR auxexp . RCOR

    RCOR            shift and go to state 281


state 223

    (38) if -> IF exp statement . else
    (39) else -> . ELSE statement
    (40) else -> . ELSE if
    (41) else -> . epsilon
    (42) epsilon -> .

    ELSE            shift and go to state 283
    RLLAV           reduce using rule 42 (epsilon -> .)
    PRINT           reduce using rule 42 (epsilon -> .)
    LET             reduce using rule 42 (epsilon -> .)
    ID              reduce using rule 42 (epsilon -> .)
    CONTINUE        reduce using rule 42 (epsilon -> .)
    BREAK           reduce using rule 42 (epsilon -> .)
    RETURN          reduce using rule 42 (epsilon -> .)
    IF              reduce using rule 42 (epsilon -> .)
    MATCH           reduce using rule 42 (epsilon -> .)
    LOOP            reduce using rule 42 (epsilon -> .)
    WHILE           reduce using rule 42 (epsilon -> .)
    FOR             reduce using rule 42 (epsilon -> .)
    LPAR            reduce using rule 42 (epsilon -> .)
    MENOS           reduce using rule 42 (epsilon -> .)
    AD              reduce using rule 42 (epsilon -> .)
    VEC             reduce using rule 42 (epsilon -> .)
    VECTOR          reduce using rule 42 (epsilon -> .)
    MUT             reduce using rule 42 (epsilon -> .)
    ANDSINGLE       reduce using rule 42 (epsilon -> .)
    I64             reduce using rule 42 (epsilon -> .)
    F64             reduce using rule 42 (epsilon -> .)
    ENTERO          reduce using rule 42 (epsilon -> .)
    DECIMAL         reduce using rule 42 (epsilon -> .)
    CADENA          reduce using rule 42 (epsilon -> .)
    BOOLEANO        reduce using rule 42 (epsilon -> .)
    CARACTER        reduce using rule 42 (epsilon -> .)
    LCOR            reduce using rule 42 (epsilon -> .)
    MAS             reduce using rule 42 (epsilon -> .)
    MULTIPLICACION  reduce using rule 42 (epsilon -> .)
    DIVISION        reduce using rule 42 (epsilon -> .)
    MODULO          reduce using rule 42 (epsilon -> .)
    AND             reduce using rule 42 (epsilon -> .)
    OR              reduce using rule 42 (epsilon -> .)
    IGUALI          reduce using rule 42 (epsilon -> .)
    DIF             reduce using rule 42 (epsilon -> .)
    MAYOR           reduce using rule 42 (epsilon -> .)
    MENOR           reduce using rule 42 (epsilon -> .)
    MAYORI          reduce using rule 42 (epsilon -> .)
    MENORI          reduce using rule 42 (epsilon -> .)
    AS              reduce using rule 42 (epsilon -> .)
    PCOMA           reduce using rule 42 (epsilon -> .)
    COMA            reduce using rule 42 (epsilon -> .)
    LLLAV           reduce using rule 42 (epsilon -> .)
    RCOR            reduce using rule 42 (epsilon -> .)
    RPAR            reduce using rule 42 (epsilon -> .)
    ARROW2          reduce using rule 42 (epsilon -> .)
    ORSINGLE        reduce using rule 42 (epsilon -> .)
    PUNTO           reduce using rule 42 (epsilon -> .)

    else                           shift and go to state 282
    epsilon                        shift and go to state 284

state 224

    (113) expmath -> exp MAS exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MAS             reduce using rule 113 (expmath -> exp MAS exp .)
    MENOS           reduce using rule 113 (expmath -> exp MAS exp .)
    MODULO          reduce using rule 113 (expmath -> exp MAS exp .)
    AND             reduce using rule 113 (expmath -> exp MAS exp .)
    OR              reduce using rule 113 (expmath -> exp MAS exp .)
    IGUALI          reduce using rule 113 (expmath -> exp MAS exp .)
    DIF             reduce using rule 113 (expmath -> exp MAS exp .)
    MAYOR           reduce using rule 113 (expmath -> exp MAS exp .)
    MENOR           reduce using rule 113 (expmath -> exp MAS exp .)
    MAYORI          reduce using rule 113 (expmath -> exp MAS exp .)
    MENORI          reduce using rule 113 (expmath -> exp MAS exp .)
    AS              reduce using rule 113 (expmath -> exp MAS exp .)
    PCOMA           reduce using rule 113 (expmath -> exp MAS exp .)
    RLLAV           reduce using rule 113 (expmath -> exp MAS exp .)
    PRINT           reduce using rule 113 (expmath -> exp MAS exp .)
    LET             reduce using rule 113 (expmath -> exp MAS exp .)
    ID              reduce using rule 113 (expmath -> exp MAS exp .)
    CONTINUE        reduce using rule 113 (expmath -> exp MAS exp .)
    BREAK           reduce using rule 113 (expmath -> exp MAS exp .)
    RETURN          reduce using rule 113 (expmath -> exp MAS exp .)
    IF              reduce using rule 113 (expmath -> exp MAS exp .)
    MATCH           reduce using rule 113 (expmath -> exp MAS exp .)
    LOOP            reduce using rule 113 (expmath -> exp MAS exp .)
    WHILE           reduce using rule 113 (expmath -> exp MAS exp .)
    FOR             reduce using rule 113 (expmath -> exp MAS exp .)
    LPAR            reduce using rule 113 (expmath -> exp MAS exp .)
    AD              reduce using rule 113 (expmath -> exp MAS exp .)
    VEC             reduce using rule 113 (expmath -> exp MAS exp .)
    VECTOR          reduce using rule 113 (expmath -> exp MAS exp .)
    MUT             reduce using rule 113 (expmath -> exp MAS exp .)
    ANDSINGLE       reduce using rule 113 (expmath -> exp MAS exp .)
    I64             reduce using rule 113 (expmath -> exp MAS exp .)
    F64             reduce using rule 113 (expmath -> exp MAS exp .)
    ENTERO          reduce using rule 113 (expmath -> exp MAS exp .)
    DECIMAL         reduce using rule 113 (expmath -> exp MAS exp .)
    CADENA          reduce using rule 113 (expmath -> exp MAS exp .)
    BOOLEANO        reduce using rule 113 (expmath -> exp MAS exp .)
    CARACTER        reduce using rule 113 (expmath -> exp MAS exp .)
    LCOR            reduce using rule 113 (expmath -> exp MAS exp .)
    COMA            reduce using rule 113 (expmath -> exp MAS exp .)
    LLLAV           reduce using rule 113 (expmath -> exp MAS exp .)
    RCOR            reduce using rule 113 (expmath -> exp MAS exp .)
    RPAR            reduce using rule 113 (expmath -> exp MAS exp .)
    ARROW2          reduce using rule 113 (expmath -> exp MAS exp .)
    ORSINGLE        reduce using rule 113 (expmath -> exp MAS exp .)
    PUNTO           reduce using rule 113 (expmath -> exp MAS exp .)
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MULTIPLICACION  [ reduce using rule 113 (expmath -> exp MAS exp .) ]
  ! DIVISION        [ reduce using rule 113 (expmath -> exp MAS exp .) ]
  ! MAS             [ shift and go to state 167 ]
  ! MENOS           [ shift and go to state 168 ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 225

    (114) expmath -> exp MENOS exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MAS             reduce using rule 114 (expmath -> exp MENOS exp .)
    MENOS           reduce using rule 114 (expmath -> exp MENOS exp .)
    MODULO          reduce using rule 114 (expmath -> exp MENOS exp .)
    AND             reduce using rule 114 (expmath -> exp MENOS exp .)
    OR              reduce using rule 114 (expmath -> exp MENOS exp .)
    IGUALI          reduce using rule 114 (expmath -> exp MENOS exp .)
    DIF             reduce using rule 114 (expmath -> exp MENOS exp .)
    MAYOR           reduce using rule 114 (expmath -> exp MENOS exp .)
    MENOR           reduce using rule 114 (expmath -> exp MENOS exp .)
    MAYORI          reduce using rule 114 (expmath -> exp MENOS exp .)
    MENORI          reduce using rule 114 (expmath -> exp MENOS exp .)
    AS              reduce using rule 114 (expmath -> exp MENOS exp .)
    PCOMA           reduce using rule 114 (expmath -> exp MENOS exp .)
    RLLAV           reduce using rule 114 (expmath -> exp MENOS exp .)
    PRINT           reduce using rule 114 (expmath -> exp MENOS exp .)
    LET             reduce using rule 114 (expmath -> exp MENOS exp .)
    ID              reduce using rule 114 (expmath -> exp MENOS exp .)
    CONTINUE        reduce using rule 114 (expmath -> exp MENOS exp .)
    BREAK           reduce using rule 114 (expmath -> exp MENOS exp .)
    RETURN          reduce using rule 114 (expmath -> exp MENOS exp .)
    IF              reduce using rule 114 (expmath -> exp MENOS exp .)
    MATCH           reduce using rule 114 (expmath -> exp MENOS exp .)
    LOOP            reduce using rule 114 (expmath -> exp MENOS exp .)
    WHILE           reduce using rule 114 (expmath -> exp MENOS exp .)
    FOR             reduce using rule 114 (expmath -> exp MENOS exp .)
    LPAR            reduce using rule 114 (expmath -> exp MENOS exp .)
    AD              reduce using rule 114 (expmath -> exp MENOS exp .)
    VEC             reduce using rule 114 (expmath -> exp MENOS exp .)
    VECTOR          reduce using rule 114 (expmath -> exp MENOS exp .)
    MUT             reduce using rule 114 (expmath -> exp MENOS exp .)
    ANDSINGLE       reduce using rule 114 (expmath -> exp MENOS exp .)
    I64             reduce using rule 114 (expmath -> exp MENOS exp .)
    F64             reduce using rule 114 (expmath -> exp MENOS exp .)
    ENTERO          reduce using rule 114 (expmath -> exp MENOS exp .)
    DECIMAL         reduce using rule 114 (expmath -> exp MENOS exp .)
    CADENA          reduce using rule 114 (expmath -> exp MENOS exp .)
    BOOLEANO        reduce using rule 114 (expmath -> exp MENOS exp .)
    CARACTER        reduce using rule 114 (expmath -> exp MENOS exp .)
    LCOR            reduce using rule 114 (expmath -> exp MENOS exp .)
    COMA            reduce using rule 114 (expmath -> exp MENOS exp .)
    LLLAV           reduce using rule 114 (expmath -> exp MENOS exp .)
    RCOR            reduce using rule 114 (expmath -> exp MENOS exp .)
    RPAR            reduce using rule 114 (expmath -> exp MENOS exp .)
    ARROW2          reduce using rule 114 (expmath -> exp MENOS exp .)
    ORSINGLE        reduce using rule 114 (expmath -> exp MENOS exp .)
    PUNTO           reduce using rule 114 (expmath -> exp MENOS exp .)
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MULTIPLICACION  [ reduce using rule 114 (expmath -> exp MENOS exp .) ]
  ! DIVISION        [ reduce using rule 114 (expmath -> exp MENOS exp .) ]
  ! MAS             [ shift and go to state 167 ]
  ! MENOS           [ shift and go to state 168 ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 226

    (115) expmath -> exp MULTIPLICACION exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MAS             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MENOS           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MULTIPLICACION  reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    DIVISION        reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MODULO          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    AND             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    OR              reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    IGUALI          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    DIF             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MAYOR           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MENOR           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MAYORI          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MENORI          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    AS              reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    PCOMA           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    RLLAV           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    PRINT           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    LET             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    ID              reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    CONTINUE        reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    BREAK           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    RETURN          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    IF              reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MATCH           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    LOOP            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    WHILE           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    FOR             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    LPAR            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    AD              reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    VEC             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    VECTOR          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    MUT             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    ANDSINGLE       reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    I64             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    F64             reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    ENTERO          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    DECIMAL         reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    CADENA          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    BOOLEANO        reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    CARACTER        reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    LCOR            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    COMA            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    LLLAV           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    RCOR            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    RPAR            reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    ARROW2          reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    ORSINGLE        reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)
    PUNTO           reduce using rule 115 (expmath -> exp MULTIPLICACION exp .)

  ! MAS             [ shift and go to state 167 ]
  ! MENOS           [ shift and go to state 168 ]
  ! MULTIPLICACION  [ shift and go to state 169 ]
  ! DIVISION        [ shift and go to state 170 ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 227

    (116) expmath -> exp DIVISION exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MAS             reduce using rule 116 (expmath -> exp DIVISION exp .)
    MENOS           reduce using rule 116 (expmath -> exp DIVISION exp .)
    MULTIPLICACION  reduce using rule 116 (expmath -> exp DIVISION exp .)
    DIVISION        reduce using rule 116 (expmath -> exp DIVISION exp .)
    MODULO          reduce using rule 116 (expmath -> exp DIVISION exp .)
    AND             reduce using rule 116 (expmath -> exp DIVISION exp .)
    OR              reduce using rule 116 (expmath -> exp DIVISION exp .)
    IGUALI          reduce using rule 116 (expmath -> exp DIVISION exp .)
    DIF             reduce using rule 116 (expmath -> exp DIVISION exp .)
    MAYOR           reduce using rule 116 (expmath -> exp DIVISION exp .)
    MENOR           reduce using rule 116 (expmath -> exp DIVISION exp .)
    MAYORI          reduce using rule 116 (expmath -> exp DIVISION exp .)
    MENORI          reduce using rule 116 (expmath -> exp DIVISION exp .)
    AS              reduce using rule 116 (expmath -> exp DIVISION exp .)
    PCOMA           reduce using rule 116 (expmath -> exp DIVISION exp .)
    RLLAV           reduce using rule 116 (expmath -> exp DIVISION exp .)
    PRINT           reduce using rule 116 (expmath -> exp DIVISION exp .)
    LET             reduce using rule 116 (expmath -> exp DIVISION exp .)
    ID              reduce using rule 116 (expmath -> exp DIVISION exp .)
    CONTINUE        reduce using rule 116 (expmath -> exp DIVISION exp .)
    BREAK           reduce using rule 116 (expmath -> exp DIVISION exp .)
    RETURN          reduce using rule 116 (expmath -> exp DIVISION exp .)
    IF              reduce using rule 116 (expmath -> exp DIVISION exp .)
    MATCH           reduce using rule 116 (expmath -> exp DIVISION exp .)
    LOOP            reduce using rule 116 (expmath -> exp DIVISION exp .)
    WHILE           reduce using rule 116 (expmath -> exp DIVISION exp .)
    FOR             reduce using rule 116 (expmath -> exp DIVISION exp .)
    LPAR            reduce using rule 116 (expmath -> exp DIVISION exp .)
    AD              reduce using rule 116 (expmath -> exp DIVISION exp .)
    VEC             reduce using rule 116 (expmath -> exp DIVISION exp .)
    VECTOR          reduce using rule 116 (expmath -> exp DIVISION exp .)
    MUT             reduce using rule 116 (expmath -> exp DIVISION exp .)
    ANDSINGLE       reduce using rule 116 (expmath -> exp DIVISION exp .)
    I64             reduce using rule 116 (expmath -> exp DIVISION exp .)
    F64             reduce using rule 116 (expmath -> exp DIVISION exp .)
    ENTERO          reduce using rule 116 (expmath -> exp DIVISION exp .)
    DECIMAL         reduce using rule 116 (expmath -> exp DIVISION exp .)
    CADENA          reduce using rule 116 (expmath -> exp DIVISION exp .)
    BOOLEANO        reduce using rule 116 (expmath -> exp DIVISION exp .)
    CARACTER        reduce using rule 116 (expmath -> exp DIVISION exp .)
    LCOR            reduce using rule 116 (expmath -> exp DIVISION exp .)
    COMA            reduce using rule 116 (expmath -> exp DIVISION exp .)
    LLLAV           reduce using rule 116 (expmath -> exp DIVISION exp .)
    RCOR            reduce using rule 116 (expmath -> exp DIVISION exp .)
    RPAR            reduce using rule 116 (expmath -> exp DIVISION exp .)
    ARROW2          reduce using rule 116 (expmath -> exp DIVISION exp .)
    ORSINGLE        reduce using rule 116 (expmath -> exp DIVISION exp .)
    PUNTO           reduce using rule 116 (expmath -> exp DIVISION exp .)

  ! MAS             [ shift and go to state 167 ]
  ! MENOS           [ shift and go to state 168 ]
  ! MULTIPLICACION  [ shift and go to state 169 ]
  ! DIVISION        [ shift and go to state 170 ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 228

    (117) expmath -> exp MODULO exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

  ! shift/reduce conflict for MAS resolved as shift
  ! shift/reduce conflict for MENOS resolved as shift
  ! shift/reduce conflict for MULTIPLICACION resolved as shift
  ! shift/reduce conflict for DIVISION resolved as shift
  ! shift/reduce conflict for MODULO resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for IGUALI resolved as shift
  ! shift/reduce conflict for DIF resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYORI resolved as shift
  ! shift/reduce conflict for MENORI resolved as shift
  ! shift/reduce conflict for AS resolved as shift
    PCOMA           reduce using rule 117 (expmath -> exp MODULO exp .)
    RLLAV           reduce using rule 117 (expmath -> exp MODULO exp .)
    PRINT           reduce using rule 117 (expmath -> exp MODULO exp .)
    LET             reduce using rule 117 (expmath -> exp MODULO exp .)
    ID              reduce using rule 117 (expmath -> exp MODULO exp .)
    CONTINUE        reduce using rule 117 (expmath -> exp MODULO exp .)
    BREAK           reduce using rule 117 (expmath -> exp MODULO exp .)
    RETURN          reduce using rule 117 (expmath -> exp MODULO exp .)
    IF              reduce using rule 117 (expmath -> exp MODULO exp .)
    MATCH           reduce using rule 117 (expmath -> exp MODULO exp .)
    LOOP            reduce using rule 117 (expmath -> exp MODULO exp .)
    WHILE           reduce using rule 117 (expmath -> exp MODULO exp .)
    FOR             reduce using rule 117 (expmath -> exp MODULO exp .)
    LPAR            reduce using rule 117 (expmath -> exp MODULO exp .)
    AD              reduce using rule 117 (expmath -> exp MODULO exp .)
    VEC             reduce using rule 117 (expmath -> exp MODULO exp .)
    VECTOR          reduce using rule 117 (expmath -> exp MODULO exp .)
    MUT             reduce using rule 117 (expmath -> exp MODULO exp .)
    ANDSINGLE       reduce using rule 117 (expmath -> exp MODULO exp .)
    I64             reduce using rule 117 (expmath -> exp MODULO exp .)
    F64             reduce using rule 117 (expmath -> exp MODULO exp .)
    ENTERO          reduce using rule 117 (expmath -> exp MODULO exp .)
    DECIMAL         reduce using rule 117 (expmath -> exp MODULO exp .)
    CADENA          reduce using rule 117 (expmath -> exp MODULO exp .)
    BOOLEANO        reduce using rule 117 (expmath -> exp MODULO exp .)
    CARACTER        reduce using rule 117 (expmath -> exp MODULO exp .)
    LCOR            reduce using rule 117 (expmath -> exp MODULO exp .)
    COMA            reduce using rule 117 (expmath -> exp MODULO exp .)
    LLLAV           reduce using rule 117 (expmath -> exp MODULO exp .)
    RCOR            reduce using rule 117 (expmath -> exp MODULO exp .)
    RPAR            reduce using rule 117 (expmath -> exp MODULO exp .)
    ARROW2          reduce using rule 117 (expmath -> exp MODULO exp .)
    ORSINGLE        reduce using rule 117 (expmath -> exp MODULO exp .)
    PUNTO           reduce using rule 117 (expmath -> exp MODULO exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180

  ! MAS             [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MENOS           [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MULTIPLICACION  [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! DIVISION        [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MODULO          [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! AND             [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! OR              [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! IGUALI          [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! DIF             [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MAYOR           [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MENOR           [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MAYORI          [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! MENORI          [ reduce using rule 117 (expmath -> exp MODULO exp .) ]
  ! AS              [ reduce using rule 117 (expmath -> exp MODULO exp .) ]


state 229

    (121) expop -> exp AND exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 121 (expop -> exp AND exp .)
    AND             reduce using rule 121 (expop -> exp AND exp .)
    OR              reduce using rule 121 (expop -> exp AND exp .)
    AS              reduce using rule 121 (expop -> exp AND exp .)
    PCOMA           reduce using rule 121 (expop -> exp AND exp .)
    RLLAV           reduce using rule 121 (expop -> exp AND exp .)
    PRINT           reduce using rule 121 (expop -> exp AND exp .)
    LET             reduce using rule 121 (expop -> exp AND exp .)
    ID              reduce using rule 121 (expop -> exp AND exp .)
    CONTINUE        reduce using rule 121 (expop -> exp AND exp .)
    BREAK           reduce using rule 121 (expop -> exp AND exp .)
    RETURN          reduce using rule 121 (expop -> exp AND exp .)
    IF              reduce using rule 121 (expop -> exp AND exp .)
    MATCH           reduce using rule 121 (expop -> exp AND exp .)
    LOOP            reduce using rule 121 (expop -> exp AND exp .)
    WHILE           reduce using rule 121 (expop -> exp AND exp .)
    FOR             reduce using rule 121 (expop -> exp AND exp .)
    LPAR            reduce using rule 121 (expop -> exp AND exp .)
    AD              reduce using rule 121 (expop -> exp AND exp .)
    VEC             reduce using rule 121 (expop -> exp AND exp .)
    VECTOR          reduce using rule 121 (expop -> exp AND exp .)
    MUT             reduce using rule 121 (expop -> exp AND exp .)
    ANDSINGLE       reduce using rule 121 (expop -> exp AND exp .)
    I64             reduce using rule 121 (expop -> exp AND exp .)
    F64             reduce using rule 121 (expop -> exp AND exp .)
    ENTERO          reduce using rule 121 (expop -> exp AND exp .)
    DECIMAL         reduce using rule 121 (expop -> exp AND exp .)
    CADENA          reduce using rule 121 (expop -> exp AND exp .)
    BOOLEANO        reduce using rule 121 (expop -> exp AND exp .)
    CARACTER        reduce using rule 121 (expop -> exp AND exp .)
    LCOR            reduce using rule 121 (expop -> exp AND exp .)
    COMA            reduce using rule 121 (expop -> exp AND exp .)
    LLLAV           reduce using rule 121 (expop -> exp AND exp .)
    RCOR            reduce using rule 121 (expop -> exp AND exp .)
    RPAR            reduce using rule 121 (expop -> exp AND exp .)
    ARROW2          reduce using rule 121 (expop -> exp AND exp .)
    ORSINGLE        reduce using rule 121 (expop -> exp AND exp .)
    PUNTO           reduce using rule 121 (expop -> exp AND exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179

  ! MAS             [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MENOS           [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MULTIPLICACION  [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! DIVISION        [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! IGUALI          [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! DIF             [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MAYOR           [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MENOR           [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MAYORI          [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MENORI          [ reduce using rule 121 (expop -> exp AND exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! AS              [ shift and go to state 180 ]


state 230

    (122) expop -> exp OR exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 122 (expop -> exp OR exp .)
    OR              reduce using rule 122 (expop -> exp OR exp .)
    AS              reduce using rule 122 (expop -> exp OR exp .)
    PCOMA           reduce using rule 122 (expop -> exp OR exp .)
    RLLAV           reduce using rule 122 (expop -> exp OR exp .)
    PRINT           reduce using rule 122 (expop -> exp OR exp .)
    LET             reduce using rule 122 (expop -> exp OR exp .)
    ID              reduce using rule 122 (expop -> exp OR exp .)
    CONTINUE        reduce using rule 122 (expop -> exp OR exp .)
    BREAK           reduce using rule 122 (expop -> exp OR exp .)
    RETURN          reduce using rule 122 (expop -> exp OR exp .)
    IF              reduce using rule 122 (expop -> exp OR exp .)
    MATCH           reduce using rule 122 (expop -> exp OR exp .)
    LOOP            reduce using rule 122 (expop -> exp OR exp .)
    WHILE           reduce using rule 122 (expop -> exp OR exp .)
    FOR             reduce using rule 122 (expop -> exp OR exp .)
    LPAR            reduce using rule 122 (expop -> exp OR exp .)
    AD              reduce using rule 122 (expop -> exp OR exp .)
    VEC             reduce using rule 122 (expop -> exp OR exp .)
    VECTOR          reduce using rule 122 (expop -> exp OR exp .)
    MUT             reduce using rule 122 (expop -> exp OR exp .)
    ANDSINGLE       reduce using rule 122 (expop -> exp OR exp .)
    I64             reduce using rule 122 (expop -> exp OR exp .)
    F64             reduce using rule 122 (expop -> exp OR exp .)
    ENTERO          reduce using rule 122 (expop -> exp OR exp .)
    DECIMAL         reduce using rule 122 (expop -> exp OR exp .)
    CADENA          reduce using rule 122 (expop -> exp OR exp .)
    BOOLEANO        reduce using rule 122 (expop -> exp OR exp .)
    CARACTER        reduce using rule 122 (expop -> exp OR exp .)
    LCOR            reduce using rule 122 (expop -> exp OR exp .)
    COMA            reduce using rule 122 (expop -> exp OR exp .)
    LLLAV           reduce using rule 122 (expop -> exp OR exp .)
    RCOR            reduce using rule 122 (expop -> exp OR exp .)
    RPAR            reduce using rule 122 (expop -> exp OR exp .)
    ARROW2          reduce using rule 122 (expop -> exp OR exp .)
    ORSINGLE        reduce using rule 122 (expop -> exp OR exp .)
    PUNTO           reduce using rule 122 (expop -> exp OR exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    AND             shift and go to state 172
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179

  ! MAS             [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MENOS           [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! DIVISION        [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! AND             [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! IGUALI          [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! DIF             [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MAYOR           [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MENOR           [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MAYORI          [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MENORI          [ reduce using rule 122 (expop -> exp OR exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! OR              [ shift and go to state 173 ]
  ! AS              [ shift and go to state 180 ]


state 231

    (125) exprel -> exp IGUALI exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 125 (exprel -> exp IGUALI exp .)
    AND             reduce using rule 125 (exprel -> exp IGUALI exp .)
    OR              reduce using rule 125 (exprel -> exp IGUALI exp .)
    IGUALI          reduce using rule 125 (exprel -> exp IGUALI exp .)
    DIF             reduce using rule 125 (exprel -> exp IGUALI exp .)
    MAYOR           reduce using rule 125 (exprel -> exp IGUALI exp .)
    MENOR           reduce using rule 125 (exprel -> exp IGUALI exp .)
    MAYORI          reduce using rule 125 (exprel -> exp IGUALI exp .)
    MENORI          reduce using rule 125 (exprel -> exp IGUALI exp .)
    AS              reduce using rule 125 (exprel -> exp IGUALI exp .)
    PCOMA           reduce using rule 125 (exprel -> exp IGUALI exp .)
    RLLAV           reduce using rule 125 (exprel -> exp IGUALI exp .)
    PRINT           reduce using rule 125 (exprel -> exp IGUALI exp .)
    LET             reduce using rule 125 (exprel -> exp IGUALI exp .)
    ID              reduce using rule 125 (exprel -> exp IGUALI exp .)
    CONTINUE        reduce using rule 125 (exprel -> exp IGUALI exp .)
    BREAK           reduce using rule 125 (exprel -> exp IGUALI exp .)
    RETURN          reduce using rule 125 (exprel -> exp IGUALI exp .)
    IF              reduce using rule 125 (exprel -> exp IGUALI exp .)
    MATCH           reduce using rule 125 (exprel -> exp IGUALI exp .)
    LOOP            reduce using rule 125 (exprel -> exp IGUALI exp .)
    WHILE           reduce using rule 125 (exprel -> exp IGUALI exp .)
    FOR             reduce using rule 125 (exprel -> exp IGUALI exp .)
    LPAR            reduce using rule 125 (exprel -> exp IGUALI exp .)
    AD              reduce using rule 125 (exprel -> exp IGUALI exp .)
    VEC             reduce using rule 125 (exprel -> exp IGUALI exp .)
    VECTOR          reduce using rule 125 (exprel -> exp IGUALI exp .)
    MUT             reduce using rule 125 (exprel -> exp IGUALI exp .)
    ANDSINGLE       reduce using rule 125 (exprel -> exp IGUALI exp .)
    I64             reduce using rule 125 (exprel -> exp IGUALI exp .)
    F64             reduce using rule 125 (exprel -> exp IGUALI exp .)
    ENTERO          reduce using rule 125 (exprel -> exp IGUALI exp .)
    DECIMAL         reduce using rule 125 (exprel -> exp IGUALI exp .)
    CADENA          reduce using rule 125 (exprel -> exp IGUALI exp .)
    BOOLEANO        reduce using rule 125 (exprel -> exp IGUALI exp .)
    CARACTER        reduce using rule 125 (exprel -> exp IGUALI exp .)
    LCOR            reduce using rule 125 (exprel -> exp IGUALI exp .)
    COMA            reduce using rule 125 (exprel -> exp IGUALI exp .)
    LLLAV           reduce using rule 125 (exprel -> exp IGUALI exp .)
    RCOR            reduce using rule 125 (exprel -> exp IGUALI exp .)
    RPAR            reduce using rule 125 (exprel -> exp IGUALI exp .)
    ARROW2          reduce using rule 125 (exprel -> exp IGUALI exp .)
    ORSINGLE        reduce using rule 125 (exprel -> exp IGUALI exp .)
    PUNTO           reduce using rule 125 (exprel -> exp IGUALI exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 125 (exprel -> exp IGUALI exp .) ]
  ! MENOS           [ reduce using rule 125 (exprel -> exp IGUALI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 125 (exprel -> exp IGUALI exp .) ]
  ! DIVISION        [ reduce using rule 125 (exprel -> exp IGUALI exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 232

    (126) exprel -> exp DIF exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 126 (exprel -> exp DIF exp .)
    AND             reduce using rule 126 (exprel -> exp DIF exp .)
    OR              reduce using rule 126 (exprel -> exp DIF exp .)
    IGUALI          reduce using rule 126 (exprel -> exp DIF exp .)
    DIF             reduce using rule 126 (exprel -> exp DIF exp .)
    MAYOR           reduce using rule 126 (exprel -> exp DIF exp .)
    MENOR           reduce using rule 126 (exprel -> exp DIF exp .)
    MAYORI          reduce using rule 126 (exprel -> exp DIF exp .)
    MENORI          reduce using rule 126 (exprel -> exp DIF exp .)
    AS              reduce using rule 126 (exprel -> exp DIF exp .)
    PCOMA           reduce using rule 126 (exprel -> exp DIF exp .)
    RLLAV           reduce using rule 126 (exprel -> exp DIF exp .)
    PRINT           reduce using rule 126 (exprel -> exp DIF exp .)
    LET             reduce using rule 126 (exprel -> exp DIF exp .)
    ID              reduce using rule 126 (exprel -> exp DIF exp .)
    CONTINUE        reduce using rule 126 (exprel -> exp DIF exp .)
    BREAK           reduce using rule 126 (exprel -> exp DIF exp .)
    RETURN          reduce using rule 126 (exprel -> exp DIF exp .)
    IF              reduce using rule 126 (exprel -> exp DIF exp .)
    MATCH           reduce using rule 126 (exprel -> exp DIF exp .)
    LOOP            reduce using rule 126 (exprel -> exp DIF exp .)
    WHILE           reduce using rule 126 (exprel -> exp DIF exp .)
    FOR             reduce using rule 126 (exprel -> exp DIF exp .)
    LPAR            reduce using rule 126 (exprel -> exp DIF exp .)
    AD              reduce using rule 126 (exprel -> exp DIF exp .)
    VEC             reduce using rule 126 (exprel -> exp DIF exp .)
    VECTOR          reduce using rule 126 (exprel -> exp DIF exp .)
    MUT             reduce using rule 126 (exprel -> exp DIF exp .)
    ANDSINGLE       reduce using rule 126 (exprel -> exp DIF exp .)
    I64             reduce using rule 126 (exprel -> exp DIF exp .)
    F64             reduce using rule 126 (exprel -> exp DIF exp .)
    ENTERO          reduce using rule 126 (exprel -> exp DIF exp .)
    DECIMAL         reduce using rule 126 (exprel -> exp DIF exp .)
    CADENA          reduce using rule 126 (exprel -> exp DIF exp .)
    BOOLEANO        reduce using rule 126 (exprel -> exp DIF exp .)
    CARACTER        reduce using rule 126 (exprel -> exp DIF exp .)
    LCOR            reduce using rule 126 (exprel -> exp DIF exp .)
    COMA            reduce using rule 126 (exprel -> exp DIF exp .)
    LLLAV           reduce using rule 126 (exprel -> exp DIF exp .)
    RCOR            reduce using rule 126 (exprel -> exp DIF exp .)
    RPAR            reduce using rule 126 (exprel -> exp DIF exp .)
    ARROW2          reduce using rule 126 (exprel -> exp DIF exp .)
    ORSINGLE        reduce using rule 126 (exprel -> exp DIF exp .)
    PUNTO           reduce using rule 126 (exprel -> exp DIF exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 126 (exprel -> exp DIF exp .) ]
  ! MENOS           [ reduce using rule 126 (exprel -> exp DIF exp .) ]
  ! MULTIPLICACION  [ reduce using rule 126 (exprel -> exp DIF exp .) ]
  ! DIVISION        [ reduce using rule 126 (exprel -> exp DIF exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 233

    (127) exprel -> exp MAYOR exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 127 (exprel -> exp MAYOR exp .)
    AND             reduce using rule 127 (exprel -> exp MAYOR exp .)
    OR              reduce using rule 127 (exprel -> exp MAYOR exp .)
    IGUALI          reduce using rule 127 (exprel -> exp MAYOR exp .)
    DIF             reduce using rule 127 (exprel -> exp MAYOR exp .)
    MAYOR           reduce using rule 127 (exprel -> exp MAYOR exp .)
    MENOR           reduce using rule 127 (exprel -> exp MAYOR exp .)
    MAYORI          reduce using rule 127 (exprel -> exp MAYOR exp .)
    MENORI          reduce using rule 127 (exprel -> exp MAYOR exp .)
    AS              reduce using rule 127 (exprel -> exp MAYOR exp .)
    PCOMA           reduce using rule 127 (exprel -> exp MAYOR exp .)
    RLLAV           reduce using rule 127 (exprel -> exp MAYOR exp .)
    PRINT           reduce using rule 127 (exprel -> exp MAYOR exp .)
    LET             reduce using rule 127 (exprel -> exp MAYOR exp .)
    ID              reduce using rule 127 (exprel -> exp MAYOR exp .)
    CONTINUE        reduce using rule 127 (exprel -> exp MAYOR exp .)
    BREAK           reduce using rule 127 (exprel -> exp MAYOR exp .)
    RETURN          reduce using rule 127 (exprel -> exp MAYOR exp .)
    IF              reduce using rule 127 (exprel -> exp MAYOR exp .)
    MATCH           reduce using rule 127 (exprel -> exp MAYOR exp .)
    LOOP            reduce using rule 127 (exprel -> exp MAYOR exp .)
    WHILE           reduce using rule 127 (exprel -> exp MAYOR exp .)
    FOR             reduce using rule 127 (exprel -> exp MAYOR exp .)
    LPAR            reduce using rule 127 (exprel -> exp MAYOR exp .)
    AD              reduce using rule 127 (exprel -> exp MAYOR exp .)
    VEC             reduce using rule 127 (exprel -> exp MAYOR exp .)
    VECTOR          reduce using rule 127 (exprel -> exp MAYOR exp .)
    MUT             reduce using rule 127 (exprel -> exp MAYOR exp .)
    ANDSINGLE       reduce using rule 127 (exprel -> exp MAYOR exp .)
    I64             reduce using rule 127 (exprel -> exp MAYOR exp .)
    F64             reduce using rule 127 (exprel -> exp MAYOR exp .)
    ENTERO          reduce using rule 127 (exprel -> exp MAYOR exp .)
    DECIMAL         reduce using rule 127 (exprel -> exp MAYOR exp .)
    CADENA          reduce using rule 127 (exprel -> exp MAYOR exp .)
    BOOLEANO        reduce using rule 127 (exprel -> exp MAYOR exp .)
    CARACTER        reduce using rule 127 (exprel -> exp MAYOR exp .)
    LCOR            reduce using rule 127 (exprel -> exp MAYOR exp .)
    COMA            reduce using rule 127 (exprel -> exp MAYOR exp .)
    LLLAV           reduce using rule 127 (exprel -> exp MAYOR exp .)
    RCOR            reduce using rule 127 (exprel -> exp MAYOR exp .)
    RPAR            reduce using rule 127 (exprel -> exp MAYOR exp .)
    ARROW2          reduce using rule 127 (exprel -> exp MAYOR exp .)
    ORSINGLE        reduce using rule 127 (exprel -> exp MAYOR exp .)
    PUNTO           reduce using rule 127 (exprel -> exp MAYOR exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 127 (exprel -> exp MAYOR exp .) ]
  ! MENOS           [ reduce using rule 127 (exprel -> exp MAYOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 127 (exprel -> exp MAYOR exp .) ]
  ! DIVISION        [ reduce using rule 127 (exprel -> exp MAYOR exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 234

    (128) exprel -> exp MENOR exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 128 (exprel -> exp MENOR exp .)
    AND             reduce using rule 128 (exprel -> exp MENOR exp .)
    OR              reduce using rule 128 (exprel -> exp MENOR exp .)
    IGUALI          reduce using rule 128 (exprel -> exp MENOR exp .)
    DIF             reduce using rule 128 (exprel -> exp MENOR exp .)
    MAYOR           reduce using rule 128 (exprel -> exp MENOR exp .)
    MENOR           reduce using rule 128 (exprel -> exp MENOR exp .)
    MAYORI          reduce using rule 128 (exprel -> exp MENOR exp .)
    MENORI          reduce using rule 128 (exprel -> exp MENOR exp .)
    AS              reduce using rule 128 (exprel -> exp MENOR exp .)
    PCOMA           reduce using rule 128 (exprel -> exp MENOR exp .)
    RLLAV           reduce using rule 128 (exprel -> exp MENOR exp .)
    PRINT           reduce using rule 128 (exprel -> exp MENOR exp .)
    LET             reduce using rule 128 (exprel -> exp MENOR exp .)
    ID              reduce using rule 128 (exprel -> exp MENOR exp .)
    CONTINUE        reduce using rule 128 (exprel -> exp MENOR exp .)
    BREAK           reduce using rule 128 (exprel -> exp MENOR exp .)
    RETURN          reduce using rule 128 (exprel -> exp MENOR exp .)
    IF              reduce using rule 128 (exprel -> exp MENOR exp .)
    MATCH           reduce using rule 128 (exprel -> exp MENOR exp .)
    LOOP            reduce using rule 128 (exprel -> exp MENOR exp .)
    WHILE           reduce using rule 128 (exprel -> exp MENOR exp .)
    FOR             reduce using rule 128 (exprel -> exp MENOR exp .)
    LPAR            reduce using rule 128 (exprel -> exp MENOR exp .)
    AD              reduce using rule 128 (exprel -> exp MENOR exp .)
    VEC             reduce using rule 128 (exprel -> exp MENOR exp .)
    VECTOR          reduce using rule 128 (exprel -> exp MENOR exp .)
    MUT             reduce using rule 128 (exprel -> exp MENOR exp .)
    ANDSINGLE       reduce using rule 128 (exprel -> exp MENOR exp .)
    I64             reduce using rule 128 (exprel -> exp MENOR exp .)
    F64             reduce using rule 128 (exprel -> exp MENOR exp .)
    ENTERO          reduce using rule 128 (exprel -> exp MENOR exp .)
    DECIMAL         reduce using rule 128 (exprel -> exp MENOR exp .)
    CADENA          reduce using rule 128 (exprel -> exp MENOR exp .)
    BOOLEANO        reduce using rule 128 (exprel -> exp MENOR exp .)
    CARACTER        reduce using rule 128 (exprel -> exp MENOR exp .)
    LCOR            reduce using rule 128 (exprel -> exp MENOR exp .)
    COMA            reduce using rule 128 (exprel -> exp MENOR exp .)
    LLLAV           reduce using rule 128 (exprel -> exp MENOR exp .)
    RCOR            reduce using rule 128 (exprel -> exp MENOR exp .)
    RPAR            reduce using rule 128 (exprel -> exp MENOR exp .)
    ARROW2          reduce using rule 128 (exprel -> exp MENOR exp .)
    ORSINGLE        reduce using rule 128 (exprel -> exp MENOR exp .)
    PUNTO           reduce using rule 128 (exprel -> exp MENOR exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 128 (exprel -> exp MENOR exp .) ]
  ! MENOS           [ reduce using rule 128 (exprel -> exp MENOR exp .) ]
  ! MULTIPLICACION  [ reduce using rule 128 (exprel -> exp MENOR exp .) ]
  ! DIVISION        [ reduce using rule 128 (exprel -> exp MENOR exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 235

    (129) exprel -> exp MAYORI exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 129 (exprel -> exp MAYORI exp .)
    AND             reduce using rule 129 (exprel -> exp MAYORI exp .)
    OR              reduce using rule 129 (exprel -> exp MAYORI exp .)
    IGUALI          reduce using rule 129 (exprel -> exp MAYORI exp .)
    DIF             reduce using rule 129 (exprel -> exp MAYORI exp .)
    MAYOR           reduce using rule 129 (exprel -> exp MAYORI exp .)
    MENOR           reduce using rule 129 (exprel -> exp MAYORI exp .)
    MAYORI          reduce using rule 129 (exprel -> exp MAYORI exp .)
    MENORI          reduce using rule 129 (exprel -> exp MAYORI exp .)
    AS              reduce using rule 129 (exprel -> exp MAYORI exp .)
    PCOMA           reduce using rule 129 (exprel -> exp MAYORI exp .)
    RLLAV           reduce using rule 129 (exprel -> exp MAYORI exp .)
    PRINT           reduce using rule 129 (exprel -> exp MAYORI exp .)
    LET             reduce using rule 129 (exprel -> exp MAYORI exp .)
    ID              reduce using rule 129 (exprel -> exp MAYORI exp .)
    CONTINUE        reduce using rule 129 (exprel -> exp MAYORI exp .)
    BREAK           reduce using rule 129 (exprel -> exp MAYORI exp .)
    RETURN          reduce using rule 129 (exprel -> exp MAYORI exp .)
    IF              reduce using rule 129 (exprel -> exp MAYORI exp .)
    MATCH           reduce using rule 129 (exprel -> exp MAYORI exp .)
    LOOP            reduce using rule 129 (exprel -> exp MAYORI exp .)
    WHILE           reduce using rule 129 (exprel -> exp MAYORI exp .)
    FOR             reduce using rule 129 (exprel -> exp MAYORI exp .)
    LPAR            reduce using rule 129 (exprel -> exp MAYORI exp .)
    AD              reduce using rule 129 (exprel -> exp MAYORI exp .)
    VEC             reduce using rule 129 (exprel -> exp MAYORI exp .)
    VECTOR          reduce using rule 129 (exprel -> exp MAYORI exp .)
    MUT             reduce using rule 129 (exprel -> exp MAYORI exp .)
    ANDSINGLE       reduce using rule 129 (exprel -> exp MAYORI exp .)
    I64             reduce using rule 129 (exprel -> exp MAYORI exp .)
    F64             reduce using rule 129 (exprel -> exp MAYORI exp .)
    ENTERO          reduce using rule 129 (exprel -> exp MAYORI exp .)
    DECIMAL         reduce using rule 129 (exprel -> exp MAYORI exp .)
    CADENA          reduce using rule 129 (exprel -> exp MAYORI exp .)
    BOOLEANO        reduce using rule 129 (exprel -> exp MAYORI exp .)
    CARACTER        reduce using rule 129 (exprel -> exp MAYORI exp .)
    LCOR            reduce using rule 129 (exprel -> exp MAYORI exp .)
    COMA            reduce using rule 129 (exprel -> exp MAYORI exp .)
    LLLAV           reduce using rule 129 (exprel -> exp MAYORI exp .)
    RCOR            reduce using rule 129 (exprel -> exp MAYORI exp .)
    RPAR            reduce using rule 129 (exprel -> exp MAYORI exp .)
    ARROW2          reduce using rule 129 (exprel -> exp MAYORI exp .)
    ORSINGLE        reduce using rule 129 (exprel -> exp MAYORI exp .)
    PUNTO           reduce using rule 129 (exprel -> exp MAYORI exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 129 (exprel -> exp MAYORI exp .) ]
  ! MENOS           [ reduce using rule 129 (exprel -> exp MAYORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 129 (exprel -> exp MAYORI exp .) ]
  ! DIVISION        [ reduce using rule 129 (exprel -> exp MAYORI exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 236

    (130) exprel -> exp MENORI exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    MODULO          reduce using rule 130 (exprel -> exp MENORI exp .)
    AND             reduce using rule 130 (exprel -> exp MENORI exp .)
    OR              reduce using rule 130 (exprel -> exp MENORI exp .)
    IGUALI          reduce using rule 130 (exprel -> exp MENORI exp .)
    DIF             reduce using rule 130 (exprel -> exp MENORI exp .)
    MAYOR           reduce using rule 130 (exprel -> exp MENORI exp .)
    MENOR           reduce using rule 130 (exprel -> exp MENORI exp .)
    MAYORI          reduce using rule 130 (exprel -> exp MENORI exp .)
    MENORI          reduce using rule 130 (exprel -> exp MENORI exp .)
    AS              reduce using rule 130 (exprel -> exp MENORI exp .)
    PCOMA           reduce using rule 130 (exprel -> exp MENORI exp .)
    RLLAV           reduce using rule 130 (exprel -> exp MENORI exp .)
    PRINT           reduce using rule 130 (exprel -> exp MENORI exp .)
    LET             reduce using rule 130 (exprel -> exp MENORI exp .)
    ID              reduce using rule 130 (exprel -> exp MENORI exp .)
    CONTINUE        reduce using rule 130 (exprel -> exp MENORI exp .)
    BREAK           reduce using rule 130 (exprel -> exp MENORI exp .)
    RETURN          reduce using rule 130 (exprel -> exp MENORI exp .)
    IF              reduce using rule 130 (exprel -> exp MENORI exp .)
    MATCH           reduce using rule 130 (exprel -> exp MENORI exp .)
    LOOP            reduce using rule 130 (exprel -> exp MENORI exp .)
    WHILE           reduce using rule 130 (exprel -> exp MENORI exp .)
    FOR             reduce using rule 130 (exprel -> exp MENORI exp .)
    LPAR            reduce using rule 130 (exprel -> exp MENORI exp .)
    AD              reduce using rule 130 (exprel -> exp MENORI exp .)
    VEC             reduce using rule 130 (exprel -> exp MENORI exp .)
    VECTOR          reduce using rule 130 (exprel -> exp MENORI exp .)
    MUT             reduce using rule 130 (exprel -> exp MENORI exp .)
    ANDSINGLE       reduce using rule 130 (exprel -> exp MENORI exp .)
    I64             reduce using rule 130 (exprel -> exp MENORI exp .)
    F64             reduce using rule 130 (exprel -> exp MENORI exp .)
    ENTERO          reduce using rule 130 (exprel -> exp MENORI exp .)
    DECIMAL         reduce using rule 130 (exprel -> exp MENORI exp .)
    CADENA          reduce using rule 130 (exprel -> exp MENORI exp .)
    BOOLEANO        reduce using rule 130 (exprel -> exp MENORI exp .)
    CARACTER        reduce using rule 130 (exprel -> exp MENORI exp .)
    LCOR            reduce using rule 130 (exprel -> exp MENORI exp .)
    COMA            reduce using rule 130 (exprel -> exp MENORI exp .)
    LLLAV           reduce using rule 130 (exprel -> exp MENORI exp .)
    RCOR            reduce using rule 130 (exprel -> exp MENORI exp .)
    RPAR            reduce using rule 130 (exprel -> exp MENORI exp .)
    ARROW2          reduce using rule 130 (exprel -> exp MENORI exp .)
    ORSINGLE        reduce using rule 130 (exprel -> exp MENORI exp .)
    PUNTO           reduce using rule 130 (exprel -> exp MENORI exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170

  ! MAS             [ reduce using rule 130 (exprel -> exp MENORI exp .) ]
  ! MENOS           [ reduce using rule 130 (exprel -> exp MENORI exp .) ]
  ! MULTIPLICACION  [ reduce using rule 130 (exprel -> exp MENORI exp .) ]
  ! DIVISION        [ reduce using rule 130 (exprel -> exp MENORI exp .) ]
  ! MODULO          [ shift and go to state 171 ]
  ! AND             [ shift and go to state 172 ]
  ! OR              [ shift and go to state 173 ]
  ! IGUALI          [ shift and go to state 174 ]
  ! DIF             [ shift and go to state 175 ]
  ! MAYOR           [ shift and go to state 176 ]
  ! MENOR           [ shift and go to state 177 ]
  ! MAYORI          [ shift and go to state 178 ]
  ! MENORI          [ shift and go to state 179 ]
  ! AS              [ shift and go to state 180 ]


state 237

    (124) expcast -> exp AS tipo_var .

    MAS             reduce using rule 124 (expcast -> exp AS tipo_var .)
    MENOS           reduce using rule 124 (expcast -> exp AS tipo_var .)
    MULTIPLICACION  reduce using rule 124 (expcast -> exp AS tipo_var .)
    DIVISION        reduce using rule 124 (expcast -> exp AS tipo_var .)
    MODULO          reduce using rule 124 (expcast -> exp AS tipo_var .)
    AND             reduce using rule 124 (expcast -> exp AS tipo_var .)
    OR              reduce using rule 124 (expcast -> exp AS tipo_var .)
    IGUALI          reduce using rule 124 (expcast -> exp AS tipo_var .)
    DIF             reduce using rule 124 (expcast -> exp AS tipo_var .)
    MAYOR           reduce using rule 124 (expcast -> exp AS tipo_var .)
    MENOR           reduce using rule 124 (expcast -> exp AS tipo_var .)
    MAYORI          reduce using rule 124 (expcast -> exp AS tipo_var .)
    MENORI          reduce using rule 124 (expcast -> exp AS tipo_var .)
    AS              reduce using rule 124 (expcast -> exp AS tipo_var .)
    PCOMA           reduce using rule 124 (expcast -> exp AS tipo_var .)
    RLLAV           reduce using rule 124 (expcast -> exp AS tipo_var .)
    PRINT           reduce using rule 124 (expcast -> exp AS tipo_var .)
    LET             reduce using rule 124 (expcast -> exp AS tipo_var .)
    ID              reduce using rule 124 (expcast -> exp AS tipo_var .)
    CONTINUE        reduce using rule 124 (expcast -> exp AS tipo_var .)
    BREAK           reduce using rule 124 (expcast -> exp AS tipo_var .)
    RETURN          reduce using rule 124 (expcast -> exp AS tipo_var .)
    IF              reduce using rule 124 (expcast -> exp AS tipo_var .)
    MATCH           reduce using rule 124 (expcast -> exp AS tipo_var .)
    LOOP            reduce using rule 124 (expcast -> exp AS tipo_var .)
    WHILE           reduce using rule 124 (expcast -> exp AS tipo_var .)
    FOR             reduce using rule 124 (expcast -> exp AS tipo_var .)
    LPAR            reduce using rule 124 (expcast -> exp AS tipo_var .)
    AD              reduce using rule 124 (expcast -> exp AS tipo_var .)
    VEC             reduce using rule 124 (expcast -> exp AS tipo_var .)
    VECTOR          reduce using rule 124 (expcast -> exp AS tipo_var .)
    MUT             reduce using rule 124 (expcast -> exp AS tipo_var .)
    ANDSINGLE       reduce using rule 124 (expcast -> exp AS tipo_var .)
    I64             reduce using rule 124 (expcast -> exp AS tipo_var .)
    F64             reduce using rule 124 (expcast -> exp AS tipo_var .)
    ENTERO          reduce using rule 124 (expcast -> exp AS tipo_var .)
    DECIMAL         reduce using rule 124 (expcast -> exp AS tipo_var .)
    CADENA          reduce using rule 124 (expcast -> exp AS tipo_var .)
    BOOLEANO        reduce using rule 124 (expcast -> exp AS tipo_var .)
    CARACTER        reduce using rule 124 (expcast -> exp AS tipo_var .)
    LCOR            reduce using rule 124 (expcast -> exp AS tipo_var .)
    COMA            reduce using rule 124 (expcast -> exp AS tipo_var .)
    LLLAV           reduce using rule 124 (expcast -> exp AS tipo_var .)
    RCOR            reduce using rule 124 (expcast -> exp AS tipo_var .)
    RPAR            reduce using rule 124 (expcast -> exp AS tipo_var .)
    ARROW2          reduce using rule 124 (expcast -> exp AS tipo_var .)
    ORSINGLE        reduce using rule 124 (expcast -> exp AS tipo_var .)
    PUNTO           reduce using rule 124 (expcast -> exp AS tipo_var .)


state 238

    (43) match -> MATCH exp match_statement .

    RLLAV           reduce using rule 43 (match -> MATCH exp match_statement .)
    PRINT           reduce using rule 43 (match -> MATCH exp match_statement .)
    LET             reduce using rule 43 (match -> MATCH exp match_statement .)
    ID              reduce using rule 43 (match -> MATCH exp match_statement .)
    CONTINUE        reduce using rule 43 (match -> MATCH exp match_statement .)
    BREAK           reduce using rule 43 (match -> MATCH exp match_statement .)
    RETURN          reduce using rule 43 (match -> MATCH exp match_statement .)
    IF              reduce using rule 43 (match -> MATCH exp match_statement .)
    MATCH           reduce using rule 43 (match -> MATCH exp match_statement .)
    LOOP            reduce using rule 43 (match -> MATCH exp match_statement .)
    WHILE           reduce using rule 43 (match -> MATCH exp match_statement .)
    FOR             reduce using rule 43 (match -> MATCH exp match_statement .)
    LPAR            reduce using rule 43 (match -> MATCH exp match_statement .)
    MENOS           reduce using rule 43 (match -> MATCH exp match_statement .)
    AD              reduce using rule 43 (match -> MATCH exp match_statement .)
    VEC             reduce using rule 43 (match -> MATCH exp match_statement .)
    VECTOR          reduce using rule 43 (match -> MATCH exp match_statement .)
    MUT             reduce using rule 43 (match -> MATCH exp match_statement .)
    ANDSINGLE       reduce using rule 43 (match -> MATCH exp match_statement .)
    I64             reduce using rule 43 (match -> MATCH exp match_statement .)
    F64             reduce using rule 43 (match -> MATCH exp match_statement .)
    ENTERO          reduce using rule 43 (match -> MATCH exp match_statement .)
    DECIMAL         reduce using rule 43 (match -> MATCH exp match_statement .)
    CADENA          reduce using rule 43 (match -> MATCH exp match_statement .)
    BOOLEANO        reduce using rule 43 (match -> MATCH exp match_statement .)
    CARACTER        reduce using rule 43 (match -> MATCH exp match_statement .)
    LCOR            reduce using rule 43 (match -> MATCH exp match_statement .)
    MAS             reduce using rule 43 (match -> MATCH exp match_statement .)
    MULTIPLICACION  reduce using rule 43 (match -> MATCH exp match_statement .)
    DIVISION        reduce using rule 43 (match -> MATCH exp match_statement .)
    MODULO          reduce using rule 43 (match -> MATCH exp match_statement .)
    AND             reduce using rule 43 (match -> MATCH exp match_statement .)
    OR              reduce using rule 43 (match -> MATCH exp match_statement .)
    IGUALI          reduce using rule 43 (match -> MATCH exp match_statement .)
    DIF             reduce using rule 43 (match -> MATCH exp match_statement .)
    MAYOR           reduce using rule 43 (match -> MATCH exp match_statement .)
    MENOR           reduce using rule 43 (match -> MATCH exp match_statement .)
    MAYORI          reduce using rule 43 (match -> MATCH exp match_statement .)
    MENORI          reduce using rule 43 (match -> MATCH exp match_statement .)
    AS              reduce using rule 43 (match -> MATCH exp match_statement .)
    PCOMA           reduce using rule 43 (match -> MATCH exp match_statement .)
    COMA            reduce using rule 43 (match -> MATCH exp match_statement .)
    LLLAV           reduce using rule 43 (match -> MATCH exp match_statement .)
    RCOR            reduce using rule 43 (match -> MATCH exp match_statement .)
    RPAR            reduce using rule 43 (match -> MATCH exp match_statement .)
    ARROW2          reduce using rule 43 (match -> MATCH exp match_statement .)
    ORSINGLE        reduce using rule 43 (match -> MATCH exp match_statement .)
    PUNTO           reduce using rule 43 (match -> MATCH exp match_statement .)


state 239

    (44) match_statement -> LLLAV . lista_brazos RLLAV
    (45) match_statement -> LLLAV . RLLAV
    (46) lista_brazos -> . lista_brazos brazo
    (47) lista_brazos -> . brazo
    (48) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (49) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (50) brazo -> . lista_exp_brazos ARROW2 statement
    (51) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (52) lista_exp_brazos -> . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    RLLAV           shift and go to state 286
    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    lista_brazos                   shift and go to state 285
    brazo                          shift and go to state 287
    lista_exp_brazos               shift and go to state 288
    exp                            shift and go to state 289
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 240

    (58) while -> WHILE exp statement .

    RLLAV           reduce using rule 58 (while -> WHILE exp statement .)
    PRINT           reduce using rule 58 (while -> WHILE exp statement .)
    LET             reduce using rule 58 (while -> WHILE exp statement .)
    ID              reduce using rule 58 (while -> WHILE exp statement .)
    CONTINUE        reduce using rule 58 (while -> WHILE exp statement .)
    BREAK           reduce using rule 58 (while -> WHILE exp statement .)
    RETURN          reduce using rule 58 (while -> WHILE exp statement .)
    IF              reduce using rule 58 (while -> WHILE exp statement .)
    MATCH           reduce using rule 58 (while -> WHILE exp statement .)
    LOOP            reduce using rule 58 (while -> WHILE exp statement .)
    WHILE           reduce using rule 58 (while -> WHILE exp statement .)
    FOR             reduce using rule 58 (while -> WHILE exp statement .)
    LPAR            reduce using rule 58 (while -> WHILE exp statement .)
    MENOS           reduce using rule 58 (while -> WHILE exp statement .)
    AD              reduce using rule 58 (while -> WHILE exp statement .)
    VEC             reduce using rule 58 (while -> WHILE exp statement .)
    VECTOR          reduce using rule 58 (while -> WHILE exp statement .)
    MUT             reduce using rule 58 (while -> WHILE exp statement .)
    ANDSINGLE       reduce using rule 58 (while -> WHILE exp statement .)
    I64             reduce using rule 58 (while -> WHILE exp statement .)
    F64             reduce using rule 58 (while -> WHILE exp statement .)
    ENTERO          reduce using rule 58 (while -> WHILE exp statement .)
    DECIMAL         reduce using rule 58 (while -> WHILE exp statement .)
    CADENA          reduce using rule 58 (while -> WHILE exp statement .)
    BOOLEANO        reduce using rule 58 (while -> WHILE exp statement .)
    CARACTER        reduce using rule 58 (while -> WHILE exp statement .)
    LCOR            reduce using rule 58 (while -> WHILE exp statement .)
    MAS             reduce using rule 58 (while -> WHILE exp statement .)
    MULTIPLICACION  reduce using rule 58 (while -> WHILE exp statement .)
    DIVISION        reduce using rule 58 (while -> WHILE exp statement .)
    MODULO          reduce using rule 58 (while -> WHILE exp statement .)
    AND             reduce using rule 58 (while -> WHILE exp statement .)
    OR              reduce using rule 58 (while -> WHILE exp statement .)
    IGUALI          reduce using rule 58 (while -> WHILE exp statement .)
    DIF             reduce using rule 58 (while -> WHILE exp statement .)
    MAYOR           reduce using rule 58 (while -> WHILE exp statement .)
    MENOR           reduce using rule 58 (while -> WHILE exp statement .)
    MAYORI          reduce using rule 58 (while -> WHILE exp statement .)
    MENORI          reduce using rule 58 (while -> WHILE exp statement .)
    AS              reduce using rule 58 (while -> WHILE exp statement .)
    PCOMA           reduce using rule 58 (while -> WHILE exp statement .)
    COMA            reduce using rule 58 (while -> WHILE exp statement .)
    LLLAV           reduce using rule 58 (while -> WHILE exp statement .)
    RCOR            reduce using rule 58 (while -> WHILE exp statement .)
    RPAR            reduce using rule 58 (while -> WHILE exp statement .)
    ARROW2          reduce using rule 58 (while -> WHILE exp statement .)
    ORSINGLE        reduce using rule 58 (while -> WHILE exp statement .)
    PUNTO           reduce using rule 58 (while -> WHILE exp statement .)


state 241

    (59) for -> FOR ID IN . foriterative statement
    (60) foriterative -> . exp PUNTO PUNTO exp
    (61) foriterative -> . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    foriterative                   shift and go to state 290
    exp                            shift and go to state 291
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 242

    (131) expstruct -> lista_classtype LLLAV lista_att . RLLAV
    (134) lista_att -> lista_att . COMA ID DPUNTOS auxexp

    RLLAV           shift and go to state 292
    COMA            shift and go to state 293


state 243

    (132) expstruct -> lista_classtype LLLAV RLLAV .

    PCOMA           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    RLLAV           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    PRINT           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    LET             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    ID              reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    CONTINUE        reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    BREAK           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    RETURN          reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    IF              reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    MATCH           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    LOOP            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    WHILE           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    FOR             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    LPAR            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    MENOS           reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    AD              reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    VEC             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    VECTOR          reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    MUT             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    I64             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    F64             reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    ENTERO          reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    DECIMAL         reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    CADENA          reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    BOOLEANO        reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    CARACTER        reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    LCOR            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    COMA            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    RCOR            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)
    RPAR            reduce using rule 132 (expstruct -> lista_classtype LLLAV RLLAV .)


state 244

    (135) lista_att -> ID . DPUNTOS auxexp

    DPUNTOS         shift and go to state 294


state 245

    (133) expstruct -> lista_classtype DPUNTOS DPUNTOS . llamada
    (161) lista_classtype -> lista_classtype DPUNTOS DPUNTOS . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR

    ID              shift and go to state 296

    llamada                        shift and go to state 295

state 246

    (83) lista_acc -> lista_acc PUNTO ID .

    PUNTO           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MAS             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MENOS           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MULTIPLICACION  reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    DIVISION        reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MODULO          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    AND             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    OR              reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    IGUALI          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    DIF             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MAYOR           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MENOR           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MAYORI          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MENORI          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    AS              reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    PCOMA           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    RLLAV           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    PRINT           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    LET             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    ID              reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    CONTINUE        reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    BREAK           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    RETURN          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    IF              reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MATCH           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    LOOP            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    WHILE           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    FOR             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    LPAR            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    AD              reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    VEC             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    VECTOR          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    MUT             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    ANDSINGLE       reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    I64             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    F64             reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    ENTERO          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    DECIMAL         reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    CADENA          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    BOOLEANO        reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    CARACTER        reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    LCOR            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    COMA            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    LLLAV           reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    RCOR            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    RPAR            reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    ARROW2          reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)
    ORSINGLE        reduce using rule 83 (lista_acc -> lista_acc PUNTO ID .)


state 247

    (84) lista_acc -> lista_acc PUNTO exp_native .

    PUNTO           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MAS             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MENOS           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MULTIPLICACION  reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    DIVISION        reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MODULO          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    AND             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    OR              reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    IGUALI          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    DIF             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MAYOR           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MENOR           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MAYORI          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MENORI          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    AS              reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    PCOMA           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    RLLAV           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    PRINT           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    LET             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    ID              reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    CONTINUE        reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    BREAK           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    RETURN          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    IF              reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MATCH           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    LOOP            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    WHILE           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    FOR             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    LPAR            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    AD              reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    VEC             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    VECTOR          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    MUT             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    ANDSINGLE       reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    I64             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    F64             reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    ENTERO          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    DECIMAL         reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    CADENA          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    BOOLEANO        reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    CARACTER        reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    LCOR            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    COMA            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    LLLAV           reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    RCOR            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    RPAR            reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    ARROW2          reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)
    ORSINGLE        reduce using rule 84 (lista_acc -> lista_acc PUNTO exp_native .)


state 248

    (165) exp_native -> TOSTRING . LPAR RPAR

    LPAR            shift and go to state 297


state 249

    (166) exp_native -> TOOWNED . LPAR RPAR

    LPAR            shift and go to state 298


state 250

    (167) exp_native -> CLONE . LPAR RPAR

    LPAR            shift and go to state 299


state 251

    (168) exp_native -> LEN . LPAR RPAR

    LPAR            shift and go to state 300


state 252

    (169) exp_native -> CAPACITY . LPAR RPAR

    LPAR            shift and go to state 301


state 253

    (170) exp_native -> REMOVE . LPAR exp RPAR

    LPAR            shift and go to state 302


state 254

    (171) exp_native -> CONTAINS . LPAR ANDSINGLE exp RPAR

    LPAR            shift and go to state 303


state 255

    (172) exp_native -> PUSH . LPAR exp RPAR

    LPAR            shift and go to state 304


state 256

    (173) exp_native -> INSERT . LPAR lista_exp RPAR

    LPAR            shift and go to state 305


state 257

    (174) exp_native -> CHARS . LPAR RPAR

    LPAR            shift and go to state 306


state 258

    (175) exp_native -> SQRT . LPAR RPAR

    LPAR            shift and go to state 307


state 259

    (176) exp_native -> ABS . LPAR RPAR

    LPAR            shift and go to state 308


state 260

    (112) exp -> valores PUNTO exp_native .

    MAS             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MENOS           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MULTIPLICACION  reduce using rule 112 (exp -> valores PUNTO exp_native .)
    DIVISION        reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MODULO          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    AND             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    OR              reduce using rule 112 (exp -> valores PUNTO exp_native .)
    IGUALI          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    DIF             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MAYOR           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MENOR           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MAYORI          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MENORI          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    AS              reduce using rule 112 (exp -> valores PUNTO exp_native .)
    PCOMA           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    RLLAV           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    PRINT           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    LET             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    ID              reduce using rule 112 (exp -> valores PUNTO exp_native .)
    CONTINUE        reduce using rule 112 (exp -> valores PUNTO exp_native .)
    BREAK           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    RETURN          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    IF              reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MATCH           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    LOOP            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    WHILE           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    FOR             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    LPAR            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    AD              reduce using rule 112 (exp -> valores PUNTO exp_native .)
    VEC             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    VECTOR          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    MUT             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    ANDSINGLE       reduce using rule 112 (exp -> valores PUNTO exp_native .)
    I64             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    F64             reduce using rule 112 (exp -> valores PUNTO exp_native .)
    ENTERO          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    DECIMAL         reduce using rule 112 (exp -> valores PUNTO exp_native .)
    CADENA          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    BOOLEANO        reduce using rule 112 (exp -> valores PUNTO exp_native .)
    CARACTER        reduce using rule 112 (exp -> valores PUNTO exp_native .)
    LCOR            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    COMA            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    LLLAV           reduce using rule 112 (exp -> valores PUNTO exp_native .)
    RCOR            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    RPAR            reduce using rule 112 (exp -> valores PUNTO exp_native .)
    ARROW2          reduce using rule 112 (exp -> valores PUNTO exp_native .)
    ORSINGLE        reduce using rule 112 (exp -> valores PUNTO exp_native .)
    PUNTO           reduce using rule 112 (exp -> valores PUNTO exp_native .)


state 261

    (140) expvec -> VEC AD newarray .

    MAS             reduce using rule 140 (expvec -> VEC AD newarray .)
    MENOS           reduce using rule 140 (expvec -> VEC AD newarray .)
    MULTIPLICACION  reduce using rule 140 (expvec -> VEC AD newarray .)
    DIVISION        reduce using rule 140 (expvec -> VEC AD newarray .)
    MODULO          reduce using rule 140 (expvec -> VEC AD newarray .)
    AND             reduce using rule 140 (expvec -> VEC AD newarray .)
    OR              reduce using rule 140 (expvec -> VEC AD newarray .)
    IGUALI          reduce using rule 140 (expvec -> VEC AD newarray .)
    DIF             reduce using rule 140 (expvec -> VEC AD newarray .)
    MAYOR           reduce using rule 140 (expvec -> VEC AD newarray .)
    MENOR           reduce using rule 140 (expvec -> VEC AD newarray .)
    MAYORI          reduce using rule 140 (expvec -> VEC AD newarray .)
    MENORI          reduce using rule 140 (expvec -> VEC AD newarray .)
    AS              reduce using rule 140 (expvec -> VEC AD newarray .)
    PCOMA           reduce using rule 140 (expvec -> VEC AD newarray .)
    RLLAV           reduce using rule 140 (expvec -> VEC AD newarray .)
    PRINT           reduce using rule 140 (expvec -> VEC AD newarray .)
    LET             reduce using rule 140 (expvec -> VEC AD newarray .)
    ID              reduce using rule 140 (expvec -> VEC AD newarray .)
    CONTINUE        reduce using rule 140 (expvec -> VEC AD newarray .)
    BREAK           reduce using rule 140 (expvec -> VEC AD newarray .)
    RETURN          reduce using rule 140 (expvec -> VEC AD newarray .)
    IF              reduce using rule 140 (expvec -> VEC AD newarray .)
    MATCH           reduce using rule 140 (expvec -> VEC AD newarray .)
    LOOP            reduce using rule 140 (expvec -> VEC AD newarray .)
    WHILE           reduce using rule 140 (expvec -> VEC AD newarray .)
    FOR             reduce using rule 140 (expvec -> VEC AD newarray .)
    LPAR            reduce using rule 140 (expvec -> VEC AD newarray .)
    AD              reduce using rule 140 (expvec -> VEC AD newarray .)
    VEC             reduce using rule 140 (expvec -> VEC AD newarray .)
    VECTOR          reduce using rule 140 (expvec -> VEC AD newarray .)
    MUT             reduce using rule 140 (expvec -> VEC AD newarray .)
    ANDSINGLE       reduce using rule 140 (expvec -> VEC AD newarray .)
    I64             reduce using rule 140 (expvec -> VEC AD newarray .)
    F64             reduce using rule 140 (expvec -> VEC AD newarray .)
    ENTERO          reduce using rule 140 (expvec -> VEC AD newarray .)
    DECIMAL         reduce using rule 140 (expvec -> VEC AD newarray .)
    CADENA          reduce using rule 140 (expvec -> VEC AD newarray .)
    BOOLEANO        reduce using rule 140 (expvec -> VEC AD newarray .)
    CARACTER        reduce using rule 140 (expvec -> VEC AD newarray .)
    LCOR            reduce using rule 140 (expvec -> VEC AD newarray .)
    COMA            reduce using rule 140 (expvec -> VEC AD newarray .)
    LLLAV           reduce using rule 140 (expvec -> VEC AD newarray .)
    RCOR            reduce using rule 140 (expvec -> VEC AD newarray .)
    RPAR            reduce using rule 140 (expvec -> VEC AD newarray .)
    ARROW2          reduce using rule 140 (expvec -> VEC AD newarray .)
    ORSINGLE        reduce using rule 140 (expvec -> VEC AD newarray .)
    PUNTO           reduce using rule 140 (expvec -> VEC AD newarray .)


state 262

    (141) expvec -> VECTOR DPUNTOS DPUNTOS . exp_natarr
    (177) exp_natarr -> . NEW LPAR RPAR
    (178) exp_natarr -> . WITHCAPACITY LPAR exp RPAR

    NEW             shift and go to state 310
    WITHCAPACITY    shift and go to state 311

    exp_natarr                     shift and go to state 309

state 263

    (137) exparam -> ANDSINGLE MUT ID .

    MAS             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MENOS           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MULTIPLICACION  reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    DIVISION        reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MODULO          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    AND             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    OR              reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    IGUALI          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    DIF             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MAYOR           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MENOR           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MAYORI          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MENORI          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    AS              reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    PCOMA           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    RLLAV           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    PRINT           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    LET             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    ID              reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    CONTINUE        reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    BREAK           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    RETURN          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    IF              reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MATCH           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    LOOP            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    WHILE           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    FOR             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    LPAR            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    AD              reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    VEC             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    VECTOR          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    MUT             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    ANDSINGLE       reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    I64             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    F64             reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    ENTERO          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    DECIMAL         reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    CADENA          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    BOOLEANO        reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    CARACTER        reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    LCOR            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    COMA            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    LLLAV           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    RCOR            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    RPAR            reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    ARROW2          reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    ORSINGLE        reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)
    PUNTO           reduce using rule 137 (exparam -> ANDSINGLE MUT ID .)


state 264

    (119) exppow -> I64 DPUNTOS DPUNTOS . POW LPAR exp COMA exp RPAR

    POW             shift and go to state 312


state 265

    (120) exppow -> F64 DPUNTOS DPUNTOS . POWF LPAR exp COMA exp RPAR

    POWF            shift and go to state 313


state 266

    (142) newarray -> LCOR lista_exp RCOR .

    MAS             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MENOS           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MULTIPLICACION  reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    DIVISION        reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MODULO          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    AND             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    OR              reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    IGUALI          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    DIF             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MAYOR           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MENOR           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MAYORI          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MENORI          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    AS              reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    PCOMA           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    RLLAV           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    PRINT           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    LET             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    ID              reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    CONTINUE        reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    BREAK           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    RETURN          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    IF              reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MATCH           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    LOOP            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    WHILE           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    FOR             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    LPAR            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    AD              reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    VEC             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    VECTOR          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    MUT             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    ANDSINGLE       reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    I64             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    F64             reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    ENTERO          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    DECIMAL         reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    CADENA          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    BOOLEANO        reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    CARACTER        reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    LCOR            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    COMA            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    LLLAV           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    RCOR            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    RPAR            reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    ARROW2          reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    ORSINGLE        reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)
    PUNTO           reduce using rule 142 (newarray -> LCOR lista_exp RCOR .)


state 267

    (88) lista_exp -> lista_exp COMA . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 314
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 268

    (143) newarray -> LCOR auxexp PCOMA . exp RCOR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 315
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 269

    (95) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT . tipo_var
    (149) tipo_var -> . I64
    (150) tipo_var -> . F64
    (151) tipo_var -> . STRING
    (152) tipo_var -> . ANDSINGLE aSTR
    (153) tipo_var -> . BOOL
    (154) tipo_var -> . CHAR
    (155) tipo_var -> . USIZE
    (156) tipo_var -> . lista_arr2
    (157) tipo_var -> . LCOR tipo_var RCOR
    (158) tipo_var -> . lista_classtype
    (159) tipo_var -> . VECTOR MENOR tipo_var MAYOR
    (160) tipo_var -> . VECTOR MENOR lista_classtype MAYOR
    (96) lista_arr2 -> . LCOR tipo_var PCOMA exp RCOR
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID

    I64             shift and go to state 52
    F64             shift and go to state 53
    STRING          shift and go to state 54
    ANDSINGLE       shift and go to state 55
    BOOL            shift and go to state 56
    CHAR            shift and go to state 57
    USIZE           shift and go to state 58
    LCOR            shift and go to state 60
    VECTOR          shift and go to state 62
    ID              shift and go to state 50

    tipo_var                       shift and go to state 316
    lista_arr2                     shift and go to state 59
    lista_classtype                shift and go to state 61

state 270

    (93) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .

    RPAR            reduce using rule 93 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .)
    COMA            reduce using rule 93 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .)
    IGUAL           reduce using rule 93 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE tipo_var .)


state 271

    (96) lista_arr2 -> LCOR tipo_var PCOMA exp . RCOR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RCOR            shift and go to state 317
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 272

    (161) lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .

    DPUNTOS         reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RLLAV           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    COMA            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RPAR            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IGUAL           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LLLAV           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RCOR            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PCOMA           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAYOR           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAS             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENOS           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MULTIPLICACION  reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DIVISION        reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MODULO          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AND             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    OR              reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IGUALI          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DIF             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENOR           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MAYORI          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MENORI          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AS              reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PRINT           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LET             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ID              reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CONTINUE        reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    BREAK           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    RETURN          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    IF              reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MATCH           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LOOP            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    WHILE           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    FOR             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LPAR            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    AD              reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    VEC             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    VECTOR          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    MUT             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ANDSINGLE       reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    I64             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    F64             reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ENTERO          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DECIMAL         reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CADENA          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    BOOLEANO        reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    CARACTER        reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LCOR            reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ARROW2          reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    ORSINGLE        reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    PUNTO           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)


state 273

    (159) tipo_var -> VECTOR MENOR tipo_var MAYOR .

    RLLAV           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    COMA            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RPAR            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    IGUAL           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LLLAV           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RCOR            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PCOMA           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAYOR           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAS             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENOS           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MULTIPLICACION  reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DIVISION        reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MODULO          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AND             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    OR              reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    IGUALI          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DIF             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENOR           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MAYORI          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MENORI          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AS              reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PRINT           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LET             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ID              reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CONTINUE        reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    BREAK           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    RETURN          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    IF              reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MATCH           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LOOP            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    WHILE           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    FOR             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LPAR            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    AD              reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    VEC             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    VECTOR          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    MUT             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ANDSINGLE       reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    I64             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    F64             reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ENTERO          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    DECIMAL         reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CADENA          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    BOOLEANO        reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    CARACTER        reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    LCOR            reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ARROW2          reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    ORSINGLE        reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)
    PUNTO           reduce using rule 159 (tipo_var -> VECTOR MENOR tipo_var MAYOR .)


state 274

    (160) tipo_var -> VECTOR MENOR lista_classtype MAYOR .

    RLLAV           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    COMA            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RPAR            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    IGUAL           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LLLAV           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RCOR            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PCOMA           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAYOR           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAS             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENOS           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MULTIPLICACION  reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DIVISION        reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MODULO          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AND             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    OR              reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    IGUALI          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DIF             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENOR           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MAYORI          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MENORI          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AS              reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PRINT           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LET             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ID              reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CONTINUE        reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    BREAK           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    RETURN          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    IF              reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MATCH           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LOOP            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    WHILE           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    FOR             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LPAR            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    AD              reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    VEC             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    VECTOR          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    MUT             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ANDSINGLE       reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    I64             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    F64             reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ENTERO          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    DECIMAL         reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CADENA          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    BOOLEANO        reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    CARACTER        reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    LCOR            reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ARROW2          reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    ORSINGLE        reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)
    PUNTO           reduce using rule 160 (tipo_var -> VECTOR MENOR lista_classtype MAYOR .)


state 275

    (70) lista_var -> lista_var COMA PUB ID DPUNTOS tipo_var .

    RLLAV           reduce using rule 70 (lista_var -> lista_var COMA PUB ID DPUNTOS tipo_var .)
    COMA            reduce using rule 70 (lista_var -> lista_var COMA PUB ID DPUNTOS tipo_var .)


state 276

    (179) print -> PRINT AD LPAR lista_exp . RPAR
    (88) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 318
    COMA            shift and go to state 267


state 277

    (76) declaracion -> LET asignacion_simple IGUAL auxexp .

    PCOMA           reduce using rule 76 (declaracion -> LET asignacion_simple IGUAL auxexp .)


state 278

    (80) asignacion -> ID lista_arr IGUAL auxexp .

    PCOMA           reduce using rule 80 (asignacion -> ID lista_arr IGUAL auxexp .)


state 279

    (86) lista_arr -> lista_arr LCOR auxexp . RCOR

    RCOR            shift and go to state 319


state 280

    (164) llamada -> ID LPAR lista_exp RPAR .

    PCOMA           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MAS             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MENOS           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MULTIPLICACION  reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    DIVISION        reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MODULO          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    AND             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    OR              reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    IGUALI          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    DIF             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MAYOR           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MENOR           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MAYORI          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MENORI          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    AS              reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    RLLAV           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    PRINT           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    LET             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    ID              reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    CONTINUE        reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    BREAK           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    RETURN          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    IF              reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MATCH           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    LOOP            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    WHILE           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    FOR             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    LPAR            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    AD              reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    VEC             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    VECTOR          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    MUT             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    ANDSINGLE       reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    I64             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    F64             reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    ENTERO          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    DECIMAL         reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    CADENA          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    BOOLEANO        reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    CARACTER        reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    LCOR            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    COMA            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    LLLAV           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    RCOR            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    RPAR            reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    ARROW2          reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    ORSINGLE        reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)
    PUNTO           reduce using rule 164 (llamada -> ID LPAR lista_exp RPAR .)


state 281

    (87) lista_arr -> LCOR auxexp RCOR .

    IGUAL           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    LCOR            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MAS             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MENOS           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MULTIPLICACION  reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    DIVISION        reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MODULO          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    AND             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    OR              reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    IGUALI          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    DIF             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MAYOR           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MENOR           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MAYORI          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MENORI          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    AS              reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    PCOMA           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    RLLAV           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    PRINT           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    LET             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    ID              reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    CONTINUE        reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    BREAK           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    RETURN          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    IF              reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MATCH           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    LOOP            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    WHILE           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    FOR             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    LPAR            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    AD              reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    VEC             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    VECTOR          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    MUT             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    ANDSINGLE       reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    I64             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    F64             reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    ENTERO          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    DECIMAL         reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    CADENA          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    BOOLEANO        reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    CARACTER        reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    COMA            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    LLLAV           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    RCOR            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    RPAR            reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    ARROW2          reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    ORSINGLE        reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)
    PUNTO           reduce using rule 87 (lista_arr -> LCOR auxexp RCOR .)


state 282

    (38) if -> IF exp statement else .

    RLLAV           reduce using rule 38 (if -> IF exp statement else .)
    PRINT           reduce using rule 38 (if -> IF exp statement else .)
    LET             reduce using rule 38 (if -> IF exp statement else .)
    ID              reduce using rule 38 (if -> IF exp statement else .)
    CONTINUE        reduce using rule 38 (if -> IF exp statement else .)
    BREAK           reduce using rule 38 (if -> IF exp statement else .)
    RETURN          reduce using rule 38 (if -> IF exp statement else .)
    IF              reduce using rule 38 (if -> IF exp statement else .)
    MATCH           reduce using rule 38 (if -> IF exp statement else .)
    LOOP            reduce using rule 38 (if -> IF exp statement else .)
    WHILE           reduce using rule 38 (if -> IF exp statement else .)
    FOR             reduce using rule 38 (if -> IF exp statement else .)
    LPAR            reduce using rule 38 (if -> IF exp statement else .)
    MENOS           reduce using rule 38 (if -> IF exp statement else .)
    AD              reduce using rule 38 (if -> IF exp statement else .)
    VEC             reduce using rule 38 (if -> IF exp statement else .)
    VECTOR          reduce using rule 38 (if -> IF exp statement else .)
    MUT             reduce using rule 38 (if -> IF exp statement else .)
    ANDSINGLE       reduce using rule 38 (if -> IF exp statement else .)
    I64             reduce using rule 38 (if -> IF exp statement else .)
    F64             reduce using rule 38 (if -> IF exp statement else .)
    ENTERO          reduce using rule 38 (if -> IF exp statement else .)
    DECIMAL         reduce using rule 38 (if -> IF exp statement else .)
    CADENA          reduce using rule 38 (if -> IF exp statement else .)
    BOOLEANO        reduce using rule 38 (if -> IF exp statement else .)
    CARACTER        reduce using rule 38 (if -> IF exp statement else .)
    LCOR            reduce using rule 38 (if -> IF exp statement else .)
    MAS             reduce using rule 38 (if -> IF exp statement else .)
    MULTIPLICACION  reduce using rule 38 (if -> IF exp statement else .)
    DIVISION        reduce using rule 38 (if -> IF exp statement else .)
    MODULO          reduce using rule 38 (if -> IF exp statement else .)
    AND             reduce using rule 38 (if -> IF exp statement else .)
    OR              reduce using rule 38 (if -> IF exp statement else .)
    IGUALI          reduce using rule 38 (if -> IF exp statement else .)
    DIF             reduce using rule 38 (if -> IF exp statement else .)
    MAYOR           reduce using rule 38 (if -> IF exp statement else .)
    MENOR           reduce using rule 38 (if -> IF exp statement else .)
    MAYORI          reduce using rule 38 (if -> IF exp statement else .)
    MENORI          reduce using rule 38 (if -> IF exp statement else .)
    AS              reduce using rule 38 (if -> IF exp statement else .)
    PCOMA           reduce using rule 38 (if -> IF exp statement else .)
    COMA            reduce using rule 38 (if -> IF exp statement else .)
    LLLAV           reduce using rule 38 (if -> IF exp statement else .)
    RCOR            reduce using rule 38 (if -> IF exp statement else .)
    RPAR            reduce using rule 38 (if -> IF exp statement else .)
    ARROW2          reduce using rule 38 (if -> IF exp statement else .)
    ORSINGLE        reduce using rule 38 (if -> IF exp statement else .)
    PUNTO           reduce using rule 38 (if -> IF exp statement else .)


state 283

    (39) else -> ELSE . statement
    (40) else -> ELSE . if
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV
    (38) if -> . IF exp statement else

    LLLAV           shift and go to state 48
    IF              shift and go to state 97

    statement                      shift and go to state 320
    if                             shift and go to state 321

state 284

    (41) else -> epsilon .

    RLLAV           reduce using rule 41 (else -> epsilon .)
    PRINT           reduce using rule 41 (else -> epsilon .)
    LET             reduce using rule 41 (else -> epsilon .)
    ID              reduce using rule 41 (else -> epsilon .)
    CONTINUE        reduce using rule 41 (else -> epsilon .)
    BREAK           reduce using rule 41 (else -> epsilon .)
    RETURN          reduce using rule 41 (else -> epsilon .)
    IF              reduce using rule 41 (else -> epsilon .)
    MATCH           reduce using rule 41 (else -> epsilon .)
    LOOP            reduce using rule 41 (else -> epsilon .)
    WHILE           reduce using rule 41 (else -> epsilon .)
    FOR             reduce using rule 41 (else -> epsilon .)
    LPAR            reduce using rule 41 (else -> epsilon .)
    MENOS           reduce using rule 41 (else -> epsilon .)
    AD              reduce using rule 41 (else -> epsilon .)
    VEC             reduce using rule 41 (else -> epsilon .)
    VECTOR          reduce using rule 41 (else -> epsilon .)
    MUT             reduce using rule 41 (else -> epsilon .)
    ANDSINGLE       reduce using rule 41 (else -> epsilon .)
    I64             reduce using rule 41 (else -> epsilon .)
    F64             reduce using rule 41 (else -> epsilon .)
    ENTERO          reduce using rule 41 (else -> epsilon .)
    DECIMAL         reduce using rule 41 (else -> epsilon .)
    CADENA          reduce using rule 41 (else -> epsilon .)
    BOOLEANO        reduce using rule 41 (else -> epsilon .)
    CARACTER        reduce using rule 41 (else -> epsilon .)
    LCOR            reduce using rule 41 (else -> epsilon .)
    MAS             reduce using rule 41 (else -> epsilon .)
    MULTIPLICACION  reduce using rule 41 (else -> epsilon .)
    DIVISION        reduce using rule 41 (else -> epsilon .)
    MODULO          reduce using rule 41 (else -> epsilon .)
    AND             reduce using rule 41 (else -> epsilon .)
    OR              reduce using rule 41 (else -> epsilon .)
    IGUALI          reduce using rule 41 (else -> epsilon .)
    DIF             reduce using rule 41 (else -> epsilon .)
    MAYOR           reduce using rule 41 (else -> epsilon .)
    MENOR           reduce using rule 41 (else -> epsilon .)
    MAYORI          reduce using rule 41 (else -> epsilon .)
    MENORI          reduce using rule 41 (else -> epsilon .)
    AS              reduce using rule 41 (else -> epsilon .)
    PCOMA           reduce using rule 41 (else -> epsilon .)
    COMA            reduce using rule 41 (else -> epsilon .)
    LLLAV           reduce using rule 41 (else -> epsilon .)
    RCOR            reduce using rule 41 (else -> epsilon .)
    RPAR            reduce using rule 41 (else -> epsilon .)
    ARROW2          reduce using rule 41 (else -> epsilon .)
    ORSINGLE        reduce using rule 41 (else -> epsilon .)
    PUNTO           reduce using rule 41 (else -> epsilon .)


state 285

    (44) match_statement -> LLLAV lista_brazos . RLLAV
    (46) lista_brazos -> lista_brazos . brazo
    (48) brazo -> . lista_exp_brazos ARROW2 instruccion_match COMA
    (49) brazo -> . lista_exp_brazos ARROW2 statement COMA
    (50) brazo -> . lista_exp_brazos ARROW2 statement
    (51) lista_exp_brazos -> . lista_exp_brazos ORSINGLE exp
    (52) lista_exp_brazos -> . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    RLLAV           shift and go to state 322
    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    brazo                          shift and go to state 323
    lista_exp_brazos               shift and go to state 288
    exp                            shift and go to state 289
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 286

    (45) match_statement -> LLLAV RLLAV .

    RLLAV           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    PRINT           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    LET             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    ID              reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    CONTINUE        reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    BREAK           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    RETURN          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    IF              reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MATCH           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    LOOP            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    WHILE           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    FOR             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    LPAR            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MENOS           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    AD              reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    VEC             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    VECTOR          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MUT             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    ANDSINGLE       reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    I64             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    F64             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    ENTERO          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    DECIMAL         reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    CADENA          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    BOOLEANO        reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    CARACTER        reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    LCOR            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MAS             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MULTIPLICACION  reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    DIVISION        reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MODULO          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    AND             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    OR              reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    IGUALI          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    DIF             reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MAYOR           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MENOR           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MAYORI          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    MENORI          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    AS              reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    PCOMA           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    COMA            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    LLLAV           reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    RCOR            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    RPAR            reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    ARROW2          reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    ORSINGLE        reduce using rule 45 (match_statement -> LLLAV RLLAV .)
    PUNTO           reduce using rule 45 (match_statement -> LLLAV RLLAV .)


state 287

    (47) lista_brazos -> brazo .

    RLLAV           reduce using rule 47 (lista_brazos -> brazo .)
    LPAR            reduce using rule 47 (lista_brazos -> brazo .)
    MENOS           reduce using rule 47 (lista_brazos -> brazo .)
    AD              reduce using rule 47 (lista_brazos -> brazo .)
    ID              reduce using rule 47 (lista_brazos -> brazo .)
    VEC             reduce using rule 47 (lista_brazos -> brazo .)
    VECTOR          reduce using rule 47 (lista_brazos -> brazo .)
    MUT             reduce using rule 47 (lista_brazos -> brazo .)
    ANDSINGLE       reduce using rule 47 (lista_brazos -> brazo .)
    I64             reduce using rule 47 (lista_brazos -> brazo .)
    F64             reduce using rule 47 (lista_brazos -> brazo .)
    ENTERO          reduce using rule 47 (lista_brazos -> brazo .)
    DECIMAL         reduce using rule 47 (lista_brazos -> brazo .)
    CADENA          reduce using rule 47 (lista_brazos -> brazo .)
    BOOLEANO        reduce using rule 47 (lista_brazos -> brazo .)
    CARACTER        reduce using rule 47 (lista_brazos -> brazo .)
    LCOR            reduce using rule 47 (lista_brazos -> brazo .)
    IF              reduce using rule 47 (lista_brazos -> brazo .)
    MATCH           reduce using rule 47 (lista_brazos -> brazo .)
    LOOP            reduce using rule 47 (lista_brazos -> brazo .)
    WHILE           reduce using rule 47 (lista_brazos -> brazo .)
    FOR             reduce using rule 47 (lista_brazos -> brazo .)


state 288

    (48) brazo -> lista_exp_brazos . ARROW2 instruccion_match COMA
    (49) brazo -> lista_exp_brazos . ARROW2 statement COMA
    (50) brazo -> lista_exp_brazos . ARROW2 statement
    (51) lista_exp_brazos -> lista_exp_brazos . ORSINGLE exp

    ARROW2          shift and go to state 324
    ORSINGLE        shift and go to state 325


state 289

    (52) lista_exp_brazos -> exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    ARROW2          reduce using rule 52 (lista_exp_brazos -> exp .)
    ORSINGLE        reduce using rule 52 (lista_exp_brazos -> exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 290

    (59) for -> FOR ID IN foriterative . statement
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV

    LLLAV           shift and go to state 48

    statement                      shift and go to state 326

state 291

    (60) foriterative -> exp . PUNTO PUNTO exp
    (61) foriterative -> exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    PUNTO           shift and go to state 327
    LLLAV           reduce using rule 61 (foriterative -> exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 292

    (131) expstruct -> lista_classtype LLLAV lista_att RLLAV .

    PCOMA           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RLLAV           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    PRINT           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LET             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ID              reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CONTINUE        reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    BREAK           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RETURN          reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    IF              reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MATCH           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LOOP            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    WHILE           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    FOR             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LPAR            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MENOS           reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    AD              reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    VEC             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    VECTOR          reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    MUT             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ANDSINGLE       reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    I64             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    F64             reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    ENTERO          reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    DECIMAL         reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CADENA          reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    BOOLEANO        reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    CARACTER        reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    LCOR            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    COMA            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RCOR            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)
    RPAR            reduce using rule 131 (expstruct -> lista_classtype LLLAV lista_att RLLAV .)


state 293

    (134) lista_att -> lista_att COMA . ID DPUNTOS auxexp

    ID              shift and go to state 328


state 294

    (135) lista_att -> ID DPUNTOS . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 329
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 295

    (133) expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .

    PCOMA           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RLLAV           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    PRINT           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LET             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ID              reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CONTINUE        reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    BREAK           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RETURN          reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    IF              reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MATCH           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LOOP            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    WHILE           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    FOR             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LPAR            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MENOS           reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    AD              reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    VEC             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    VECTOR          reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    MUT             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ANDSINGLE       reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    I64             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    F64             reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    ENTERO          reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    DECIMAL         reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CADENA          reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    BOOLEANO        reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    CARACTER        reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    LCOR            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    COMA            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RCOR            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)
    RPAR            reduce using rule 133 (expstruct -> lista_classtype DPUNTOS DPUNTOS llamada .)


state 296

    (161) lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .
    (163) llamada -> ID . LPAR RPAR
    (164) llamada -> ID . LPAR lista_exp RPAR

    LLLAV           reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    DPUNTOS         reduce using rule 161 (lista_classtype -> lista_classtype DPUNTOS DPUNTOS ID .)
    LPAR            shift and go to state 161


state 297

    (165) exp_native -> TOSTRING LPAR . RPAR

    RPAR            shift and go to state 330


state 298

    (166) exp_native -> TOOWNED LPAR . RPAR

    RPAR            shift and go to state 331


state 299

    (167) exp_native -> CLONE LPAR . RPAR

    RPAR            shift and go to state 332


state 300

    (168) exp_native -> LEN LPAR . RPAR

    RPAR            shift and go to state 333


state 301

    (169) exp_native -> CAPACITY LPAR . RPAR

    RPAR            shift and go to state 334


state 302

    (170) exp_native -> REMOVE LPAR . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 335
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 303

    (171) exp_native -> CONTAINS LPAR . ANDSINGLE exp RPAR

    ANDSINGLE       shift and go to state 336


state 304

    (172) exp_native -> PUSH LPAR . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 337
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 305

    (173) exp_native -> INSERT LPAR . lista_exp RPAR
    (88) lista_exp -> . lista_exp COMA auxexp
    (89) lista_exp -> . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    lista_exp                      shift and go to state 338
    auxexp                         shift and go to state 221
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 306

    (174) exp_native -> CHARS LPAR . RPAR

    RPAR            shift and go to state 339


state 307

    (175) exp_native -> SQRT LPAR . RPAR

    RPAR            shift and go to state 340


state 308

    (176) exp_native -> ABS LPAR . RPAR

    RPAR            shift and go to state 341


state 309

    (141) expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .

    MAS             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENOS           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MULTIPLICACION  reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DIVISION        reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MODULO          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AND             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    OR              reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    IGUALI          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DIF             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MAYOR           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENOR           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MAYORI          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MENORI          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AS              reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    PCOMA           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RLLAV           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    PRINT           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LET             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ID              reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CONTINUE        reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    BREAK           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RETURN          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    IF              reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MATCH           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LOOP            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    WHILE           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    FOR             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LPAR            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    AD              reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    VEC             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    VECTOR          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    MUT             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ANDSINGLE       reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    I64             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    F64             reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ENTERO          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    DECIMAL         reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CADENA          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    BOOLEANO        reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    CARACTER        reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LCOR            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    COMA            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    LLLAV           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RCOR            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    RPAR            reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ARROW2          reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    ORSINGLE        reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)
    PUNTO           reduce using rule 141 (expvec -> VECTOR DPUNTOS DPUNTOS exp_natarr .)


state 310

    (177) exp_natarr -> NEW . LPAR RPAR

    LPAR            shift and go to state 342


state 311

    (178) exp_natarr -> WITHCAPACITY . LPAR exp RPAR

    LPAR            shift and go to state 343


state 312

    (119) exppow -> I64 DPUNTOS DPUNTOS POW . LPAR exp COMA exp RPAR

    LPAR            shift and go to state 344


state 313

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF . LPAR exp COMA exp RPAR

    LPAR            shift and go to state 345


state 314

    (88) lista_exp -> lista_exp COMA auxexp .

    RCOR            reduce using rule 88 (lista_exp -> lista_exp COMA auxexp .)
    COMA            reduce using rule 88 (lista_exp -> lista_exp COMA auxexp .)
    RPAR            reduce using rule 88 (lista_exp -> lista_exp COMA auxexp .)


state 315

    (143) newarray -> LCOR auxexp PCOMA exp . RCOR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RCOR            shift and go to state 346
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 316

    (95) asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .

    RPAR            reduce using rule 95 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .)
    COMA            reduce using rule 95 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .)
    IGUAL           reduce using rule 95 (asignacion_simple -> MUT ID DPUNTOS ANDSINGLE MUT tipo_var .)


state 317

    (96) lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .

    RLLAV           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    COMA            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RPAR            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IGUAL           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LLLAV           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RCOR            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PCOMA           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAYOR           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAS             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENOS           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MULTIPLICACION  reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DIVISION        reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MODULO          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AND             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    OR              reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IGUALI          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DIF             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENOR           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MAYORI          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MENORI          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AS              reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PRINT           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LET             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ID              reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CONTINUE        reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    BREAK           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    RETURN          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    IF              reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MATCH           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LOOP            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    WHILE           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    FOR             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LPAR            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    AD              reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    VEC             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    VECTOR          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    MUT             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ANDSINGLE       reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    I64             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    F64             reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ENTERO          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    DECIMAL         reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CADENA          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    BOOLEANO        reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    CARACTER        reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    LCOR            reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ARROW2          reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    ORSINGLE        reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)
    PUNTO           reduce using rule 96 (lista_arr2 -> LCOR tipo_var PCOMA exp RCOR .)


state 318

    (179) print -> PRINT AD LPAR lista_exp RPAR .

    PCOMA           reduce using rule 179 (print -> PRINT AD LPAR lista_exp RPAR .)
    COMA            reduce using rule 179 (print -> PRINT AD LPAR lista_exp RPAR .)


state 319

    (86) lista_arr -> lista_arr LCOR auxexp RCOR .

    IGUAL           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LCOR            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAS             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENOS           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MULTIPLICACION  reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DIVISION        reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MODULO          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AND             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    OR              reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    IGUALI          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DIF             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAYOR           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENOR           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MAYORI          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MENORI          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AS              reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PCOMA           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RLLAV           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PRINT           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LET             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ID              reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CONTINUE        reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    BREAK           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RETURN          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    IF              reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MATCH           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LOOP            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    WHILE           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    FOR             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LPAR            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    AD              reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    VEC             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    VECTOR          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    MUT             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ANDSINGLE       reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    I64             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    F64             reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ENTERO          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    DECIMAL         reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CADENA          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    BOOLEANO        reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    CARACTER        reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    COMA            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    LLLAV           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RCOR            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    RPAR            reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ARROW2          reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    ORSINGLE        reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)
    PUNTO           reduce using rule 86 (lista_arr -> lista_arr LCOR auxexp RCOR .)


state 320

    (39) else -> ELSE statement .

    RLLAV           reduce using rule 39 (else -> ELSE statement .)
    PRINT           reduce using rule 39 (else -> ELSE statement .)
    LET             reduce using rule 39 (else -> ELSE statement .)
    ID              reduce using rule 39 (else -> ELSE statement .)
    CONTINUE        reduce using rule 39 (else -> ELSE statement .)
    BREAK           reduce using rule 39 (else -> ELSE statement .)
    RETURN          reduce using rule 39 (else -> ELSE statement .)
    IF              reduce using rule 39 (else -> ELSE statement .)
    MATCH           reduce using rule 39 (else -> ELSE statement .)
    LOOP            reduce using rule 39 (else -> ELSE statement .)
    WHILE           reduce using rule 39 (else -> ELSE statement .)
    FOR             reduce using rule 39 (else -> ELSE statement .)
    LPAR            reduce using rule 39 (else -> ELSE statement .)
    MENOS           reduce using rule 39 (else -> ELSE statement .)
    AD              reduce using rule 39 (else -> ELSE statement .)
    VEC             reduce using rule 39 (else -> ELSE statement .)
    VECTOR          reduce using rule 39 (else -> ELSE statement .)
    MUT             reduce using rule 39 (else -> ELSE statement .)
    ANDSINGLE       reduce using rule 39 (else -> ELSE statement .)
    I64             reduce using rule 39 (else -> ELSE statement .)
    F64             reduce using rule 39 (else -> ELSE statement .)
    ENTERO          reduce using rule 39 (else -> ELSE statement .)
    DECIMAL         reduce using rule 39 (else -> ELSE statement .)
    CADENA          reduce using rule 39 (else -> ELSE statement .)
    BOOLEANO        reduce using rule 39 (else -> ELSE statement .)
    CARACTER        reduce using rule 39 (else -> ELSE statement .)
    LCOR            reduce using rule 39 (else -> ELSE statement .)
    MAS             reduce using rule 39 (else -> ELSE statement .)
    MULTIPLICACION  reduce using rule 39 (else -> ELSE statement .)
    DIVISION        reduce using rule 39 (else -> ELSE statement .)
    MODULO          reduce using rule 39 (else -> ELSE statement .)
    AND             reduce using rule 39 (else -> ELSE statement .)
    OR              reduce using rule 39 (else -> ELSE statement .)
    IGUALI          reduce using rule 39 (else -> ELSE statement .)
    DIF             reduce using rule 39 (else -> ELSE statement .)
    MAYOR           reduce using rule 39 (else -> ELSE statement .)
    MENOR           reduce using rule 39 (else -> ELSE statement .)
    MAYORI          reduce using rule 39 (else -> ELSE statement .)
    MENORI          reduce using rule 39 (else -> ELSE statement .)
    AS              reduce using rule 39 (else -> ELSE statement .)
    PCOMA           reduce using rule 39 (else -> ELSE statement .)
    COMA            reduce using rule 39 (else -> ELSE statement .)
    LLLAV           reduce using rule 39 (else -> ELSE statement .)
    RCOR            reduce using rule 39 (else -> ELSE statement .)
    RPAR            reduce using rule 39 (else -> ELSE statement .)
    ARROW2          reduce using rule 39 (else -> ELSE statement .)
    ORSINGLE        reduce using rule 39 (else -> ELSE statement .)
    PUNTO           reduce using rule 39 (else -> ELSE statement .)


state 321

    (40) else -> ELSE if .

    RLLAV           reduce using rule 40 (else -> ELSE if .)
    PRINT           reduce using rule 40 (else -> ELSE if .)
    LET             reduce using rule 40 (else -> ELSE if .)
    ID              reduce using rule 40 (else -> ELSE if .)
    CONTINUE        reduce using rule 40 (else -> ELSE if .)
    BREAK           reduce using rule 40 (else -> ELSE if .)
    RETURN          reduce using rule 40 (else -> ELSE if .)
    IF              reduce using rule 40 (else -> ELSE if .)
    MATCH           reduce using rule 40 (else -> ELSE if .)
    LOOP            reduce using rule 40 (else -> ELSE if .)
    WHILE           reduce using rule 40 (else -> ELSE if .)
    FOR             reduce using rule 40 (else -> ELSE if .)
    LPAR            reduce using rule 40 (else -> ELSE if .)
    MENOS           reduce using rule 40 (else -> ELSE if .)
    AD              reduce using rule 40 (else -> ELSE if .)
    VEC             reduce using rule 40 (else -> ELSE if .)
    VECTOR          reduce using rule 40 (else -> ELSE if .)
    MUT             reduce using rule 40 (else -> ELSE if .)
    ANDSINGLE       reduce using rule 40 (else -> ELSE if .)
    I64             reduce using rule 40 (else -> ELSE if .)
    F64             reduce using rule 40 (else -> ELSE if .)
    ENTERO          reduce using rule 40 (else -> ELSE if .)
    DECIMAL         reduce using rule 40 (else -> ELSE if .)
    CADENA          reduce using rule 40 (else -> ELSE if .)
    BOOLEANO        reduce using rule 40 (else -> ELSE if .)
    CARACTER        reduce using rule 40 (else -> ELSE if .)
    LCOR            reduce using rule 40 (else -> ELSE if .)
    MAS             reduce using rule 40 (else -> ELSE if .)
    MULTIPLICACION  reduce using rule 40 (else -> ELSE if .)
    DIVISION        reduce using rule 40 (else -> ELSE if .)
    MODULO          reduce using rule 40 (else -> ELSE if .)
    AND             reduce using rule 40 (else -> ELSE if .)
    OR              reduce using rule 40 (else -> ELSE if .)
    IGUALI          reduce using rule 40 (else -> ELSE if .)
    DIF             reduce using rule 40 (else -> ELSE if .)
    MAYOR           reduce using rule 40 (else -> ELSE if .)
    MENOR           reduce using rule 40 (else -> ELSE if .)
    MAYORI          reduce using rule 40 (else -> ELSE if .)
    MENORI          reduce using rule 40 (else -> ELSE if .)
    AS              reduce using rule 40 (else -> ELSE if .)
    PCOMA           reduce using rule 40 (else -> ELSE if .)
    COMA            reduce using rule 40 (else -> ELSE if .)
    LLLAV           reduce using rule 40 (else -> ELSE if .)
    RCOR            reduce using rule 40 (else -> ELSE if .)
    RPAR            reduce using rule 40 (else -> ELSE if .)
    ARROW2          reduce using rule 40 (else -> ELSE if .)
    ORSINGLE        reduce using rule 40 (else -> ELSE if .)
    PUNTO           reduce using rule 40 (else -> ELSE if .)


state 322

    (44) match_statement -> LLLAV lista_brazos RLLAV .

    RLLAV           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    PRINT           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    LET             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    ID              reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    CONTINUE        reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    BREAK           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    RETURN          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    IF              reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MATCH           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    LOOP            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    WHILE           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    FOR             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    LPAR            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENOS           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    AD              reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    VEC             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    VECTOR          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MUT             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    ANDSINGLE       reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    I64             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    F64             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    ENTERO          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    DECIMAL         reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    CADENA          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    BOOLEANO        reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    CARACTER        reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    LCOR            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAS             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MULTIPLICACION  reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    DIVISION        reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MODULO          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    AND             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    OR              reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    IGUALI          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    DIF             reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAYOR           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENOR           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MAYORI          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    MENORI          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    AS              reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    PCOMA           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    COMA            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    LLLAV           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    RCOR            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    RPAR            reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    ARROW2          reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    ORSINGLE        reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)
    PUNTO           reduce using rule 44 (match_statement -> LLLAV lista_brazos RLLAV .)


state 323

    (46) lista_brazos -> lista_brazos brazo .

    RLLAV           reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    LPAR            reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    MENOS           reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    AD              reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    ID              reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    VEC             reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    VECTOR          reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    MUT             reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    ANDSINGLE       reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    I64             reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    F64             reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    ENTERO          reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    DECIMAL         reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    CADENA          reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    BOOLEANO        reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    CARACTER        reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    LCOR            reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    IF              reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    MATCH           reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    LOOP            reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    WHILE           reduce using rule 46 (lista_brazos -> lista_brazos brazo .)
    FOR             reduce using rule 46 (lista_brazos -> lista_brazos brazo .)


state 324

    (48) brazo -> lista_exp_brazos ARROW2 . instruccion_match COMA
    (49) brazo -> lista_exp_brazos ARROW2 . statement COMA
    (50) brazo -> lista_exp_brazos ARROW2 . statement
    (53) instruccion_match -> . print
    (54) instruccion_match -> . llamada
    (55) instruccion_match -> . sentencia
    (56) instruccion_match -> . transferencia
    (68) statement -> . LLLAV instrucciones_l RLLAV
    (69) statement -> . LLLAV RLLAV
    (179) print -> . PRINT AD LPAR lista_exp RPAR
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (62) transferencia -> . CONTINUE
    (63) transferencia -> . BREAK
    (64) transferencia -> . BREAK auxexp
    (65) transferencia -> . RETURN
    (66) transferencia -> . RETURN auxexp
    (67) transferencia -> . auxexp
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR

    LLLAV           shift and go to state 48
    PRINT           shift and go to state 81
    ID              shift and go to state 353
    CONTINUE        shift and go to state 94
    BREAK           shift and go to state 95
    RETURN          shift and go to state 96
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102
    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127

    instruccion_match              shift and go to state 347
    statement                      shift and go to state 348
    print                          shift and go to state 349
    llamada                        shift and go to state 350
    sentencia                      shift and go to state 351
    transferencia                  shift and go to state 352
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93
    auxexp                         shift and go to state 85
    exp                            shift and go to state 98
    expstruct                      shift and go to state 103
    lista_classtype                shift and go to state 104
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    valores                        shift and go to state 114
    newarray                       shift and go to state 116

state 325

    (51) lista_exp_brazos -> lista_exp_brazos ORSINGLE . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 354
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 326

    (59) for -> FOR ID IN foriterative statement .

    RLLAV           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    PRINT           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    LET             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    ID              reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    CONTINUE        reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    BREAK           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    RETURN          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    IF              reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MATCH           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    LOOP            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    WHILE           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    FOR             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    LPAR            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MENOS           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    AD              reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    VEC             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    VECTOR          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MUT             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    ANDSINGLE       reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    I64             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    F64             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    ENTERO          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    DECIMAL         reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    CADENA          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    BOOLEANO        reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    CARACTER        reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    LCOR            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MAS             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MULTIPLICACION  reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    DIVISION        reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MODULO          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    AND             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    OR              reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    IGUALI          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    DIF             reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MAYOR           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MENOR           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MAYORI          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    MENORI          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    AS              reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    PCOMA           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    COMA            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    LLLAV           reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    RCOR            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    RPAR            reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    ARROW2          reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    ORSINGLE        reduce using rule 59 (for -> FOR ID IN foriterative statement .)
    PUNTO           reduce using rule 59 (for -> FOR ID IN foriterative statement .)


state 327

    (60) foriterative -> exp PUNTO . PUNTO exp

    PUNTO           shift and go to state 355


state 328

    (134) lista_att -> lista_att COMA ID . DPUNTOS auxexp

    DPUNTOS         shift and go to state 356


state 329

    (135) lista_att -> ID DPUNTOS auxexp .

    RLLAV           reduce using rule 135 (lista_att -> ID DPUNTOS auxexp .)
    COMA            reduce using rule 135 (lista_att -> ID DPUNTOS auxexp .)


state 330

    (165) exp_native -> TOSTRING LPAR RPAR .

    PUNTO           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MAS             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MENOS           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MULTIPLICACION  reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    DIVISION        reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MODULO          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    AND             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    OR              reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    IGUALI          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    DIF             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MAYOR           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MENOR           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MAYORI          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MENORI          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    AS              reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    PCOMA           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    RLLAV           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    PRINT           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    LET             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    ID              reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    CONTINUE        reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    BREAK           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    RETURN          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    IF              reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MATCH           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    LOOP            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    WHILE           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    FOR             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    LPAR            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    AD              reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    VEC             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    VECTOR          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    MUT             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    ANDSINGLE       reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    I64             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    F64             reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    ENTERO          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    DECIMAL         reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    CADENA          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    BOOLEANO        reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    CARACTER        reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    LCOR            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    COMA            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    LLLAV           reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    RCOR            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    RPAR            reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    ARROW2          reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)
    ORSINGLE        reduce using rule 165 (exp_native -> TOSTRING LPAR RPAR .)


state 331

    (166) exp_native -> TOOWNED LPAR RPAR .

    PUNTO           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MAS             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MENOS           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MULTIPLICACION  reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    DIVISION        reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MODULO          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    AND             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    OR              reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    IGUALI          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    DIF             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MAYOR           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MENOR           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MAYORI          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MENORI          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    AS              reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    PCOMA           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    RLLAV           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    PRINT           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    LET             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    ID              reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    CONTINUE        reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    BREAK           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    RETURN          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    IF              reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MATCH           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    LOOP            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    WHILE           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    FOR             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    LPAR            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    AD              reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    VEC             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    VECTOR          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    MUT             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    ANDSINGLE       reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    I64             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    F64             reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    ENTERO          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    DECIMAL         reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    CADENA          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    BOOLEANO        reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    CARACTER        reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    LCOR            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    COMA            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    LLLAV           reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    RCOR            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    RPAR            reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    ARROW2          reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)
    ORSINGLE        reduce using rule 166 (exp_native -> TOOWNED LPAR RPAR .)


state 332

    (167) exp_native -> CLONE LPAR RPAR .

    PUNTO           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MAS             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MENOS           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MULTIPLICACION  reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    DIVISION        reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MODULO          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    AND             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    OR              reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    IGUALI          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    DIF             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MAYOR           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MENOR           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MAYORI          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MENORI          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    AS              reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    PCOMA           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    RLLAV           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    PRINT           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    LET             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    ID              reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    CONTINUE        reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    BREAK           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    RETURN          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    IF              reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MATCH           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    LOOP            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    WHILE           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    FOR             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    LPAR            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    AD              reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    VEC             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    VECTOR          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    MUT             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    ANDSINGLE       reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    I64             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    F64             reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    ENTERO          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    DECIMAL         reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    CADENA          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    BOOLEANO        reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    CARACTER        reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    LCOR            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    COMA            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    LLLAV           reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    RCOR            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    RPAR            reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    ARROW2          reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)
    ORSINGLE        reduce using rule 167 (exp_native -> CLONE LPAR RPAR .)


state 333

    (168) exp_native -> LEN LPAR RPAR .

    PUNTO           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MAS             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MENOS           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MULTIPLICACION  reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    DIVISION        reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MODULO          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    AND             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    OR              reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    IGUALI          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    DIF             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MAYOR           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MENOR           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MAYORI          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MENORI          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    AS              reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    PCOMA           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    RLLAV           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    PRINT           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    LET             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    ID              reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    CONTINUE        reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    BREAK           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    RETURN          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    IF              reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MATCH           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    LOOP            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    WHILE           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    FOR             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    LPAR            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    AD              reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    VEC             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    VECTOR          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    MUT             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    ANDSINGLE       reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    I64             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    F64             reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    ENTERO          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    DECIMAL         reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    CADENA          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    BOOLEANO        reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    CARACTER        reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    LCOR            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    COMA            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    LLLAV           reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    RCOR            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    RPAR            reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    ARROW2          reduce using rule 168 (exp_native -> LEN LPAR RPAR .)
    ORSINGLE        reduce using rule 168 (exp_native -> LEN LPAR RPAR .)


state 334

    (169) exp_native -> CAPACITY LPAR RPAR .

    PUNTO           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MAS             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MENOS           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MULTIPLICACION  reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    DIVISION        reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MODULO          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    AND             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    OR              reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    IGUALI          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    DIF             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MAYOR           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MENOR           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MAYORI          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MENORI          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    AS              reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    PCOMA           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    RLLAV           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    PRINT           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    LET             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    ID              reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    CONTINUE        reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    BREAK           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    RETURN          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    IF              reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MATCH           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    LOOP            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    WHILE           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    FOR             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    LPAR            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    AD              reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    VEC             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    VECTOR          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    MUT             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    ANDSINGLE       reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    I64             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    F64             reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    ENTERO          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    DECIMAL         reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    CADENA          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    BOOLEANO        reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    CARACTER        reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    LCOR            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    COMA            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    LLLAV           reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    RCOR            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    RPAR            reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    ARROW2          reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)
    ORSINGLE        reduce using rule 169 (exp_native -> CAPACITY LPAR RPAR .)


state 335

    (170) exp_native -> REMOVE LPAR exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 357
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 336

    (171) exp_native -> CONTAINS LPAR ANDSINGLE . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 358
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 337

    (172) exp_native -> PUSH LPAR exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 359
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 338

    (173) exp_native -> INSERT LPAR lista_exp . RPAR
    (88) lista_exp -> lista_exp . COMA auxexp

    RPAR            shift and go to state 360
    COMA            shift and go to state 267


state 339

    (174) exp_native -> CHARS LPAR RPAR .

    PUNTO           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MAS             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MENOS           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MULTIPLICACION  reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    DIVISION        reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MODULO          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    AND             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    OR              reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    IGUALI          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    DIF             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MAYOR           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MENOR           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MAYORI          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MENORI          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    AS              reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    PCOMA           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    RLLAV           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    PRINT           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    LET             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    ID              reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    CONTINUE        reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    BREAK           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    RETURN          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    IF              reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MATCH           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    LOOP            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    WHILE           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    FOR             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    LPAR            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    AD              reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    VEC             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    VECTOR          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    MUT             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    ANDSINGLE       reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    I64             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    F64             reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    ENTERO          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    DECIMAL         reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    CADENA          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    BOOLEANO        reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    CARACTER        reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    LCOR            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    COMA            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    LLLAV           reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    RCOR            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    RPAR            reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    ARROW2          reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)
    ORSINGLE        reduce using rule 174 (exp_native -> CHARS LPAR RPAR .)


state 340

    (175) exp_native -> SQRT LPAR RPAR .

    PUNTO           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MAS             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MENOS           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MULTIPLICACION  reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    DIVISION        reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MODULO          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    AND             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    OR              reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    IGUALI          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    DIF             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MAYOR           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MENOR           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MAYORI          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MENORI          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    AS              reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    PCOMA           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    RLLAV           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    PRINT           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    LET             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    ID              reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    CONTINUE        reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    BREAK           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    RETURN          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    IF              reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MATCH           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    LOOP            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    WHILE           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    FOR             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    LPAR            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    AD              reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    VEC             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    VECTOR          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    MUT             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    ANDSINGLE       reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    I64             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    F64             reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    ENTERO          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    DECIMAL         reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    CADENA          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    BOOLEANO        reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    CARACTER        reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    LCOR            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    COMA            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    LLLAV           reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    RCOR            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    RPAR            reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    ARROW2          reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)
    ORSINGLE        reduce using rule 175 (exp_native -> SQRT LPAR RPAR .)


state 341

    (176) exp_native -> ABS LPAR RPAR .

    PUNTO           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MAS             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MENOS           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MULTIPLICACION  reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    DIVISION        reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MODULO          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    AND             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    OR              reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    IGUALI          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    DIF             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MAYOR           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MENOR           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MAYORI          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MENORI          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    AS              reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    PCOMA           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    RLLAV           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    PRINT           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    LET             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    ID              reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    CONTINUE        reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    BREAK           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    RETURN          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    IF              reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MATCH           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    LOOP            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    WHILE           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    FOR             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    LPAR            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    AD              reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    VEC             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    VECTOR          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    MUT             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    ANDSINGLE       reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    I64             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    F64             reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    ENTERO          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    DECIMAL         reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    CADENA          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    BOOLEANO        reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    CARACTER        reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    LCOR            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    COMA            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    LLLAV           reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    RCOR            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    RPAR            reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    ARROW2          reduce using rule 176 (exp_native -> ABS LPAR RPAR .)
    ORSINGLE        reduce using rule 176 (exp_native -> ABS LPAR RPAR .)


state 342

    (177) exp_natarr -> NEW LPAR . RPAR

    RPAR            shift and go to state 361


state 343

    (178) exp_natarr -> WITHCAPACITY LPAR . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 362
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 344

    (119) exppow -> I64 DPUNTOS DPUNTOS POW LPAR . exp COMA exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 363
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 345

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR . exp COMA exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 364
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 346

    (143) newarray -> LCOR auxexp PCOMA exp RCOR .

    MAS             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENOS           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MULTIPLICACION  reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DIVISION        reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MODULO          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AND             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    OR              reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    IGUALI          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DIF             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MAYOR           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENOR           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MAYORI          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MENORI          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AS              reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    PCOMA           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RLLAV           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    PRINT           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LET             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ID              reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CONTINUE        reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    BREAK           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RETURN          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    IF              reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MATCH           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LOOP            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    WHILE           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    FOR             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LPAR            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    AD              reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    VEC             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    VECTOR          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    MUT             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ANDSINGLE       reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    I64             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    F64             reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ENTERO          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    DECIMAL         reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CADENA          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    BOOLEANO        reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    CARACTER        reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LCOR            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    COMA            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    LLLAV           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RCOR            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    RPAR            reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ARROW2          reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    ORSINGLE        reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)
    PUNTO           reduce using rule 143 (newarray -> LCOR auxexp PCOMA exp RCOR .)


state 347

    (48) brazo -> lista_exp_brazos ARROW2 instruccion_match . COMA

    COMA            shift and go to state 365


state 348

    (49) brazo -> lista_exp_brazos ARROW2 statement . COMA
    (50) brazo -> lista_exp_brazos ARROW2 statement .

    COMA            shift and go to state 366
    RLLAV           reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    LPAR            reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    MENOS           reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    AD              reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    ID              reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    VEC             reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    VECTOR          reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    MUT             reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    ANDSINGLE       reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    I64             reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    F64             reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    ENTERO          reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    DECIMAL         reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    CADENA          reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    BOOLEANO        reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    CARACTER        reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    LCOR            reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    IF              reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    MATCH           reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    LOOP            reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    WHILE           reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)
    FOR             reduce using rule 50 (brazo -> lista_exp_brazos ARROW2 statement .)


state 349

    (53) instruccion_match -> print .

    COMA            reduce using rule 53 (instruccion_match -> print .)


state 350

    (54) instruccion_match -> llamada .
    (109) exp -> llamada .

  ! reduce/reduce conflict for COMA resolved using rule 54 (instruccion_match -> llamada .)
    COMA            reduce using rule 54 (instruccion_match -> llamada .)
    MAS             reduce using rule 109 (exp -> llamada .)
    MENOS           reduce using rule 109 (exp -> llamada .)
    MULTIPLICACION  reduce using rule 109 (exp -> llamada .)
    DIVISION        reduce using rule 109 (exp -> llamada .)
    MODULO          reduce using rule 109 (exp -> llamada .)
    AND             reduce using rule 109 (exp -> llamada .)
    OR              reduce using rule 109 (exp -> llamada .)
    IGUALI          reduce using rule 109 (exp -> llamada .)
    DIF             reduce using rule 109 (exp -> llamada .)
    MAYOR           reduce using rule 109 (exp -> llamada .)
    MENOR           reduce using rule 109 (exp -> llamada .)
    MAYORI          reduce using rule 109 (exp -> llamada .)
    MENORI          reduce using rule 109 (exp -> llamada .)
    AS              reduce using rule 109 (exp -> llamada .)

  ! COMA            [ reduce using rule 109 (exp -> llamada .) ]


state 351

    (55) instruccion_match -> sentencia .
    (110) exp -> sentencia .

  ! reduce/reduce conflict for COMA resolved using rule 55 (instruccion_match -> sentencia .)
    COMA            reduce using rule 55 (instruccion_match -> sentencia .)
    MAS             reduce using rule 110 (exp -> sentencia .)
    MENOS           reduce using rule 110 (exp -> sentencia .)
    MULTIPLICACION  reduce using rule 110 (exp -> sentencia .)
    DIVISION        reduce using rule 110 (exp -> sentencia .)
    MODULO          reduce using rule 110 (exp -> sentencia .)
    AND             reduce using rule 110 (exp -> sentencia .)
    OR              reduce using rule 110 (exp -> sentencia .)
    IGUALI          reduce using rule 110 (exp -> sentencia .)
    DIF             reduce using rule 110 (exp -> sentencia .)
    MAYOR           reduce using rule 110 (exp -> sentencia .)
    MENOR           reduce using rule 110 (exp -> sentencia .)
    MAYORI          reduce using rule 110 (exp -> sentencia .)
    MENORI          reduce using rule 110 (exp -> sentencia .)
    AS              reduce using rule 110 (exp -> sentencia .)

  ! COMA            [ reduce using rule 110 (exp -> sentencia .) ]


state 352

    (56) instruccion_match -> transferencia .

    COMA            reduce using rule 56 (instruccion_match -> transferencia .)


state 353

    (163) llamada -> ID . LPAR RPAR
    (164) llamada -> ID . LPAR lista_exp RPAR
    (162) lista_classtype -> ID .
    (138) exparr -> ID . lista_arr
    (85) lista_acc -> ID .
    (86) lista_arr -> . lista_arr LCOR auxexp RCOR
    (87) lista_arr -> . LCOR auxexp RCOR

    LPAR            shift and go to state 161
    LLLAV           reduce using rule 162 (lista_classtype -> ID .)
    DPUNTOS         reduce using rule 162 (lista_classtype -> ID .)
    PUNTO           reduce using rule 85 (lista_acc -> ID .)
    MAS             reduce using rule 85 (lista_acc -> ID .)
    MENOS           reduce using rule 85 (lista_acc -> ID .)
    MULTIPLICACION  reduce using rule 85 (lista_acc -> ID .)
    DIVISION        reduce using rule 85 (lista_acc -> ID .)
    MODULO          reduce using rule 85 (lista_acc -> ID .)
    AND             reduce using rule 85 (lista_acc -> ID .)
    OR              reduce using rule 85 (lista_acc -> ID .)
    IGUALI          reduce using rule 85 (lista_acc -> ID .)
    DIF             reduce using rule 85 (lista_acc -> ID .)
    MAYOR           reduce using rule 85 (lista_acc -> ID .)
    MENOR           reduce using rule 85 (lista_acc -> ID .)
    MAYORI          reduce using rule 85 (lista_acc -> ID .)
    MENORI          reduce using rule 85 (lista_acc -> ID .)
    AS              reduce using rule 85 (lista_acc -> ID .)
    COMA            reduce using rule 85 (lista_acc -> ID .)
    LCOR            shift and go to state 162

    lista_arr                      shift and go to state 209

state 354

    (51) lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    ARROW2          reduce using rule 51 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    ORSINGLE        reduce using rule 51 (lista_exp_brazos -> lista_exp_brazos ORSINGLE exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 355

    (60) foriterative -> exp PUNTO PUNTO . exp
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 367
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 356

    (134) lista_att -> lista_att COMA ID DPUNTOS . auxexp
    (97) auxexp -> . expstruct
    (98) auxexp -> . exp
    (131) expstruct -> . lista_classtype LLLAV lista_att RLLAV
    (132) expstruct -> . lista_classtype LLLAV RLLAV
    (133) expstruct -> . lista_classtype DPUNTOS DPUNTOS llamada
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (161) lista_classtype -> . lista_classtype DPUNTOS DPUNTOS ID
    (162) lista_classtype -> . ID
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    ID              shift and go to state 164
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    auxexp                         shift and go to state 368
    expstruct                      shift and go to state 103
    exp                            shift and go to state 98
    lista_classtype                shift and go to state 104
    llamada                        shift and go to state 149
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 357

    (170) exp_native -> REMOVE LPAR exp RPAR .

    PUNTO           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MAS             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MENOS           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MULTIPLICACION  reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    DIVISION        reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MODULO          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    AND             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    OR              reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    IGUALI          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    DIF             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MAYOR           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MENOR           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MAYORI          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MENORI          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    AS              reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    PCOMA           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    RLLAV           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    PRINT           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    LET             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    ID              reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    CONTINUE        reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    BREAK           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    RETURN          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    IF              reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MATCH           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    LOOP            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    WHILE           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    FOR             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    LPAR            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    AD              reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    VEC             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    VECTOR          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    MUT             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    ANDSINGLE       reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    I64             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    F64             reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    ENTERO          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    DECIMAL         reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    CADENA          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    BOOLEANO        reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    CARACTER        reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    LCOR            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    COMA            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    LLLAV           reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    RCOR            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    RPAR            reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    ARROW2          reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)
    ORSINGLE        reduce using rule 170 (exp_native -> REMOVE LPAR exp RPAR .)


state 358

    (171) exp_native -> CONTAINS LPAR ANDSINGLE exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 369
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 359

    (172) exp_native -> PUSH LPAR exp RPAR .

    PUNTO           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MAS             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MENOS           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MULTIPLICACION  reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    DIVISION        reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MODULO          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    AND             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    OR              reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    IGUALI          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    DIF             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MAYOR           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MENOR           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MAYORI          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MENORI          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    AS              reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    PCOMA           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    RLLAV           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    PRINT           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    LET             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    ID              reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    CONTINUE        reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    BREAK           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    RETURN          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    IF              reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MATCH           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    LOOP            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    WHILE           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    FOR             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    LPAR            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    AD              reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    VEC             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    VECTOR          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    MUT             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    ANDSINGLE       reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    I64             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    F64             reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    ENTERO          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    DECIMAL         reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    CADENA          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    BOOLEANO        reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    CARACTER        reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    LCOR            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    COMA            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    LLLAV           reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    RCOR            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    RPAR            reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    ARROW2          reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)
    ORSINGLE        reduce using rule 172 (exp_native -> PUSH LPAR exp RPAR .)


state 360

    (173) exp_native -> INSERT LPAR lista_exp RPAR .

    PUNTO           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAS             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENOS           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MULTIPLICACION  reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DIVISION        reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MODULO          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AND             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    OR              reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    IGUALI          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DIF             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAYOR           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENOR           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MAYORI          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MENORI          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AS              reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    PCOMA           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RLLAV           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    PRINT           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LET             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ID              reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CONTINUE        reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    BREAK           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RETURN          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    IF              reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MATCH           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LOOP            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    WHILE           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    FOR             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LPAR            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    AD              reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    VEC             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    VECTOR          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    MUT             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ANDSINGLE       reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    I64             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    F64             reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ENTERO          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    DECIMAL         reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CADENA          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    BOOLEANO        reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    CARACTER        reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LCOR            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    COMA            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    LLLAV           reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RCOR            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    RPAR            reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ARROW2          reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)
    ORSINGLE        reduce using rule 173 (exp_native -> INSERT LPAR lista_exp RPAR .)


state 361

    (177) exp_natarr -> NEW LPAR RPAR .

    MAS             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MENOS           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MULTIPLICACION  reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    DIVISION        reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MODULO          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    AND             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    OR              reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    IGUALI          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    DIF             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MAYOR           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MENOR           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MAYORI          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MENORI          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    AS              reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    PCOMA           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    RLLAV           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    PRINT           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    LET             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    ID              reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    CONTINUE        reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    BREAK           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    RETURN          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    IF              reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MATCH           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    LOOP            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    WHILE           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    FOR             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    LPAR            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    AD              reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    VEC             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    VECTOR          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    MUT             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    ANDSINGLE       reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    I64             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    F64             reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    ENTERO          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    DECIMAL         reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    CADENA          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    BOOLEANO        reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    CARACTER        reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    LCOR            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    COMA            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    LLLAV           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    RCOR            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    RPAR            reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    ARROW2          reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    ORSINGLE        reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)
    PUNTO           reduce using rule 177 (exp_natarr -> NEW LPAR RPAR .)


state 362

    (178) exp_natarr -> WITHCAPACITY LPAR exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 370
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 363

    (119) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp . COMA exp RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    COMA            shift and go to state 371
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 364

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp . COMA exp RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    COMA            shift and go to state 372
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 365

    (48) brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .

    RLLAV           reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LPAR            reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MENOS           reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    AD              reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ID              reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    VEC             reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    VECTOR          reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MUT             reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ANDSINGLE       reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    I64             reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    F64             reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    ENTERO          reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    DECIMAL         reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    CADENA          reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    BOOLEANO        reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    CARACTER        reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LCOR            reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    IF              reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    MATCH           reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    LOOP            reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    WHILE           reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)
    FOR             reduce using rule 48 (brazo -> lista_exp_brazos ARROW2 instruccion_match COMA .)


state 366

    (49) brazo -> lista_exp_brazos ARROW2 statement COMA .

    RLLAV           reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LPAR            reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MENOS           reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    AD              reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ID              reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    VEC             reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    VECTOR          reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MUT             reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ANDSINGLE       reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    I64             reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    F64             reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    ENTERO          reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    DECIMAL         reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    CADENA          reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    BOOLEANO        reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    CARACTER        reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LCOR            reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    IF              reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    MATCH           reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    LOOP            reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    WHILE           reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)
    FOR             reduce using rule 49 (brazo -> lista_exp_brazos ARROW2 statement COMA .)


state 367

    (60) foriterative -> exp PUNTO PUNTO exp .
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    LLLAV           reduce using rule 60 (foriterative -> exp PUNTO PUNTO exp .)
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 368

    (134) lista_att -> lista_att COMA ID DPUNTOS auxexp .

    RLLAV           reduce using rule 134 (lista_att -> lista_att COMA ID DPUNTOS auxexp .)
    COMA            reduce using rule 134 (lista_att -> lista_att COMA ID DPUNTOS auxexp .)


state 369

    (171) exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .

    PUNTO           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MAS             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MENOS           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MULTIPLICACION  reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    DIVISION        reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MODULO          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    AND             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    OR              reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    IGUALI          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    DIF             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MAYOR           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MENOR           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MAYORI          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MENORI          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    AS              reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    PCOMA           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    RLLAV           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    PRINT           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    LET             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    ID              reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    CONTINUE        reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    BREAK           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    RETURN          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    IF              reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MATCH           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    LOOP            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    WHILE           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    FOR             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    LPAR            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    AD              reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    VEC             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    VECTOR          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    MUT             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    ANDSINGLE       reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    I64             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    F64             reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    ENTERO          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    DECIMAL         reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    CADENA          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    BOOLEANO        reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    CARACTER        reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    LCOR            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    COMA            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    LLLAV           reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    RCOR            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    RPAR            reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    ARROW2          reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)
    ORSINGLE        reduce using rule 171 (exp_native -> CONTAINS LPAR ANDSINGLE exp RPAR .)


state 370

    (178) exp_natarr -> WITHCAPACITY LPAR exp RPAR .

    MAS             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENOS           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MULTIPLICACION  reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DIVISION        reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MODULO          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AND             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    OR              reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    IGUALI          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DIF             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MAYOR           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENOR           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MAYORI          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MENORI          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AS              reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    PCOMA           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RLLAV           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    PRINT           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LET             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ID              reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CONTINUE        reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    BREAK           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RETURN          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    IF              reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MATCH           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LOOP            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    WHILE           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    FOR             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LPAR            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    AD              reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    VEC             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    VECTOR          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    MUT             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ANDSINGLE       reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    I64             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    F64             reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ENTERO          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    DECIMAL         reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CADENA          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    BOOLEANO        reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    CARACTER        reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LCOR            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    COMA            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    LLLAV           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RCOR            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    RPAR            reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ARROW2          reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    ORSINGLE        reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)
    PUNTO           reduce using rule 178 (exp_natarr -> WITHCAPACITY LPAR exp RPAR .)


state 371

    (119) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 373
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 372

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA . exp RPAR
    (99) exp -> . LPAR exp LPAR
    (100) exp -> . expmath
    (101) exp -> . expop
    (102) exp -> . exprel
    (103) exp -> . exparr
    (104) exp -> . expvec
    (105) exp -> . exparam
    (106) exp -> . exppow
    (107) exp -> . expcast
    (108) exp -> . lista_acc
    (109) exp -> . llamada
    (110) exp -> . sentencia
    (111) exp -> . valores
    (112) exp -> . valores PUNTO exp_native
    (113) expmath -> . exp MAS exp
    (114) expmath -> . exp MENOS exp
    (115) expmath -> . exp MULTIPLICACION exp
    (116) expmath -> . exp DIVISION exp
    (117) expmath -> . exp MODULO exp
    (118) expmath -> . MENOS exp
    (121) expop -> . exp AND exp
    (122) expop -> . exp OR exp
    (123) expop -> . AD exp
    (125) exprel -> . exp IGUALI exp
    (126) exprel -> . exp DIF exp
    (127) exprel -> . exp MAYOR exp
    (128) exprel -> . exp MENOR exp
    (129) exprel -> . exp MAYORI exp
    (130) exprel -> . exp MENORI exp
    (138) exparr -> . ID lista_arr
    (139) exparr -> . newarray
    (140) expvec -> . VEC AD newarray
    (141) expvec -> . VECTOR DPUNTOS DPUNTOS exp_natarr
    (136) exparam -> . MUT ID
    (137) exparam -> . ANDSINGLE MUT ID
    (119) exppow -> . I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR
    (120) exppow -> . F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR
    (124) expcast -> . exp AS tipo_var
    (83) lista_acc -> . lista_acc PUNTO ID
    (84) lista_acc -> . lista_acc PUNTO exp_native
    (85) lista_acc -> . ID
    (163) llamada -> . ID LPAR RPAR
    (164) llamada -> . ID LPAR lista_exp RPAR
    (33) sentencia -> . if
    (34) sentencia -> . match
    (35) sentencia -> . loop
    (36) sentencia -> . while
    (37) sentencia -> . for
    (144) valores -> . ENTERO
    (145) valores -> . DECIMAL
    (146) valores -> . CADENA
    (147) valores -> . BOOLEANO
    (148) valores -> . CARACTER
    (142) newarray -> . LCOR lista_exp RCOR
    (143) newarray -> . LCOR auxexp PCOMA exp RCOR
    (38) if -> . IF exp statement else
    (43) match -> . MATCH exp match_statement
    (57) loop -> . LOOP statement
    (58) while -> . WHILE exp statement
    (59) for -> . FOR ID IN foriterative statement

    LPAR            shift and go to state 83
    MENOS           shift and go to state 115
    AD              shift and go to state 82
    ID              shift and go to state 151
    VEC             shift and go to state 117
    VECTOR          shift and go to state 118
    MUT             shift and go to state 86
    ANDSINGLE       shift and go to state 119
    I64             shift and go to state 120
    F64             shift and go to state 121
    ENTERO          shift and go to state 122
    DECIMAL         shift and go to state 123
    CADENA          shift and go to state 124
    BOOLEANO        shift and go to state 125
    CARACTER        shift and go to state 126
    LCOR            shift and go to state 127
    IF              shift and go to state 97
    MATCH           shift and go to state 99
    LOOP            shift and go to state 100
    WHILE           shift and go to state 101
    FOR             shift and go to state 102

    exp                            shift and go to state 374
    expmath                        shift and go to state 105
    expop                          shift and go to state 106
    exprel                         shift and go to state 107
    exparr                         shift and go to state 108
    expvec                         shift and go to state 109
    exparam                        shift and go to state 110
    exppow                         shift and go to state 111
    expcast                        shift and go to state 112
    lista_acc                      shift and go to state 113
    llamada                        shift and go to state 149
    sentencia                      shift and go to state 150
    valores                        shift and go to state 114
    newarray                       shift and go to state 116
    if                             shift and go to state 89
    match                          shift and go to state 90
    loop                           shift and go to state 91
    while                          shift and go to state 92
    for                            shift and go to state 93

state 373

    (119) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 375
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 374

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp . RPAR
    (113) expmath -> exp . MAS exp
    (114) expmath -> exp . MENOS exp
    (115) expmath -> exp . MULTIPLICACION exp
    (116) expmath -> exp . DIVISION exp
    (117) expmath -> exp . MODULO exp
    (121) expop -> exp . AND exp
    (122) expop -> exp . OR exp
    (125) exprel -> exp . IGUALI exp
    (126) exprel -> exp . DIF exp
    (127) exprel -> exp . MAYOR exp
    (128) exprel -> exp . MENOR exp
    (129) exprel -> exp . MAYORI exp
    (130) exprel -> exp . MENORI exp
    (124) expcast -> exp . AS tipo_var

    RPAR            shift and go to state 376
    MAS             shift and go to state 167
    MENOS           shift and go to state 168
    MULTIPLICACION  shift and go to state 169
    DIVISION        shift and go to state 170
    MODULO          shift and go to state 171
    AND             shift and go to state 172
    OR              shift and go to state 173
    IGUALI          shift and go to state 174
    DIF             shift and go to state 175
    MAYOR           shift and go to state 176
    MENOR           shift and go to state 177
    MAYORI          shift and go to state 178
    MENORI          shift and go to state 179
    AS              shift and go to state 180


state 375

    (119) exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .

    MAS             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENOS           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MULTIPLICACION  reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DIVISION        reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MODULO          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AND             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    OR              reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    IGUALI          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DIF             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MAYOR           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENOR           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MAYORI          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MENORI          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AS              reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    PCOMA           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RLLAV           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    PRINT           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LET             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ID              reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CONTINUE        reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    BREAK           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RETURN          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    IF              reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MATCH           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LOOP            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    WHILE           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    FOR             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LPAR            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    AD              reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    VEC             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    VECTOR          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    MUT             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ANDSINGLE       reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    I64             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    F64             reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ENTERO          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    DECIMAL         reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CADENA          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    BOOLEANO        reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    CARACTER        reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LCOR            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    COMA            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    LLLAV           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RCOR            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    RPAR            reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ARROW2          reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    ORSINGLE        reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)
    PUNTO           reduce using rule 119 (exppow -> I64 DPUNTOS DPUNTOS POW LPAR exp COMA exp RPAR .)


state 376

    (120) exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .

    MAS             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENOS           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MULTIPLICACION  reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DIVISION        reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MODULO          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AND             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    OR              reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    IGUALI          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DIF             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MAYOR           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENOR           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MAYORI          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MENORI          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AS              reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    PCOMA           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RLLAV           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    PRINT           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LET             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ID              reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CONTINUE        reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    BREAK           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RETURN          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    IF              reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MATCH           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LOOP            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    WHILE           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    FOR             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LPAR            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    AD              reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    VEC             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    VECTOR          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    MUT             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ANDSINGLE       reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    I64             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    F64             reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ENTERO          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    DECIMAL         reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CADENA          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    BOOLEANO        reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    CARACTER        reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LCOR            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    COMA            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    LLLAV           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RCOR            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    RPAR            reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ARROW2          reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    ORSINGLE        reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)
    PUNTO           reduce using rule 120 (exppow -> F64 DPUNTOS DPUNTOS POWF LPAR exp COMA exp RPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PCOMA in state 78 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 88 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 88 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 95 resolved as shift
WARNING: shift/reduce conflict for ID in state 95 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 95 resolved as shift
WARNING: shift/reduce conflict for AD in state 95 resolved as shift
WARNING: shift/reduce conflict for VEC in state 95 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 95 resolved as shift
WARNING: shift/reduce conflict for MUT in state 95 resolved as shift
WARNING: shift/reduce conflict for ANDSINGLE in state 95 resolved as shift
WARNING: shift/reduce conflict for I64 in state 95 resolved as shift
WARNING: shift/reduce conflict for F64 in state 95 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 95 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 95 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 95 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 95 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 95 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 95 resolved as shift
WARNING: shift/reduce conflict for IF in state 95 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 95 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 95 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 95 resolved as shift
WARNING: shift/reduce conflict for FOR in state 95 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 96 resolved as shift
WARNING: shift/reduce conflict for ID in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 96 resolved as shift
WARNING: shift/reduce conflict for AD in state 96 resolved as shift
WARNING: shift/reduce conflict for VEC in state 96 resolved as shift
WARNING: shift/reduce conflict for VECTOR in state 96 resolved as shift
WARNING: shift/reduce conflict for MUT in state 96 resolved as shift
WARNING: shift/reduce conflict for ANDSINGLE in state 96 resolved as shift
WARNING: shift/reduce conflict for I64 in state 96 resolved as shift
WARNING: shift/reduce conflict for F64 in state 96 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 96 resolved as shift
WARNING: shift/reduce conflict for DECIMAL in state 96 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 96 resolved as shift
WARNING: shift/reduce conflict for BOOLEANO in state 96 resolved as shift
WARNING: shift/reduce conflict for CARACTER in state 96 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 96 resolved as shift
WARNING: shift/reduce conflict for IF in state 96 resolved as shift
WARNING: shift/reduce conflict for MATCH in state 96 resolved as shift
WARNING: shift/reduce conflict for LOOP in state 96 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 96 resolved as shift
WARNING: shift/reduce conflict for FOR in state 96 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 98 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 113 resolved as shift
WARNING: shift/reduce conflict for PUNTO in state 114 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 151 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 151 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 160 resolved as shift
WARNING: shift/reduce conflict for LPAR in state 164 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 164 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 203 resolved as shift
WARNING: shift/reduce conflict for LCOR in state 209 resolved as shift
WARNING: shift/reduce conflict for MAS in state 228 resolved as shift
WARNING: shift/reduce conflict for MENOS in state 228 resolved as shift
WARNING: shift/reduce conflict for MULTIPLICACION in state 228 resolved as shift
WARNING: shift/reduce conflict for DIVISION in state 228 resolved as shift
WARNING: shift/reduce conflict for MODULO in state 228 resolved as shift
WARNING: shift/reduce conflict for AND in state 228 resolved as shift
WARNING: shift/reduce conflict for OR in state 228 resolved as shift
WARNING: shift/reduce conflict for IGUALI in state 228 resolved as shift
WARNING: shift/reduce conflict for DIF in state 228 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 228 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 228 resolved as shift
WARNING: shift/reduce conflict for MAYORI in state 228 resolved as shift
WARNING: shift/reduce conflict for MENORI in state 228 resolved as shift
WARNING: shift/reduce conflict for AS in state 228 resolved as shift
WARNING: reduce/reduce conflict in state 79 resolved using rule (instruccion_l -> sentencia)
WARNING: rejected rule (exp -> sentencia) in state 79
WARNING: reduce/reduce conflict in state 88 resolved using rule (lista_assign -> ID)
WARNING: rejected rule (lista_acc -> ID) in state 88
WARNING: reduce/reduce conflict in state 350 resolved using rule (instruccion_match -> llamada)
WARNING: rejected rule (exp -> llamada) in state 350
WARNING: reduce/reduce conflict in state 351 resolved using rule (instruccion_match -> sentencia)
WARNING: rejected rule (exp -> sentencia) in state 351
